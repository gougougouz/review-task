From: <Saved by Blink>
Snapshot-Content-Location: https://pytorch.org/docs/1.13/torch.html
Subject: =?utf-8?Q?torch=20=E2=80=94=20PyTorch=201.13=20documentation?=
Date: Sun, 26 Feb 2023 11:09:04 -0000
MIME-Version: 1.0
Content-Type: multipart/related;
	type="text/html";
	boundary="----MultipartBoundary--p77pSlE97gVxA9vHZ3llR7beGEIQoxVXk04dgXijz8----"


------MultipartBoundary--p77pSlE97gVxA9vHZ3llR7beGEIQoxVXk04dgXijz8----
Content-Type: text/html
Content-ID: <frame-318510CE95EF137C46163BE980E5F0D3@mhtml.blink>
Content-Transfer-Encoding: quoted-printable
Content-Location: https://pytorch.org/docs/1.13/torch.html

<!DOCTYPE html><!--[if IE 8]><html class=3D"no-js lt-ie9" lang=3D"en" > <![=
endif]--><!--[if gt IE 8]><!--><html class=3D" js flexbox canvas canvastext=
 webgl no-touch geolocation postmessage websqldatabase indexeddb hashchange=
 history draganddrop websockets rgba hsla multiplebgs backgroundsize border=
image borderradius boxshadow textshadow opacity cssanimations csscolumns cs=
sgradients cssreflections csstransforms csstransforms3d csstransitions font=
face generatedcontent video audio localstorage sessionstorage webworkers no=
-applicationcache svg inlinesvg smil svgclippaths" lang=3D"en" style=3D""><=
!--<![endif]--><head><meta http-equiv=3D"Content-Type" content=3D"text/html=
; charset=3DUTF-8"><link rel=3D"stylesheet" type=3D"text/css" href=3D"cid:c=
ss-ce3b60a4-a9b0-4129-bc7d-6162983fff0f@mhtml.blink" /><link rel=3D"stylesh=
eet" type=3D"text/css" href=3D"cid:css-797454bc-79b1-4a2a-9a2c-0e49c3371ff7=
@mhtml.blink" /><link rel=3D"stylesheet" type=3D"text/css" href=3D"cid:css-=
a89aacc6-b923-4468-bf2b-473f52ae9dca@mhtml.blink" /><link rel=3D"stylesheet=
" type=3D"text/css" href=3D"cid:css-0be40455-f0ba-470e-9f9f-450660ad106a@mh=
tml.blink" /><link rel=3D"stylesheet" type=3D"text/css" href=3D"cid:css-927=
782e6-f929-4008-b2f7-bd5128fa9ad4@mhtml.blink" />
 =20
  <meta name=3D"generator" content=3D"Docutils 0.18.1: http://docutils.sour=
ceforge.net/">

  <meta name=3D"viewport" content=3D"width=3Ddevice-width, initial-scale=3D=
1.0">
 =20
  <title>torch =E2=80=94 PyTorch 1.13 documentation</title>
 =20

 =20
 =20
 =20
 =20
    <link rel=3D"canonical" href=3D"https://pytorch.org/docs/stable/torch.h=
tml">
 =20

 =20

 =20
 =20
   =20

 =20

  <link rel=3D"stylesheet" href=3D"https://pytorch.org/docs/1.13/_static/cs=
s/theme.css" type=3D"text/css">
  <!-- <link rel=3D"stylesheet" href=3D"_static/pygments.css" type=3D"text/=
css" /> -->
  <link rel=3D"stylesheet" href=3D"https://pytorch.org/docs/1.13/_static/py=
gments.css" type=3D"text/css">
  <link rel=3D"stylesheet" href=3D"https://pytorch.org/docs/1.13/_static/cs=
s/theme.css" type=3D"text/css">
  <link rel=3D"stylesheet" href=3D"https://pytorch.org/docs/1.13/_static/co=
pybutton.css" type=3D"text/css">
  <link rel=3D"stylesheet" href=3D"https://cdn.jsdelivr.net/npm/katex@0.10.=
0-beta/dist/katex.min.css" type=3D"text/css">
  <link rel=3D"stylesheet" href=3D"https://cdn.jsdelivr.net/npm/katex@0.13.=
11/dist/katex.min.css" type=3D"text/css">
  <link rel=3D"stylesheet" href=3D"https://pytorch.org/docs/1.13/_static/ka=
tex-math.css" type=3D"text/css">
  <link rel=3D"stylesheet" href=3D"https://pytorch.org/docs/1.13/_static/sp=
hinx-dropdown.css" type=3D"text/css">
  <link rel=3D"stylesheet" href=3D"https://pytorch.org/docs/1.13/_static/pa=
nels-bootstrap.min.css" type=3D"text/css">
  <link rel=3D"stylesheet" href=3D"https://pytorch.org/docs/1.13/_static/cs=
s/jit.css" type=3D"text/css">
    <link rel=3D"index" title=3D"Index" href=3D"https://pytorch.org/docs/1.=
13/genindex.html">
    <link rel=3D"search" title=3D"Search" href=3D"https://pytorch.org/docs/=
1.13/search.html">
    <link rel=3D"next" title=3D"torch.is_tensor" href=3D"https://pytorch.or=
g/docs/1.13/generated/torch.is_tensor.html">
    <link rel=3D"prev" title=3D"torch::deploy has been moved to pytorch/mul=
tipy" href=3D"https://pytorch.org/docs/1.13/deploy.html">


  <!-- Google Analytics -->
 =20
   =20
   =20
 =20
  <!-- End Google Analytics -->
 =20


 =20
 =20

  <!-- Preload the theme fonts -->

<link rel=3D"preload" href=3D"https://pytorch.org/docs/1.13/_static/fonts/F=
reightSans/freight-sans-book.woff2" as=3D"font" type=3D"font/woff2" crossor=
igin=3D"anonymous">
<link rel=3D"preload" href=3D"https://pytorch.org/docs/1.13/_static/fonts/F=
reightSans/freight-sans-medium.woff2" as=3D"font" type=3D"font/woff2" cross=
origin=3D"anonymous">
<link rel=3D"preload" href=3D"https://pytorch.org/docs/1.13/_static/fonts/I=
BMPlexMono/IBMPlexMono-Medium.woff2" as=3D"font" type=3D"font/woff2" crosso=
rigin=3D"anonymous">
<link rel=3D"preload" href=3D"https://pytorch.org/docs/1.13/_static/fonts/F=
reightSans/freight-sans-bold.woff2" as=3D"font" type=3D"font/woff2" crossor=
igin=3D"anonymous">
<link rel=3D"preload" href=3D"https://pytorch.org/docs/1.13/_static/fonts/F=
reightSans/freight-sans-medium-italic.woff2" as=3D"font" type=3D"font/woff2=
" crossorigin=3D"anonymous">
<link rel=3D"preload" href=3D"https://pytorch.org/docs/1.13/_static/fonts/I=
BMPlexMono/IBMPlexMono-SemiBold.woff2" as=3D"font" type=3D"font/woff2" cros=
sorigin=3D"anonymous">

<!-- Preload the katex fonts -->

<link rel=3D"preload" href=3D"https://cdn.jsdelivr.net/npm/katex@0.10.0/dis=
t/fonts/KaTeX_Math-Italic.woff2" as=3D"font" type=3D"font/woff2" crossorigi=
n=3D"anonymous">
<link rel=3D"preload" href=3D"https://cdn.jsdelivr.net/npm/katex@0.10.0/dis=
t/fonts/KaTeX_Main-Regular.woff2" as=3D"font" type=3D"font/woff2" crossorig=
in=3D"anonymous">
<link rel=3D"preload" href=3D"https://cdn.jsdelivr.net/npm/katex@0.10.0/dis=
t/fonts/KaTeX_Main-Bold.woff2" as=3D"font" type=3D"font/woff2" crossorigin=
=3D"anonymous">
<link rel=3D"preload" href=3D"https://cdn.jsdelivr.net/npm/katex@0.10.0/dis=
t/fonts/KaTeX_Size1-Regular.woff2" as=3D"font" type=3D"font/woff2" crossori=
gin=3D"anonymous">
<link rel=3D"preload" href=3D"https://cdn.jsdelivr.net/npm/katex@0.10.0/dis=
t/fonts/KaTeX_Size4-Regular.woff2" as=3D"font" type=3D"font/woff2" crossori=
gin=3D"anonymous">
<link rel=3D"preload" href=3D"https://cdn.jsdelivr.net/npm/katex@0.10.0/dis=
t/fonts/KaTeX_Size2-Regular.woff2" as=3D"font" type=3D"font/woff2" crossori=
gin=3D"anonymous">
<link rel=3D"preload" href=3D"https://cdn.jsdelivr.net/npm/katex@0.10.0/dis=
t/fonts/KaTeX_Size3-Regular.woff2" as=3D"font" type=3D"font/woff2" crossori=
gin=3D"anonymous">
<link rel=3D"preload" href=3D"https://cdn.jsdelivr.net/npm/katex@0.10.0/dis=
t/fonts/KaTeX_Caligraphic-Regular.woff2" as=3D"font" type=3D"font/woff2" cr=
ossorigin=3D"anonymous">
  <link rel=3D"stylesheet" href=3D"https://use.fontawesome.com/releases/v5.=
15.2/css/all.css" crossorigin=3D"anonymous">
</head>

<body class=3D"pytorch-body"><div class=3D"container-fluid header-holder tu=
torials-header" id=3D"header-holder">
  <div class=3D"container">
    <div class=3D"header-container">
      <a class=3D"header-logo" href=3D"https://pytorch.org/" aria-label=3D"=
PyTorch"></a>

      <div class=3D"main-menu">
        <ul>
          <li>
            <a href=3D"https://pytorch.org/get-started">Get Started</a>
          </li>

          <li>
            <a href=3D"https://pytorch.org/ecosystem">Ecosystem</a>
          </li>

          <li>
            <a href=3D"https://pytorch.org/mobile">Mobile</a>
          </li>

          <li>
            <a href=3D"https://pytorch.org/blog/">Blog</a>
          </li>

          <li>
            <a href=3D"https://pytorch.org/tutorials">Tutorials</a>
          </li>

          <li class=3D"active docs-active">
            <div id=3D"resourcesDropdownButton" data-toggle=3D"resources-dr=
opdown" class=3D"resources-dropdown">
              <a class=3D"resource-option with-down-orange-arrow">
                Docs
              </a>
              <div class=3D"resources-dropdown-menu">
                <a class=3D"doc-dropdown-option nav-dropdown-item" href=3D"=
https://pytorch.org/docs/stable/index.html">
                  <span class=3D"dropdown-title">PyTorch</span>
                  <p></p>
                </a>
                <a class=3D"doc-dropdown-option nav-dropdown-item" href=3D"=
https://pytorch.org/audio/stable/index.html">
                  <span class=3D"dropdown-title">torchaudio</span>
                  <p></p>
                </a>
                <a class=3D"doc-dropdown-option nav-dropdown-item" href=3D"=
https://pytorch.org/text/stable/index.html">
                  <span class=3D"dropdown-title">torchtext</span>
                  <p></p>
                </a>
                <a class=3D"doc-dropdown-option nav-dropdown-item" href=3D"=
https://pytorch.org/vision/stable/index.html">
                  <span class=3D"dropdown-title">torchvision</span>
                  <p></p>
                </a>
                <a class=3D"doc-dropdown-option nav-dropdown-item" href=3D"=
https://pytorch.org/torcharrow">
                  <span class=3D"dropdown-title">torcharrow</span>
                  <p></p>
                </a>
                <a class=3D"doc-dropdown-option nav-dropdown-item" href=3D"=
https://pytorch.org/data">
                  <span class=3D"dropdown-title">TorchData</span>
                  <p></p>
                </a>
                <a class=3D"doc-dropdown-option nav-dropdown-item" href=3D"=
https://pytorch.org/torchrec">
                  <span class=3D"dropdown-title">TorchRec</span>
                  <p></p>
                </a>
                <a class=3D"doc-dropdown-option nav-dropdown-item" href=3D"=
https://pytorch.org/serve/">
                  <span class=3D"dropdown-title">TorchServe</span>
                  <p></p>
                </a>
                <a class=3D"doc-dropdown-option nav-dropdown-item" href=3D"=
https://pytorch.org/torchx/">
                  <span class=3D"dropdown-title">TorchX</span>
                  <p></p>
                </a>
                <a class=3D"doc-dropdown-option nav-dropdown-item" href=3D"=
https://pytorch.org/xla">
                  <span class=3D"dropdown-title">PyTorch on XLA Devices</sp=
an>
                  <p></p>
                </a>
            </div>
          </div></li>

          <li>
            <div id=3D"resourcesDropdownButton" data-toggle=3D"resources-dr=
opdown" class=3D"resources-dropdown">
              <a class=3D"resource-option with-down-arrow">
                Resources
              </a>
              <div class=3D"resources-dropdown-menu">
                <a class=3D"nav-dropdown-item" href=3D"https://pytorch.org/=
features">
                  <span class=3D"dropdown-title">About</span>
                  <p>Learn about PyTorch=E2=80=99s features and capabilitie=
s</p>
                </a>
                <a class=3D"nav-dropdown-item" href=3D"https://pytorch.org/=
foundation">
                  <span class=3D"dropdown-title">PyTorch Foundation</span>
                  <p>Learn about the PyTorch foundation</p>
                </a>
                <a class=3D"nav-dropdown-item" href=3D"https://pytorch.org/=
#community-module">
                  <span class=3D"dropdown-title">Community</span>
                  <p>Join the PyTorch developer community to contribute, le=
arn, and get your questions answered.</p>
                </a>
                <a class=3D"nav-dropdown-item" href=3D"https://pytorch.org/=
community-stories">
                  <span class=3D"dropdown-title">Community Stories</span>
                  <p>Learn how our community solves real, everyday machine =
learning problems with PyTorch.</p>
                </a>
                <a class=3D"nav-dropdown-item" href=3D"https://pytorch.org/=
resources">
                  <span class=3D"dropdown-title">Developer Resources</span>
                  <p>Find resources and get questions answered</p>
                </a>
                <a class=3D"nav-dropdown-item" href=3D"https://pytorch.org/=
events">
                  <span class=3D"dropdown-title">Events</span>
                  <p>Find events, webinars, and podcasts</p>
                </a>
                <a class=3D"nav-dropdown-item" href=3D"https://discuss.pyto=
rch.org/" target=3D"_blank">
                  <span class=3D"dropdown-title">Forums</span>
                  <p>A place to discuss PyTorch code, issues, install, rese=
arch</p>
                </a>
                <a class=3D"nav-dropdown-item" href=3D"https://pytorch.org/=
hub">
                  <span class=3D"dropdown-title">Models (Beta)</span>
                  <p>Discover, publish, and reuse pre-trained models</p>
                </a>
              </div>
            </div>
          </li>

          <li>
            <a href=3D"https://github.com/pytorch/pytorch">GitHub</a>
          </li>
        </ul>
      </div>

      <a class=3D"main-menu-open-button" href=3D"https://pytorch.org/docs/1=
.13/torch.html#" data-behavior=3D"open-mobile-menu"></a>
    </div>
  </div>
</div>



  =20

   =20

    <div class=3D"table-of-contents-link-wrapper">
      <span>Table of Contents</span>
      <a href=3D"https://pytorch.org/docs/1.13/torch.html#" class=3D"toggle=
-table-of-contents" data-behavior=3D"toggle-table-of-contents"></a>
    </div>

    <nav data-toggle=3D"wy-nav-shift" class=3D"pytorch-left-menu" id=3D"pyt=
orch-left-menu" style=3D"height: 100%;">
      <div class=3D"pytorch-side-scroll">
        <div class=3D"pytorch-menu pytorch-menu-vertical" data-spy=3D"affix=
" role=3D"navigation" aria-label=3D"main navigation">
          <div class=3D"pytorch-left-menu-search">
           =20
    <div class=3D"version">
      <a href=3D"https://pytorch.org/docs/versions.html">1.13 =E2=96=BC</a>
    </div>
   =20


 =20


<div role=3D"search">
  <form id=3D"rtd-search-form" class=3D"wy-form" action=3D"https://pytorch.=
org/docs/1.13/search.html" method=3D"get">
    <input type=3D"text" name=3D"q" placeholder=3D"Search Docs">
   =20
   =20
  </form>
</div>

          </div>

         =20


           =20
           =20
             =20
           =20
           =20
              <p class=3D"caption" role=3D"heading"><span class=3D"caption-=
text checked">Community</span><span class=3D"hide-menu collapse">[ - ]</spa=
n><span class=3D"expand-menu">[ + ]</span></p>
<ul style=3D"display: none;">
<li class=3D"toctree-l1"><a class=3D"reference internal" href=3D"https://py=
torch.org/docs/1.13/community/build_ci_governance.html">PyTorch Governance =
| Build + CI</a></li>
<li class=3D"toctree-l1"><a class=3D"reference internal" href=3D"https://py=
torch.org/docs/1.13/community/contribution_guide.html">PyTorch Contribution=
 Guide</a></li>
<li class=3D"toctree-l1"><a class=3D"reference internal" href=3D"https://py=
torch.org/docs/1.13/community/design.html">PyTorch Design Philosophy</a></l=
i>
<li class=3D"toctree-l1"><a class=3D"reference internal" href=3D"https://py=
torch.org/docs/1.13/community/governance.html">PyTorch Governance | Mechani=
cs</a></li>
<li class=3D"toctree-l1"><a class=3D"reference internal" href=3D"https://py=
torch.org/docs/1.13/community/persons_of_interest.html">PyTorch Governance =
| Maintainers</a></li>
</ul>
<p class=3D"caption" role=3D"heading"><span class=3D"caption-text checked">=
Developer Notes</span><span class=3D"hide-menu collapse">[ - ]</span><span =
class=3D"expand-menu">[ + ]</span></p>
<ul style=3D"display: none;">
<li class=3D"toctree-l1"><a class=3D"reference internal" href=3D"https://py=
torch.org/docs/1.13/notes/amp_examples.html">CUDA Automatic Mixed Precision=
 examples</a></li>
<li class=3D"toctree-l1"><a class=3D"reference internal" href=3D"https://py=
torch.org/docs/1.13/notes/autograd.html">Autograd mechanics</a></li>
<li class=3D"toctree-l1"><a class=3D"reference internal" href=3D"https://py=
torch.org/docs/1.13/notes/broadcasting.html">Broadcasting semantics</a></li=
>
<li class=3D"toctree-l1"><a class=3D"reference internal" href=3D"https://py=
torch.org/docs/1.13/notes/cpu_threading_torchscript_inference.html">CPU thr=
eading and TorchScript inference</a></li>
<li class=3D"toctree-l1"><a class=3D"reference internal" href=3D"https://py=
torch.org/docs/1.13/notes/cuda.html">CUDA semantics</a></li>
<li class=3D"toctree-l1"><a class=3D"reference internal" href=3D"https://py=
torch.org/docs/1.13/notes/ddp.html">Distributed Data Parallel</a></li>
<li class=3D"toctree-l1"><a class=3D"reference internal" href=3D"https://py=
torch.org/docs/1.13/notes/extending.html">Extending PyTorch</a></li>
<li class=3D"toctree-l1"><a class=3D"reference internal" href=3D"https://py=
torch.org/docs/1.13/notes/faq.html">Frequently Asked Questions</a></li>
<li class=3D"toctree-l1"><a class=3D"reference internal" href=3D"https://py=
torch.org/docs/1.13/notes/gradcheck.html">Gradcheck mechanics</a></li>
<li class=3D"toctree-l1"><a class=3D"reference internal" href=3D"https://py=
torch.org/docs/1.13/notes/hip.html">HIP (ROCm) semantics</a></li>
<li class=3D"toctree-l1"><a class=3D"reference internal" href=3D"https://py=
torch.org/docs/1.13/notes/large_scale_deployments.html">Features for large-=
scale deployments</a></li>
<li class=3D"toctree-l1"><a class=3D"reference internal" href=3D"https://py=
torch.org/docs/1.13/notes/modules.html">Modules</a></li>
<li class=3D"toctree-l1"><a class=3D"reference internal" href=3D"https://py=
torch.org/docs/1.13/notes/mps.html">MPS backend</a></li>
<li class=3D"toctree-l1"><a class=3D"reference internal" href=3D"https://py=
torch.org/docs/1.13/notes/multiprocessing.html">Multiprocessing best practi=
ces</a></li>
<li class=3D"toctree-l1"><a class=3D"reference internal" href=3D"https://py=
torch.org/docs/1.13/notes/numerical_accuracy.html">Numerical accuracy</a></=
li>
<li class=3D"toctree-l1"><a class=3D"reference internal" href=3D"https://py=
torch.org/docs/1.13/notes/randomness.html">Reproducibility</a></li>
<li class=3D"toctree-l1"><a class=3D"reference internal" href=3D"https://py=
torch.org/docs/1.13/notes/serialization.html">Serialization semantics</a></=
li>
<li class=3D"toctree-l1"><a class=3D"reference internal" href=3D"https://py=
torch.org/docs/1.13/notes/windows.html">Windows FAQ</a></li>
</ul>
<p class=3D"caption" role=3D"heading"><span class=3D"caption-text checked">=
Language Bindings</span><span class=3D"hide-menu collapse">[ - ]</span><spa=
n class=3D"expand-menu">[ + ]</span></p>
<ul style=3D"display: none;">
<li class=3D"toctree-l1"><a class=3D"reference internal" href=3D"https://py=
torch.org/docs/1.13/cpp_index.html">C++</a></li>
<li class=3D"toctree-l1"><a class=3D"reference external" href=3D"https://py=
torch.org/javadoc/">Javadoc</a></li>
<li class=3D"toctree-l1"><a class=3D"reference internal" href=3D"https://py=
torch.org/docs/1.13/deploy.html">torch::deploy</a></li>
</ul>
<p class=3D"caption" role=3D"heading"><span class=3D"caption-text checked">=
Python API</span><span class=3D"hide-menu">[ - ]</span><span class=3D"expan=
d-menu collapse">[ + ]</span></p>
<ul class=3D"current">
<li class=3D"toctree-l1 current"><a class=3D"reference internal current" hr=
ef=3D"https://pytorch.org/docs/1.13/torch.html#">torch</a></li>
<li class=3D"toctree-l1"><a class=3D"reference internal" href=3D"https://py=
torch.org/docs/1.13/nn.html">torch.nn</a></li>
<li class=3D"toctree-l1"><a class=3D"reference internal" href=3D"https://py=
torch.org/docs/1.13/nn.functional.html">torch.nn.functional</a></li>
<li class=3D"toctree-l1"><a class=3D"reference internal" href=3D"https://py=
torch.org/docs/1.13/tensors.html">torch.Tensor</a></li>
<li class=3D"toctree-l1"><a class=3D"reference internal" href=3D"https://py=
torch.org/docs/1.13/tensor_attributes.html">Tensor Attributes</a></li>
<li class=3D"toctree-l1"><a class=3D"reference internal" href=3D"https://py=
torch.org/docs/1.13/tensor_view.html">Tensor Views</a></li>
<li class=3D"toctree-l1"><a class=3D"reference internal" href=3D"https://py=
torch.org/docs/1.13/amp.html">torch.amp</a></li>
<li class=3D"toctree-l1"><a class=3D"reference internal" href=3D"https://py=
torch.org/docs/1.13/autograd.html">torch.autograd</a></li>
<li class=3D"toctree-l1"><a class=3D"reference internal" href=3D"https://py=
torch.org/docs/1.13/library.html">torch.library</a></li>
<li class=3D"toctree-l1"><a class=3D"reference internal" href=3D"https://py=
torch.org/docs/1.13/cuda.html">torch.cuda</a></li>
<li class=3D"toctree-l1"><a class=3D"reference internal" href=3D"https://py=
torch.org/docs/1.13/backends.html">torch.backends</a></li>
<li class=3D"toctree-l1"><a class=3D"reference internal" href=3D"https://py=
torch.org/docs/1.13/distributed.html">torch.distributed</a></li>
<li class=3D"toctree-l1"><a class=3D"reference internal" href=3D"https://py=
torch.org/docs/1.13/distributed.algorithms.join.html">torch.distributed.alg=
orithms.join</a></li>
<li class=3D"toctree-l1"><a class=3D"reference internal" href=3D"https://py=
torch.org/docs/1.13/distributed.elastic.html">torch.distributed.elastic</a>=
</li>
<li class=3D"toctree-l1"><a class=3D"reference internal" href=3D"https://py=
torch.org/docs/1.13/fsdp.html">torch.distributed.fsdp</a></li>
<li class=3D"toctree-l1"><a class=3D"reference internal" href=3D"https://py=
torch.org/docs/1.13/distributed.optim.html">torch.distributed.optim</a></li=
>
<li class=3D"toctree-l1"><a class=3D"reference internal" href=3D"https://py=
torch.org/docs/1.13/distributions.html">torch.distributions</a></li>
<li class=3D"toctree-l1"><a class=3D"reference internal" href=3D"https://py=
torch.org/docs/1.13/fft.html">torch.fft</a></li>
<li class=3D"toctree-l1"><a class=3D"reference internal" href=3D"https://py=
torch.org/docs/1.13/futures.html">torch.futures</a></li>
<li class=3D"toctree-l1"><a class=3D"reference internal" href=3D"https://py=
torch.org/docs/1.13/fx.html">torch.fx</a></li>
<li class=3D"toctree-l1"><a class=3D"reference internal" href=3D"https://py=
torch.org/docs/1.13/hub.html">torch.hub</a></li>
<li class=3D"toctree-l1"><a class=3D"reference internal" href=3D"https://py=
torch.org/docs/1.13/jit.html">torch.jit</a></li>
<li class=3D"toctree-l1"><a class=3D"reference internal" href=3D"https://py=
torch.org/docs/1.13/linalg.html">torch.linalg</a></li>
<li class=3D"toctree-l1"><a class=3D"reference internal" href=3D"https://py=
torch.org/docs/1.13/monitor.html">torch.monitor</a></li>
<li class=3D"toctree-l1"><a class=3D"reference internal" href=3D"https://py=
torch.org/docs/1.13/special.html">torch.special</a></li>
<li class=3D"toctree-l1"><a class=3D"reference internal" href=3D"https://py=
torch.org/docs/1.13/torch.overrides.html">torch.overrides</a></li>
<li class=3D"toctree-l1"><a class=3D"reference internal" href=3D"https://py=
torch.org/docs/1.13/package.html">torch.package</a></li>
<li class=3D"toctree-l1"><a class=3D"reference internal" href=3D"https://py=
torch.org/docs/1.13/profiler.html">torch.profiler</a></li>
<li class=3D"toctree-l1"><a class=3D"reference internal" href=3D"https://py=
torch.org/docs/1.13/nn.init.html">torch.nn.init</a></li>
<li class=3D"toctree-l1"><a class=3D"reference internal" href=3D"https://py=
torch.org/docs/1.13/onnx.html">torch.onnx</a></li>
<li class=3D"toctree-l1"><a class=3D"reference internal" href=3D"https://py=
torch.org/docs/1.13/optim.html">torch.optim</a></li>
<li class=3D"toctree-l1"><a class=3D"reference internal" href=3D"https://py=
torch.org/docs/1.13/complex_numbers.html">Complex Numbers</a></li>
<li class=3D"toctree-l1"><a class=3D"reference internal" href=3D"https://py=
torch.org/docs/1.13/ddp_comm_hooks.html">DDP Communication Hooks</a></li>
<li class=3D"toctree-l1"><a class=3D"reference internal" href=3D"https://py=
torch.org/docs/1.13/pipeline.html">Pipeline Parallelism</a></li>
<li class=3D"toctree-l1"><a class=3D"reference internal" href=3D"https://py=
torch.org/docs/1.13/quantization.html">Quantization</a></li>
<li class=3D"toctree-l1"><a class=3D"reference internal" href=3D"https://py=
torch.org/docs/1.13/rpc.html">Distributed RPC Framework</a></li>
<li class=3D"toctree-l1"><a class=3D"reference internal" href=3D"https://py=
torch.org/docs/1.13/random.html">torch.random</a></li>
<li class=3D"toctree-l1"><a class=3D"reference internal" href=3D"https://py=
torch.org/docs/1.13/masked.html">torch.masked</a></li>
<li class=3D"toctree-l1"><a class=3D"reference internal" href=3D"https://py=
torch.org/docs/1.13/nested.html">torch.nested</a></li>
<li class=3D"toctree-l1"><a class=3D"reference internal" href=3D"https://py=
torch.org/docs/1.13/sparse.html">torch.sparse</a></li>
<li class=3D"toctree-l1"><a class=3D"reference internal" href=3D"https://py=
torch.org/docs/1.13/storage.html">torch.Storage</a></li>
<li class=3D"toctree-l1"><a class=3D"reference internal" href=3D"https://py=
torch.org/docs/1.13/testing.html">torch.testing</a></li>
<li class=3D"toctree-l1"><a class=3D"reference internal" href=3D"https://py=
torch.org/docs/1.13/benchmark_utils.html">torch.utils.benchmark</a></li>
<li class=3D"toctree-l1"><a class=3D"reference internal" href=3D"https://py=
torch.org/docs/1.13/bottleneck.html">torch.utils.bottleneck</a></li>
<li class=3D"toctree-l1"><a class=3D"reference internal" href=3D"https://py=
torch.org/docs/1.13/checkpoint.html">torch.utils.checkpoint</a></li>
<li class=3D"toctree-l1"><a class=3D"reference internal" href=3D"https://py=
torch.org/docs/1.13/cpp_extension.html">torch.utils.cpp_extension</a></li>
<li class=3D"toctree-l1"><a class=3D"reference internal" href=3D"https://py=
torch.org/docs/1.13/data.html">torch.utils.data</a></li>
<li class=3D"toctree-l1"><a class=3D"reference internal" href=3D"https://py=
torch.org/docs/1.13/jit_utils.html">torch.utils.jit</a></li>
<li class=3D"toctree-l1"><a class=3D"reference internal" href=3D"https://py=
torch.org/docs/1.13/dlpack.html">torch.utils.dlpack</a></li>
<li class=3D"toctree-l1"><a class=3D"reference internal" href=3D"https://py=
torch.org/docs/1.13/mobile_optimizer.html">torch.utils.mobile_optimizer</a>=
</li>
<li class=3D"toctree-l1"><a class=3D"reference internal" href=3D"https://py=
torch.org/docs/1.13/model_zoo.html">torch.utils.model_zoo</a></li>
<li class=3D"toctree-l1"><a class=3D"reference internal" href=3D"https://py=
torch.org/docs/1.13/tensorboard.html">torch.utils.tensorboard</a></li>
<li class=3D"toctree-l1"><a class=3D"reference internal" href=3D"https://py=
torch.org/docs/1.13/type_info.html">Type Info</a></li>
<li class=3D"toctree-l1"><a class=3D"reference internal" href=3D"https://py=
torch.org/docs/1.13/named_tensor.html">Named Tensors</a></li>
<li class=3D"toctree-l1"><a class=3D"reference internal" href=3D"https://py=
torch.org/docs/1.13/name_inference.html">Named Tensors operator coverage</a=
></li>
<li class=3D"toctree-l1"><a class=3D"reference internal" href=3D"https://py=
torch.org/docs/1.13/config_mod.html">torch.__config__</a></li>
</ul>
<p class=3D"caption" role=3D"heading"><span class=3D"caption-text checked">=
Libraries</span><span class=3D"hide-menu collapse">[ - ]</span><span class=
=3D"expand-menu">[ + ]</span></p>
<ul style=3D"display: none;">
<li class=3D"toctree-l1"><a class=3D"reference external" href=3D"https://py=
torch.org/audio/stable">torchaudio</a></li>
<li class=3D"toctree-l1"><a class=3D"reference external" href=3D"https://py=
torch.org/data">TorchData</a></li>
<li class=3D"toctree-l1"><a class=3D"reference external" href=3D"https://py=
torch.org/torchrec">TorchRec</a></li>
<li class=3D"toctree-l1"><a class=3D"reference external" href=3D"https://py=
torch.org/serve">TorchServe</a></li>
<li class=3D"toctree-l1"><a class=3D"reference external" href=3D"https://py=
torch.org/text/stable">torchtext</a></li>
<li class=3D"toctree-l1"><a class=3D"reference external" href=3D"https://py=
torch.org/vision/stable">torchvision</a></li>
<li class=3D"toctree-l1"><a class=3D"reference external" href=3D"http://pyt=
orch.org/xla/">PyTorch on XLA Devices</a></li>
</ul>

           =20
         =20

        </div>
      </div>
    </nav>

    <div class=3D"pytorch-container">
      <div class=3D"pytorch-page-level-bar" id=3D"pytorch-page-level-bar">
        <div class=3D"pytorch-breadcrumbs-wrapper">
         =20















<div role=3D"navigation" aria-label=3D"breadcrumbs navigation">

  <ul class=3D"pytorch-breadcrumbs">
   =20
      <li>
        <a href=3D"https://pytorch.org/docs/1.13/index.html">
         =20
            Docs
         =20
        </a> &gt;
      </li>

       =20
      <li>torch</li>
   =20
   =20
      <li class=3D"pytorch-breadcrumbs-aside">
       =20
           =20
            <a href=3D"https://pytorch.org/docs/1.13/_sources/torch.rst.txt=
" rel=3D"nofollow"><img src=3D"https://pytorch.org/docs/1.13/_static/images=
/view-page-source-icon.svg"></a>
         =20
       =20
      </li>
   =20
  </ul>

 =20
</div>
        </div>

        <div class=3D"pytorch-shortcuts-wrapper" id=3D"pytorch-shortcuts-wr=
apper" style=3D"display: block;">
          Shortcuts
        </div>
      </div>

      <section data-toggle=3D"wy-nav-shift" id=3D"pytorch-content-wrap" cla=
ss=3D"pytorch-content-wrap">
        <div class=3D"pytorch-content-left">

       =20
         =20
          <div class=3D"rst-content">
         =20
            <div role=3D"main" class=3D"main-content" itemscope=3D"itemscop=
e" itemtype=3D"http://schema.org/Article">
             <article itemprop=3D"articleBody" id=3D"pytorch-article" class=
=3D"pytorch-article">
             =20
  <section id=3D"module-torch">
<span id=3D"torch"></span><h1>torch<a class=3D"anchorjs-link " aria-label=
=3D"Anchor" data-anchorjs-icon=3D"=EE=A7=8B" href=3D"https://pytorch.org/do=
cs/1.13/torch.html#module-torch" style=3D"font: 1em / 1 anchorjs-icons; pad=
ding-left: 0.375em;"></a></h1>
<p>The torch package contains data structures for multi-dimensional
tensors and defines mathematical operations over these tensors.
Additionally, it provides many utilities for efficient serializing of
Tensors and arbitrary types, and other useful utilities.</p>
<p>It has a CUDA counterpart, that enables you to run your tensor computati=
ons
on an NVIDIA GPU with compute capability &gt;=3D 3.0.</p>
<section id=3D"tensors">
<h2>Tensors<a class=3D"anchorjs-link " aria-label=3D"Anchor" data-anchorjs-=
icon=3D"=EE=A7=8B" href=3D"https://pytorch.org/docs/1.13/torch.html#tensors=
" style=3D"font: 1em / 1 anchorjs-icons; padding-left: 0.375em;"></a></h2>
<div class=3D"wy-table-responsive"><table class=3D"autosummary longtable do=
cutils align-default">
<tbody>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.is_tensor"><a class=3D"refe=
rence internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/to=
rch.is_tensor.html#torch.is_tensor" title=3D"torch.is_tensor"><code class=
=3D"xref py py-obj docutils literal notranslate"><span class=3D"pre">is_ten=
sor</span></code></a></p></td>
<td><p>Returns True if <cite>obj</cite> is a PyTorch tensor.</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.is_storage"><a class=3D"re=
ference internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/=
torch.is_storage.html#torch.is_storage" title=3D"torch.is_storage"><code cl=
ass=3D"xref py py-obj docutils literal notranslate"><span class=3D"pre">is_=
storage</span></code></a></p></td>
<td><p>Returns True if <cite>obj</cite> is a PyTorch storage object.</p></t=
d>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.is_complex"><a class=3D"ref=
erence internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/t=
orch.is_complex.html#torch.is_complex" title=3D"torch.is_complex"><code cla=
ss=3D"xref py py-obj docutils literal notranslate"><span class=3D"pre">is_c=
omplex</span></code></a></p></td>
<td><p>Returns True if the data type of <code class=3D"xref py py-attr docu=
tils literal notranslate"><span class=3D"pre">input</span></code> is a comp=
lex data type i.e., one of <code class=3D"docutils literal notranslate"><sp=
an class=3D"pre">torch.complex64</span></code>, and <code class=3D"docutils=
 literal notranslate"><span class=3D"pre">torch.complex128</span></code>.</=
p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.is_conj"><a class=3D"refer=
ence internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/tor=
ch.is_conj.html#torch.is_conj" title=3D"torch.is_conj"><code class=3D"xref =
py py-obj docutils literal notranslate"><span class=3D"pre">is_conj</span><=
/code></a></p></td>
<td><p>Returns True if the <code class=3D"xref py py-attr docutils literal =
notranslate"><span class=3D"pre">input</span></code> is a conjugated tensor=
, i.e. its conjugate bit is set to <cite>True</cite>.</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.is_floating_point"><a class=
=3D"reference internal has-code" href=3D"https://pytorch.org/docs/1.13/gene=
rated/torch.is_floating_point.html#torch.is_floating_point" title=3D"torch.=
is_floating_point"><code class=3D"xref py py-obj docutils literal notransla=
te"><span class=3D"pre">is_floating_point</span></code></a></p></td>
<td><p>Returns True if the data type of <code class=3D"xref py py-attr docu=
tils literal notranslate"><span class=3D"pre">input</span></code> is a floa=
ting point data type i.e., one of <code class=3D"docutils literal notransla=
te"><span class=3D"pre">torch.float64</span></code>, <code class=3D"docutil=
s literal notranslate"><span class=3D"pre">torch.float32</span></code>, <co=
de class=3D"docutils literal notranslate"><span class=3D"pre">torch.float16=
</span></code>, and <code class=3D"docutils literal notranslate"><span clas=
s=3D"pre">torch.bfloat16</span></code>.</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.is_nonzero"><a class=3D"re=
ference internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/=
torch.is_nonzero.html#torch.is_nonzero" title=3D"torch.is_nonzero"><code cl=
ass=3D"xref py py-obj docutils literal notranslate"><span class=3D"pre">is_=
nonzero</span></code></a></p></td>
<td><p>Returns True if the <code class=3D"xref py py-attr docutils literal =
notranslate"><span class=3D"pre">input</span></code> is a single element te=
nsor which is not equal to zero after type conversions.</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.set_default_dtype"><a class=
=3D"reference internal has-code" href=3D"https://pytorch.org/docs/1.13/gene=
rated/torch.set_default_dtype.html#torch.set_default_dtype" title=3D"torch.=
set_default_dtype"><code class=3D"xref py py-obj docutils literal notransla=
te"><span class=3D"pre">set_default_dtype</span></code></a></p></td>
<td><p>Sets the default floating point dtype to <code class=3D"xref py py-a=
ttr docutils literal notranslate"><span class=3D"pre">d</span></code>.</p><=
/td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.get_default_dtype"><a clas=
s=3D"reference internal has-code" href=3D"https://pytorch.org/docs/1.13/gen=
erated/torch.get_default_dtype.html#torch.get_default_dtype" title=3D"torch=
.get_default_dtype"><code class=3D"xref py py-obj docutils literal notransl=
ate"><span class=3D"pre">get_default_dtype</span></code></a></p></td>
<td><p>Get the current default floating point <a class=3D"reference interna=
l has-code" href=3D"https://pytorch.org/docs/1.13/tensor_attributes.html#to=
rch.dtype" title=3D"torch.dtype"><code class=3D"xref py py-class docutils l=
iteral notranslate"><span class=3D"pre">torch.dtype</span></code></a>.</p><=
/td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.set_default_tensor_type"><a=
 class=3D"reference internal has-code" href=3D"https://pytorch.org/docs/1.1=
3/generated/torch.set_default_tensor_type.html#torch.set_default_tensor_typ=
e" title=3D"torch.set_default_tensor_type"><code class=3D"xref py py-obj do=
cutils literal notranslate"><span class=3D"pre">set_default_tensor_type</sp=
an></code></a></p></td>
<td><p>Sets the default <code class=3D"docutils literal notranslate"><span =
class=3D"pre">torch.Tensor</span></code> type to floating point tensor type=
 <code class=3D"docutils literal notranslate"><span class=3D"pre">t</span><=
/code>.</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.numel"><a class=3D"referen=
ce internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch=
.numel.html#torch.numel" title=3D"torch.numel"><code class=3D"xref py py-ob=
j docutils literal notranslate"><span class=3D"pre">numel</span></code></a>=
</p></td>
<td><p>Returns the total number of elements in the <code class=3D"xref py p=
y-attr docutils literal notranslate"><span class=3D"pre">input</span></code=
> tensor.</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.set_printoptions"><a class=
=3D"reference internal has-code" href=3D"https://pytorch.org/docs/1.13/gene=
rated/torch.set_printoptions.html#torch.set_printoptions" title=3D"torch.se=
t_printoptions"><code class=3D"xref py py-obj docutils literal notranslate"=
><span class=3D"pre">set_printoptions</span></code></a></p></td>
<td><p>Set options for printing.</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.set_flush_denormal"><a cla=
ss=3D"reference internal has-code" href=3D"https://pytorch.org/docs/1.13/ge=
nerated/torch.set_flush_denormal.html#torch.set_flush_denormal" title=3D"to=
rch.set_flush_denormal"><code class=3D"xref py py-obj docutils literal notr=
anslate"><span class=3D"pre">set_flush_denormal</span></code></a></p></td>
<td><p>Disables denormal floating numbers on CPU.</p></td>
</tr>
</tbody>
</table></div>
<section id=3D"creation-ops">
<span id=3D"tensor-creation-ops"></span><h3>Creation Ops<a class=3D"anchorj=
s-link " aria-label=3D"Anchor" data-anchorjs-icon=3D"=EE=A7=8B" href=3D"htt=
ps://pytorch.org/docs/1.13/torch.html#creation-ops" style=3D"font: 1em / 1 =
anchorjs-icons; padding-left: 0.375em;"></a></h3>
<div class=3D"admonition note">
<p class=3D"admonition-title">Note</p>
<p>Random sampling creation ops are listed under <a class=3D"reference inte=
rnal" href=3D"https://pytorch.org/docs/1.13/torch.html#random-sampling"><sp=
an class=3D"std std-ref">Random sampling</span></a> and
include:
<a class=3D"reference internal has-code" href=3D"https://pytorch.org/docs/1=
.13/generated/torch.rand.html#torch.rand" title=3D"torch.rand"><code class=
=3D"xref py py-func docutils literal notranslate"><span class=3D"pre">torch=
.rand()</span></code></a>
<a class=3D"reference internal has-code" href=3D"https://pytorch.org/docs/1=
.13/generated/torch.rand_like.html#torch.rand_like" title=3D"torch.rand_lik=
e"><code class=3D"xref py py-func docutils literal notranslate"><span class=
=3D"pre">torch.rand_like()</span></code></a>
<a class=3D"reference internal has-code" href=3D"https://pytorch.org/docs/1=
.13/generated/torch.randn.html#torch.randn" title=3D"torch.randn"><code cla=
ss=3D"xref py py-func docutils literal notranslate"><span class=3D"pre">tor=
ch.randn()</span></code></a>
<a class=3D"reference internal has-code" href=3D"https://pytorch.org/docs/1=
.13/generated/torch.randn_like.html#torch.randn_like" title=3D"torch.randn_=
like"><code class=3D"xref py py-func docutils literal notranslate"><span cl=
ass=3D"pre">torch.randn_like()</span></code></a>
<a class=3D"reference internal has-code" href=3D"https://pytorch.org/docs/1=
.13/generated/torch.randint.html#torch.randint" title=3D"torch.randint"><co=
de class=3D"xref py py-func docutils literal notranslate"><span class=3D"pr=
e">torch.randint()</span></code></a>
<a class=3D"reference internal has-code" href=3D"https://pytorch.org/docs/1=
.13/generated/torch.randint_like.html#torch.randint_like" title=3D"torch.ra=
ndint_like"><code class=3D"xref py py-func docutils literal notranslate"><s=
pan class=3D"pre">torch.randint_like()</span></code></a>
<a class=3D"reference internal has-code" href=3D"https://pytorch.org/docs/1=
.13/generated/torch.randperm.html#torch.randperm" title=3D"torch.randperm">=
<code class=3D"xref py py-func docutils literal notranslate"><span class=3D=
"pre">torch.randperm()</span></code></a>
You may also use <a class=3D"reference internal has-code" href=3D"https://p=
ytorch.org/docs/1.13/generated/torch.empty.html#torch.empty" title=3D"torch=
.empty"><code class=3D"xref py py-func docutils literal notranslate"><span =
class=3D"pre">torch.empty()</span></code></a> with the <a class=3D"referenc=
e internal" href=3D"https://pytorch.org/docs/1.13/torch.html#inplace-random=
-sampling"><span class=3D"std std-ref">In-place random sampling</span></a>
methods to create <a class=3D"reference internal has-code" href=3D"https://=
pytorch.org/docs/1.13/tensors.html#torch.Tensor" title=3D"torch.Tensor"><co=
de class=3D"xref py py-class docutils literal notranslate"><span class=3D"p=
re">torch.Tensor</span></code></a> s with values sampled from a broader
range of distributions.</p>
</div>
<div class=3D"wy-table-responsive"><table class=3D"autosummary longtable do=
cutils align-default">
<tbody>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.tensor"><a class=3D"referen=
ce internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch=
.tensor.html#torch.tensor" title=3D"torch.tensor"><code class=3D"xref py py=
-obj docutils literal notranslate"><span class=3D"pre">tensor</span></code>=
</a></p></td>
<td><p>Constructs a tensor with no autograd history (also known as a "leaf =
tensor", see <a class=3D"reference internal" href=3D"https://pytorch.org/do=
cs/1.13/notes/autograd.html"><span class=3D"doc">Autograd mechanics</span><=
/a>) by copying <code class=3D"xref py py-attr docutils literal notranslate=
"><span class=3D"pre">data</span></code>.</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.sparse_coo_tensor"><a clas=
s=3D"reference internal has-code" href=3D"https://pytorch.org/docs/1.13/gen=
erated/torch.sparse_coo_tensor.html#torch.sparse_coo_tensor" title=3D"torch=
.sparse_coo_tensor"><code class=3D"xref py py-obj docutils literal notransl=
ate"><span class=3D"pre">sparse_coo_tensor</span></code></a></p></td>
<td><p>Constructs a <a class=3D"reference internal" href=3D"https://pytorch=
.org/docs/1.13/sparse.html#sparse-coo-docs"><span class=3D"std std-ref">spa=
rse tensor in COO(rdinate) format</span></a> with specified values at the g=
iven <code class=3D"xref py py-attr docutils literal notranslate"><span cla=
ss=3D"pre">indices</span></code>.</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.asarray"><a class=3D"refere=
nce internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torc=
h.asarray.html#torch.asarray" title=3D"torch.asarray"><code class=3D"xref p=
y py-obj docutils literal notranslate"><span class=3D"pre">asarray</span></=
code></a></p></td>
<td><p>Converts <code class=3D"xref py py-attr docutils literal notranslate=
"><span class=3D"pre">obj</span></code> to a tensor.</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.as_tensor"><a class=3D"ref=
erence internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/t=
orch.as_tensor.html#torch.as_tensor" title=3D"torch.as_tensor"><code class=
=3D"xref py py-obj docutils literal notranslate"><span class=3D"pre">as_ten=
sor</span></code></a></p></td>
<td><p>Converts data into a tensor, sharing data and preserving autograd hi=
story if possible.</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.as_strided"><a class=3D"ref=
erence internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/t=
orch.as_strided.html#torch.as_strided" title=3D"torch.as_strided"><code cla=
ss=3D"xref py py-obj docutils literal notranslate"><span class=3D"pre">as_s=
trided</span></code></a></p></td>
<td><p>Create a view of an existing <cite>torch.Tensor</cite> <code class=
=3D"xref py py-attr docutils literal notranslate"><span class=3D"pre">input=
</span></code> with specified <code class=3D"xref py py-attr docutils liter=
al notranslate"><span class=3D"pre">size</span></code>, <code class=3D"xref=
 py py-attr docutils literal notranslate"><span class=3D"pre">stride</span>=
</code> and <code class=3D"xref py py-attr docutils literal notranslate"><s=
pan class=3D"pre">storage_offset</span></code>.</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.from_numpy"><a class=3D"re=
ference internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/=
torch.from_numpy.html#torch.from_numpy" title=3D"torch.from_numpy"><code cl=
ass=3D"xref py py-obj docutils literal notranslate"><span class=3D"pre">fro=
m_numpy</span></code></a></p></td>
<td><p>Creates a <a class=3D"reference internal has-code" href=3D"https://p=
ytorch.org/docs/1.13/tensors.html#torch.Tensor" title=3D"torch.Tensor"><cod=
e class=3D"xref py py-class docutils literal notranslate"><span class=3D"pr=
e">Tensor</span></code></a> from a <a class=3D"reference external has-code"=
 href=3D"https://numpy.org/doc/stable/reference/generated/numpy.ndarray.htm=
l#numpy.ndarray" title=3D"(in NumPy v1.23)"><code class=3D"xref py py-class=
 docutils literal notranslate"><span class=3D"pre">numpy.ndarray</span></co=
de></a>.</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.from_dlpack"><a class=3D"re=
ference internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/=
torch.from_dlpack.html#torch.from_dlpack" title=3D"torch.from_dlpack"><code=
 class=3D"xref py py-obj docutils literal notranslate"><span class=3D"pre">=
from_dlpack</span></code></a></p></td>
<td><p>Converts a tensor from an external library into a <code class=3D"doc=
utils literal notranslate"><span class=3D"pre">torch.Tensor</span></code>.<=
/p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.frombuffer"><a class=3D"re=
ference internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/=
torch.frombuffer.html#torch.frombuffer" title=3D"torch.frombuffer"><code cl=
ass=3D"xref py py-obj docutils literal notranslate"><span class=3D"pre">fro=
mbuffer</span></code></a></p></td>
<td><p>Creates a 1-dimensional <a class=3D"reference internal has-code" hre=
f=3D"https://pytorch.org/docs/1.13/tensors.html#torch.Tensor" title=3D"torc=
h.Tensor"><code class=3D"xref py py-class docutils literal notranslate"><sp=
an class=3D"pre">Tensor</span></code></a> from an object that implements th=
e Python buffer protocol.</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.zeros"><a class=3D"referenc=
e internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch.=
zeros.html#torch.zeros" title=3D"torch.zeros"><code class=3D"xref py py-obj=
 docutils literal notranslate"><span class=3D"pre">zeros</span></code></a><=
/p></td>
<td><p>Returns a tensor filled with the scalar value <cite>0</cite>, with t=
he shape defined by the variable argument <code class=3D"xref py py-attr do=
cutils literal notranslate"><span class=3D"pre">size</span></code>.</p></td=
>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.zeros_like"><a class=3D"re=
ference internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/=
torch.zeros_like.html#torch.zeros_like" title=3D"torch.zeros_like"><code cl=
ass=3D"xref py py-obj docutils literal notranslate"><span class=3D"pre">zer=
os_like</span></code></a></p></td>
<td><p>Returns a tensor filled with the scalar value <cite>0</cite>, with t=
he same size as <code class=3D"xref py py-attr docutils literal notranslate=
"><span class=3D"pre">input</span></code>.</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.ones"><a class=3D"reference=
 internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch.o=
nes.html#torch.ones" title=3D"torch.ones"><code class=3D"xref py py-obj doc=
utils literal notranslate"><span class=3D"pre">ones</span></code></a></p></=
td>
<td><p>Returns a tensor filled with the scalar value <cite>1</cite>, with t=
he shape defined by the variable argument <code class=3D"xref py py-attr do=
cutils literal notranslate"><span class=3D"pre">size</span></code>.</p></td=
>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.ones_like"><a class=3D"ref=
erence internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/t=
orch.ones_like.html#torch.ones_like" title=3D"torch.ones_like"><code class=
=3D"xref py py-obj docutils literal notranslate"><span class=3D"pre">ones_l=
ike</span></code></a></p></td>
<td><p>Returns a tensor filled with the scalar value <cite>1</cite>, with t=
he same size as <code class=3D"xref py py-attr docutils literal notranslate=
"><span class=3D"pre">input</span></code>.</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.arange"><a class=3D"referen=
ce internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch=
.arange.html#torch.arange" title=3D"torch.arange"><code class=3D"xref py py=
-obj docutils literal notranslate"><span class=3D"pre">arange</span></code>=
</a></p></td>
<td><p>Returns a 1-D tensor of size <span class=3D"math"><span class=3D"kat=
ex"><span class=3D"katex-mathml"><math xmlns=3D"http://www.w3.org/1998/Math=
/MathML"><semantics><mrow><mo fence=3D"true">=E2=8C=88</mo><mfrac><mrow><mt=
ext>end</mtext><mo>=E2=88=92</mo><mtext>start</mtext></mrow><mtext>step</mt=
ext></mfrac><mo fence=3D"true">=E2=8C=89</mo></mrow><annotation encoding=3D=
"application/x-tex">\left\lceil \frac{\text{end} - \text{start}}{\text{step=
}} \right\rceil</annotation></semantics></math></span><span class=3D"katex-=
html" aria-hidden=3D"true"><span class=3D"base"><span class=3D"strut" style=
=3D"height:1.8em;vertical-align:-0.65em;"></span><span class=3D"minner"><sp=
an class=3D"mopen delimcenter" style=3D"top:0em;"><span class=3D"delimsizin=
g size2">=E2=8C=88</span></span><span class=3D"mord"><span class=3D"mopen n=
ulldelimiter"></span><span class=3D"mfrac"><span class=3D"vlist-t vlist-t2"=
><span class=3D"vlist-r"><span class=3D"vlist" style=3D"height:0.8801em;"><=
span style=3D"top:-2.655em;"><span class=3D"pstrut" style=3D"height:3em;"><=
/span><span class=3D"sizing reset-size6 size3 mtight"><span class=3D"mord m=
tight"><span class=3D"mord text mtight"><span class=3D"mord mtight">step</s=
pan></span></span></span></span><span style=3D"top:-3.23em;"><span class=3D=
"pstrut" style=3D"height:3em;"></span><span class=3D"frac-line" style=3D"bo=
rder-bottom-width:0.04em;"></span></span><span style=3D"top:-3.394em;"><spa=
n class=3D"pstrut" style=3D"height:3em;"></span><span class=3D"sizing reset=
-size6 size3 mtight"><span class=3D"mord mtight"><span class=3D"mord text m=
tight"><span class=3D"mord mtight">end</span></span><span class=3D"mbin mti=
ght">=E2=88=92</span><span class=3D"mord text mtight"><span class=3D"mord m=
tight">start</span></span></span></span></span></span><span class=3D"vlist-=
s">=E2=80=8B</span></span><span class=3D"vlist-r"><span class=3D"vlist" sty=
le=3D"height:0.4811em;"><span></span></span></span></span></span><span clas=
s=3D"mclose nulldelimiter"></span></span><span class=3D"mclose delimcenter"=
 style=3D"top:0em;"><span class=3D"delimsizing size2">=E2=8C=89</span></spa=
n></span></span></span></span></span> with values from the interval <code c=
lass=3D"docutils literal notranslate"><span class=3D"pre">[start,</span> <s=
pan class=3D"pre">end)</span></code> taken with common difference <code cla=
ss=3D"xref py py-attr docutils literal notranslate"><span class=3D"pre">ste=
p</span></code> beginning from <cite>start</cite>.</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.range"><a class=3D"referen=
ce internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch=
.range.html#torch.range" title=3D"torch.range"><code class=3D"xref py py-ob=
j docutils literal notranslate"><span class=3D"pre">range</span></code></a>=
</p></td>
<td><p>Returns a 1-D tensor of size <span class=3D"math"><span class=3D"kat=
ex"><span class=3D"katex-mathml"><math xmlns=3D"http://www.w3.org/1998/Math=
/MathML"><semantics><mrow><mrow><mo fence=3D"true">=E2=8C=8A</mo><mfrac><mr=
ow><mtext>end</mtext><mo>=E2=88=92</mo><mtext>start</mtext></mrow><mtext>st=
ep</mtext></mfrac><mo fence=3D"true">=E2=8C=8B</mo></mrow><mo>+</mo><mn>1</=
mn></mrow><annotation encoding=3D"application/x-tex">\left\lfloor \frac{\te=
xt{end} - \text{start}}{\text{step}} \right\rfloor + 1</annotation></semant=
ics></math></span><span class=3D"katex-html" aria-hidden=3D"true"><span cla=
ss=3D"base"><span class=3D"strut" style=3D"height:1.8em;vertical-align:-0.6=
5em;"></span><span class=3D"minner"><span class=3D"mopen delimcenter" style=
=3D"top:0em;"><span class=3D"delimsizing size2">=E2=8C=8A</span></span><spa=
n class=3D"mord"><span class=3D"mopen nulldelimiter"></span><span class=3D"=
mfrac"><span class=3D"vlist-t vlist-t2"><span class=3D"vlist-r"><span class=
=3D"vlist" style=3D"height:0.8801em;"><span style=3D"top:-2.655em;"><span c=
lass=3D"pstrut" style=3D"height:3em;"></span><span class=3D"sizing reset-si=
ze6 size3 mtight"><span class=3D"mord mtight"><span class=3D"mord text mtig=
ht"><span class=3D"mord mtight">step</span></span></span></span></span><spa=
n style=3D"top:-3.23em;"><span class=3D"pstrut" style=3D"height:3em;"></spa=
n><span class=3D"frac-line" style=3D"border-bottom-width:0.04em;"></span></=
span><span style=3D"top:-3.394em;"><span class=3D"pstrut" style=3D"height:3=
em;"></span><span class=3D"sizing reset-size6 size3 mtight"><span class=3D"=
mord mtight"><span class=3D"mord text mtight"><span class=3D"mord mtight">e=
nd</span></span><span class=3D"mbin mtight">=E2=88=92</span><span class=3D"=
mord text mtight"><span class=3D"mord mtight">start</span></span></span></s=
pan></span></span><span class=3D"vlist-s">=E2=80=8B</span></span><span clas=
s=3D"vlist-r"><span class=3D"vlist" style=3D"height:0.4811em;"><span></span=
></span></span></span></span><span class=3D"mclose nulldelimiter"></span></=
span><span class=3D"mclose delimcenter" style=3D"top:0em;"><span class=3D"d=
elimsizing size2">=E2=8C=8B</span></span></span><span class=3D"mspace" styl=
e=3D"margin-right:0.2222em;"></span><span class=3D"mbin">+</span><span clas=
s=3D"mspace" style=3D"margin-right:0.2222em;"></span></span><span class=3D"=
base"><span class=3D"strut" style=3D"height:0.6444em;"></span><span class=
=3D"mord">1</span></span></span></span></span> with values from <code class=
=3D"xref py py-attr docutils literal notranslate"><span class=3D"pre">start=
</span></code> to <code class=3D"xref py py-attr docutils literal notransla=
te"><span class=3D"pre">end</span></code> with step <code class=3D"xref py =
py-attr docutils literal notranslate"><span class=3D"pre">step</span></code=
>.</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.linspace"><a class=3D"refer=
ence internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/tor=
ch.linspace.html#torch.linspace" title=3D"torch.linspace"><code class=3D"xr=
ef py py-obj docutils literal notranslate"><span class=3D"pre">linspace</sp=
an></code></a></p></td>
<td><p>Creates a one-dimensional tensor of size <code class=3D"xref py py-a=
ttr docutils literal notranslate"><span class=3D"pre">steps</span></code> w=
hose values are evenly spaced from <code class=3D"xref py py-attr docutils =
literal notranslate"><span class=3D"pre">start</span></code> to <code class=
=3D"xref py py-attr docutils literal notranslate"><span class=3D"pre">end</=
span></code>, inclusive.</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.logspace"><a class=3D"refe=
rence internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/to=
rch.logspace.html#torch.logspace" title=3D"torch.logspace"><code class=3D"x=
ref py py-obj docutils literal notranslate"><span class=3D"pre">logspace</s=
pan></code></a></p></td>
<td><p>Creates a one-dimensional tensor of size <code class=3D"xref py py-a=
ttr docutils literal notranslate"><span class=3D"pre">steps</span></code> w=
hose values are evenly spaced from <span class=3D"math"><span class=3D"kate=
x"><span class=3D"katex-mathml"><math xmlns=3D"http://www.w3.org/1998/Math/=
MathML"><semantics><mrow><msup><mtext>base</mtext><mtext>start</mtext></msu=
p></mrow><annotation encoding=3D"application/x-tex">{{\text{{base}}}}^{{\te=
xt{{start}}}}</annotation></semantics></math></span><span class=3D"katex-ht=
ml" aria-hidden=3D"true"><span class=3D"base"><span class=3D"strut" style=
=3D"height:0.8779em;"></span><span class=3D"mord"><span class=3D"mord"><spa=
n class=3D"mord"><span class=3D"mord text"><span class=3D"mord"><span class=
=3D"mord">base</span></span></span></span></span><span class=3D"msupsub"><s=
pan class=3D"vlist-t"><span class=3D"vlist-r"><span class=3D"vlist" style=
=3D"height:0.8779em;"><span style=3D"top:-3.1473em;margin-right:0.05em;"><s=
pan class=3D"pstrut" style=3D"height:2.7em;"></span><span class=3D"sizing r=
eset-size6 size3 mtight"><span class=3D"mord mtight"><span class=3D"mord mt=
ight"><span class=3D"mord text mtight"><span class=3D"mord mtight"><span cl=
ass=3D"mord mtight">start</span></span></span></span></span></span></span><=
/span></span></span></span></span></span></span></span></span> to <span cla=
ss=3D"math"><span class=3D"katex"><span class=3D"katex-mathml"><math xmlns=
=3D"http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mtext>base<=
/mtext><mtext>end</mtext></msup></mrow><annotation encoding=3D"application/=
x-tex">{{\text{{base}}}}^{{\text{{end}}}}</annotation></semantics></math></=
span><span class=3D"katex-html" aria-hidden=3D"true"><span class=3D"base"><=
span class=3D"strut" style=3D"height:0.9334em;"></span><span class=3D"mord"=
><span class=3D"mord"><span class=3D"mord"><span class=3D"mord text"><span =
class=3D"mord"><span class=3D"mord">base</span></span></span></span></span>=
<span class=3D"msupsub"><span class=3D"vlist-t"><span class=3D"vlist-r"><sp=
an class=3D"vlist" style=3D"height:0.9334em;"><span style=3D"top:-3.1473em;=
margin-right:0.05em;"><span class=3D"pstrut" style=3D"height:2.7em;"></span=
><span class=3D"sizing reset-size6 size3 mtight"><span class=3D"mord mtight=
"><span class=3D"mord mtight"><span class=3D"mord text mtight"><span class=
=3D"mord mtight"><span class=3D"mord mtight">end</span></span></span></span=
></span></span></span></span></span></span></span></span></span></span></sp=
an></span>, inclusive, on a logarithmic scale with base <code class=3D"xref=
 py py-attr docutils literal notranslate"><span class=3D"pre">base</span></=
code>.</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.eye"><a class=3D"reference =
internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch.ey=
e.html#torch.eye" title=3D"torch.eye"><code class=3D"xref py py-obj docutil=
s literal notranslate"><span class=3D"pre">eye</span></code></a></p></td>
<td><p>Returns a 2-D tensor with ones on the diagonal and zeros elsewhere.<=
/p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.empty"><a class=3D"referen=
ce internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch=
.empty.html#torch.empty" title=3D"torch.empty"><code class=3D"xref py py-ob=
j docutils literal notranslate"><span class=3D"pre">empty</span></code></a>=
</p></td>
<td><p>Returns a tensor filled with uninitialized data.</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.empty_like"><a class=3D"ref=
erence internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/t=
orch.empty_like.html#torch.empty_like" title=3D"torch.empty_like"><code cla=
ss=3D"xref py py-obj docutils literal notranslate"><span class=3D"pre">empt=
y_like</span></code></a></p></td>
<td><p>Returns an uninitialized tensor with the same size as <code class=3D=
"xref py py-attr docutils literal notranslate"><span class=3D"pre">input</s=
pan></code>.</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.empty_strided"><a class=3D=
"reference internal has-code" href=3D"https://pytorch.org/docs/1.13/generat=
ed/torch.empty_strided.html#torch.empty_strided" title=3D"torch.empty_strid=
ed"><code class=3D"xref py py-obj docutils literal notranslate"><span class=
=3D"pre">empty_strided</span></code></a></p></td>
<td><p>Creates a tensor with the specified <code class=3D"xref py py-attr d=
ocutils literal notranslate"><span class=3D"pre">size</span></code> and <co=
de class=3D"xref py py-attr docutils literal notranslate"><span class=3D"pr=
e">stride</span></code> and filled with undefined data.</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.full"><a class=3D"reference=
 internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch.f=
ull.html#torch.full" title=3D"torch.full"><code class=3D"xref py py-obj doc=
utils literal notranslate"><span class=3D"pre">full</span></code></a></p></=
td>
<td><p>Creates a tensor of size <code class=3D"xref py py-attr docutils lit=
eral notranslate"><span class=3D"pre">size</span></code> filled with <code =
class=3D"xref py py-attr docutils literal notranslate"><span class=3D"pre">=
fill_value</span></code>.</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.full_like"><a class=3D"ref=
erence internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/t=
orch.full_like.html#torch.full_like" title=3D"torch.full_like"><code class=
=3D"xref py py-obj docutils literal notranslate"><span class=3D"pre">full_l=
ike</span></code></a></p></td>
<td><p>Returns a tensor with the same size as <code class=3D"xref py py-att=
r docutils literal notranslate"><span class=3D"pre">input</span></code> fil=
led with <code class=3D"xref py py-attr docutils literal notranslate"><span=
 class=3D"pre">fill_value</span></code>.</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.quantize_per_tensor"><a cla=
ss=3D"reference internal has-code" href=3D"https://pytorch.org/docs/1.13/ge=
nerated/torch.quantize_per_tensor.html#torch.quantize_per_tensor" title=3D"=
torch.quantize_per_tensor"><code class=3D"xref py py-obj docutils literal n=
otranslate"><span class=3D"pre">quantize_per_tensor</span></code></a></p></=
td>
<td><p>Converts a float tensor to a quantized tensor with given scale and z=
ero point.</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.quantize_per_channel"><a c=
lass=3D"reference internal has-code" href=3D"https://pytorch.org/docs/1.13/=
generated/torch.quantize_per_channel.html#torch.quantize_per_channel" title=
=3D"torch.quantize_per_channel"><code class=3D"xref py py-obj docutils lite=
ral notranslate"><span class=3D"pre">quantize_per_channel</span></code></a>=
</p></td>
<td><p>Converts a float tensor to a per-channel quantized tensor with given=
 scales and zero points.</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.dequantize"><a class=3D"ref=
erence internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/t=
orch.dequantize.html#torch.dequantize" title=3D"torch.dequantize"><code cla=
ss=3D"xref py py-obj docutils literal notranslate"><span class=3D"pre">dequ=
antize</span></code></a></p></td>
<td><p>Returns an fp32 Tensor by dequantizing a quantized Tensor</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.complex"><a class=3D"refer=
ence internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/tor=
ch.complex.html#torch.complex" title=3D"torch.complex"><code class=3D"xref =
py py-obj docutils literal notranslate"><span class=3D"pre">complex</span><=
/code></a></p></td>
<td><p>Constructs a complex tensor with its real part equal to <a class=3D"=
reference internal has-code" href=3D"https://pytorch.org/docs/1.13/generate=
d/torch.real.html#torch.real" title=3D"torch.real"><code class=3D"xref py p=
y-attr docutils literal notranslate"><span class=3D"pre">real</span></code>=
</a> and its imaginary part equal to <a class=3D"reference internal has-cod=
e" href=3D"https://pytorch.org/docs/1.13/generated/torch.imag.html#torch.im=
ag" title=3D"torch.imag"><code class=3D"xref py py-attr docutils literal no=
translate"><span class=3D"pre">imag</span></code></a>.</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.polar"><a class=3D"referenc=
e internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch.=
polar.html#torch.polar" title=3D"torch.polar"><code class=3D"xref py py-obj=
 docutils literal notranslate"><span class=3D"pre">polar</span></code></a><=
/p></td>
<td><p>Constructs a complex tensor whose elements are Cartesian coordinates=
 corresponding to the polar coordinates with absolute value <a class=3D"ref=
erence internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/t=
orch.abs.html#torch.abs" title=3D"torch.abs"><code class=3D"xref py py-attr=
 docutils literal notranslate"><span class=3D"pre">abs</span></code></a> an=
d angle <a class=3D"reference internal has-code" href=3D"https://pytorch.or=
g/docs/1.13/generated/torch.angle.html#torch.angle" title=3D"torch.angle"><=
code class=3D"xref py py-attr docutils literal notranslate"><span class=3D"=
pre">angle</span></code></a>.</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.heaviside"><a class=3D"ref=
erence internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/t=
orch.heaviside.html#torch.heaviside" title=3D"torch.heaviside"><code class=
=3D"xref py py-obj docutils literal notranslate"><span class=3D"pre">heavis=
ide</span></code></a></p></td>
<td><p>Computes the Heaviside step function for each element in <code class=
=3D"xref py py-attr docutils literal notranslate"><span class=3D"pre">input=
</span></code>.</p></td>
</tr>
</tbody>
</table></div>
</section>
<section id=3D"indexing-slicing-joining-mutating-ops">
<span id=3D"indexing-slicing-joining"></span><h3>Indexing, Slicing, Joining=
, Mutating Ops<a class=3D"anchorjs-link " aria-label=3D"Anchor" data-anchor=
js-icon=3D"=EE=A7=8B" href=3D"https://pytorch.org/docs/1.13/torch.html#inde=
xing-slicing-joining-mutating-ops" style=3D"font: 1em / 1 anchorjs-icons; p=
adding-left: 0.375em;"></a></h3>
<div class=3D"wy-table-responsive"><table class=3D"autosummary longtable do=
cutils align-default">
<tbody>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.adjoint"><a class=3D"refere=
nce internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torc=
h.adjoint.html#torch.adjoint" title=3D"torch.adjoint"><code class=3D"xref p=
y py-obj docutils literal notranslate"><span class=3D"pre">adjoint</span></=
code></a></p></td>
<td><p>Returns a view of the tensor conjugated and with the last two dimens=
ions transposed.</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.argwhere"><a class=3D"refe=
rence internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/to=
rch.argwhere.html#torch.argwhere" title=3D"torch.argwhere"><code class=3D"x=
ref py py-obj docutils literal notranslate"><span class=3D"pre">argwhere</s=
pan></code></a></p></td>
<td><p>Returns a tensor containing the indices of all non-zero elements of =
<code class=3D"xref py py-attr docutils literal notranslate"><span class=3D=
"pre">input</span></code>.</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.cat"><a class=3D"reference =
internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch.ca=
t.html#torch.cat" title=3D"torch.cat"><code class=3D"xref py py-obj docutil=
s literal notranslate"><span class=3D"pre">cat</span></code></a></p></td>
<td><p>Concatenates the given sequence of <code class=3D"xref py py-attr do=
cutils literal notranslate"><span class=3D"pre">seq</span></code> tensors i=
n the given dimension.</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.concat"><a class=3D"refere=
nce internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torc=
h.concat.html#torch.concat" title=3D"torch.concat"><code class=3D"xref py p=
y-obj docutils literal notranslate"><span class=3D"pre">concat</span></code=
></a></p></td>
<td><p>Alias of <a class=3D"reference internal has-code" href=3D"https://py=
torch.org/docs/1.13/generated/torch.cat.html#torch.cat" title=3D"torch.cat"=
><code class=3D"xref py py-func docutils literal notranslate"><span class=
=3D"pre">torch.cat()</span></code></a>.</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.concatenate"><a class=3D"re=
ference internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/=
torch.concatenate.html#torch.concatenate" title=3D"torch.concatenate"><code=
 class=3D"xref py py-obj docutils literal notranslate"><span class=3D"pre">=
concatenate</span></code></a></p></td>
<td><p>Alias of <a class=3D"reference internal has-code" href=3D"https://py=
torch.org/docs/1.13/generated/torch.cat.html#torch.cat" title=3D"torch.cat"=
><code class=3D"xref py py-func docutils literal notranslate"><span class=
=3D"pre">torch.cat()</span></code></a>.</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.conj"><a class=3D"referenc=
e internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch.=
conj.html#torch.conj" title=3D"torch.conj"><code class=3D"xref py py-obj do=
cutils literal notranslate"><span class=3D"pre">conj</span></code></a></p><=
/td>
<td><p>Returns a view of <code class=3D"xref py py-attr docutils literal no=
translate"><span class=3D"pre">input</span></code> with a flipped conjugate=
 bit.</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.chunk"><a class=3D"referenc=
e internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch.=
chunk.html#torch.chunk" title=3D"torch.chunk"><code class=3D"xref py py-obj=
 docutils literal notranslate"><span class=3D"pre">chunk</span></code></a><=
/p></td>
<td><p>Attempts to split a tensor into the specified number of chunks.</p><=
/td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.dsplit"><a class=3D"refere=
nce internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torc=
h.dsplit.html#torch.dsplit" title=3D"torch.dsplit"><code class=3D"xref py p=
y-obj docutils literal notranslate"><span class=3D"pre">dsplit</span></code=
></a></p></td>
<td><p>Splits <code class=3D"xref py py-attr docutils literal notranslate">=
<span class=3D"pre">input</span></code>, a tensor with three or more dimens=
ions, into multiple tensors depthwise according to <code class=3D"xref py p=
y-attr docutils literal notranslate"><span class=3D"pre">indices_or_section=
s</span></code>.</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.column_stack"><a class=3D"r=
eference internal has-code" href=3D"https://pytorch.org/docs/1.13/generated=
/torch.column_stack.html#torch.column_stack" title=3D"torch.column_stack"><=
code class=3D"xref py py-obj docutils literal notranslate"><span class=3D"p=
re">column_stack</span></code></a></p></td>
<td><p>Creates a new tensor by horizontally stacking the tensors in <code c=
lass=3D"xref py py-attr docutils literal notranslate"><span class=3D"pre">t=
ensors</span></code>.</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.dstack"><a class=3D"refere=
nce internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torc=
h.dstack.html#torch.dstack" title=3D"torch.dstack"><code class=3D"xref py p=
y-obj docutils literal notranslate"><span class=3D"pre">dstack</span></code=
></a></p></td>
<td><p>Stack tensors in sequence depthwise (along third axis).</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.gather"><a class=3D"referen=
ce internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch=
.gather.html#torch.gather" title=3D"torch.gather"><code class=3D"xref py py=
-obj docutils literal notranslate"><span class=3D"pre">gather</span></code>=
</a></p></td>
<td><p>Gathers values along an axis specified by <cite>dim</cite>.</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.hsplit"><a class=3D"refere=
nce internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torc=
h.hsplit.html#torch.hsplit" title=3D"torch.hsplit"><code class=3D"xref py p=
y-obj docutils literal notranslate"><span class=3D"pre">hsplit</span></code=
></a></p></td>
<td><p>Splits <code class=3D"xref py py-attr docutils literal notranslate">=
<span class=3D"pre">input</span></code>, a tensor with one or more dimensio=
ns, into multiple tensors horizontally according to <code class=3D"xref py =
py-attr docutils literal notranslate"><span class=3D"pre">indices_or_sectio=
ns</span></code>.</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.hstack"><a class=3D"referen=
ce internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch=
.hstack.html#torch.hstack" title=3D"torch.hstack"><code class=3D"xref py py=
-obj docutils literal notranslate"><span class=3D"pre">hstack</span></code>=
</a></p></td>
<td><p>Stack tensors in sequence horizontally (column wise).</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.index_add"><a class=3D"ref=
erence internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/t=
orch.index_add.html#torch.index_add" title=3D"torch.index_add"><code class=
=3D"xref py py-obj docutils literal notranslate"><span class=3D"pre">index_=
add</span></code></a></p></td>
<td><p>See <a class=3D"reference internal has-code" href=3D"https://pytorch=
.org/docs/1.13/generated/torch.Tensor.index_add_.html#torch.Tensor.index_ad=
d_" title=3D"torch.Tensor.index_add_"><code class=3D"xref py py-meth docuti=
ls literal notranslate"><span class=3D"pre">index_add_()</span></code></a> =
for function description.</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.index_copy"><a class=3D"ref=
erence internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/t=
orch.index_copy.html#torch.index_copy" title=3D"torch.index_copy"><code cla=
ss=3D"xref py py-obj docutils literal notranslate"><span class=3D"pre">inde=
x_copy</span></code></a></p></td>
<td><p>See <a class=3D"reference internal has-code" href=3D"https://pytorch=
.org/docs/1.13/generated/torch.Tensor.index_add_.html#torch.Tensor.index_ad=
d_" title=3D"torch.Tensor.index_add_"><code class=3D"xref py py-meth docuti=
ls literal notranslate"><span class=3D"pre">index_add_()</span></code></a> =
for function description.</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.index_reduce"><a class=3D"=
reference internal has-code" href=3D"https://pytorch.org/docs/1.13/generate=
d/torch.index_reduce.html#torch.index_reduce" title=3D"torch.index_reduce">=
<code class=3D"xref py py-obj docutils literal notranslate"><span class=3D"=
pre">index_reduce</span></code></a></p></td>
<td><p>See <a class=3D"reference internal has-code" href=3D"https://pytorch=
.org/docs/1.13/generated/torch.Tensor.index_reduce_.html#torch.Tensor.index=
_reduce_" title=3D"torch.Tensor.index_reduce_"><code class=3D"xref py py-me=
th docutils literal notranslate"><span class=3D"pre">index_reduce_()</span>=
</code></a> for function description.</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.index_select"><a class=3D"r=
eference internal has-code" href=3D"https://pytorch.org/docs/1.13/generated=
/torch.index_select.html#torch.index_select" title=3D"torch.index_select"><=
code class=3D"xref py py-obj docutils literal notranslate"><span class=3D"p=
re">index_select</span></code></a></p></td>
<td><p>Returns a new tensor which indexes the <code class=3D"xref py py-att=
r docutils literal notranslate"><span class=3D"pre">input</span></code> ten=
sor along dimension <code class=3D"xref py py-attr docutils literal notrans=
late"><span class=3D"pre">dim</span></code> using the entries in <code clas=
s=3D"xref py py-attr docutils literal notranslate"><span class=3D"pre">inde=
x</span></code> which is a <cite>LongTensor</cite>.</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.masked_select"><a class=3D=
"reference internal has-code" href=3D"https://pytorch.org/docs/1.13/generat=
ed/torch.masked_select.html#torch.masked_select" title=3D"torch.masked_sele=
ct"><code class=3D"xref py py-obj docutils literal notranslate"><span class=
=3D"pre">masked_select</span></code></a></p></td>
<td><p>Returns a new 1-D tensor which indexes the <code class=3D"xref py py=
-attr docutils literal notranslate"><span class=3D"pre">input</span></code>=
 tensor according to the boolean mask <code class=3D"xref py py-attr docuti=
ls literal notranslate"><span class=3D"pre">mask</span></code> which is a <=
cite>BoolTensor</cite>.</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.movedim"><a class=3D"refere=
nce internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torc=
h.movedim.html#torch.movedim" title=3D"torch.movedim"><code class=3D"xref p=
y py-obj docutils literal notranslate"><span class=3D"pre">movedim</span></=
code></a></p></td>
<td><p>Moves the dimension(s) of <code class=3D"xref py py-attr docutils li=
teral notranslate"><span class=3D"pre">input</span></code> at the position(=
s) in <code class=3D"xref py py-attr docutils literal notranslate"><span cl=
ass=3D"pre">source</span></code> to the position(s) in <code class=3D"xref =
py py-attr docutils literal notranslate"><span class=3D"pre">destination</s=
pan></code>.</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.moveaxis"><a class=3D"refe=
rence internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/to=
rch.moveaxis.html#torch.moveaxis" title=3D"torch.moveaxis"><code class=3D"x=
ref py py-obj docutils literal notranslate"><span class=3D"pre">moveaxis</s=
pan></code></a></p></td>
<td><p>Alias for <a class=3D"reference internal has-code" href=3D"https://p=
ytorch.org/docs/1.13/generated/torch.movedim.html#torch.movedim" title=3D"t=
orch.movedim"><code class=3D"xref py py-func docutils literal notranslate">=
<span class=3D"pre">torch.movedim()</span></code></a>.</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.narrow"><a class=3D"referen=
ce internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch=
.narrow.html#torch.narrow" title=3D"torch.narrow"><code class=3D"xref py py=
-obj docutils literal notranslate"><span class=3D"pre">narrow</span></code>=
</a></p></td>
<td><p>Returns a new tensor that is a narrowed version of <code class=3D"xr=
ef py py-attr docutils literal notranslate"><span class=3D"pre">input</span=
></code> tensor.</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.nonzero"><a class=3D"refer=
ence internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/tor=
ch.nonzero.html#torch.nonzero" title=3D"torch.nonzero"><code class=3D"xref =
py py-obj docutils literal notranslate"><span class=3D"pre">nonzero</span><=
/code></a></p></td>
<td><p></p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.permute"><a class=3D"refere=
nce internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torc=
h.permute.html#torch.permute" title=3D"torch.permute"><code class=3D"xref p=
y py-obj docutils literal notranslate"><span class=3D"pre">permute</span></=
code></a></p></td>
<td><p>Returns a view of the original tensor <code class=3D"xref py py-attr=
 docutils literal notranslate"><span class=3D"pre">input</span></code> with=
 its dimensions permuted.</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.reshape"><a class=3D"refer=
ence internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/tor=
ch.reshape.html#torch.reshape" title=3D"torch.reshape"><code class=3D"xref =
py py-obj docutils literal notranslate"><span class=3D"pre">reshape</span><=
/code></a></p></td>
<td><p>Returns a tensor with the same data and number of elements as <code =
class=3D"xref py py-attr docutils literal notranslate"><span class=3D"pre">=
input</span></code>, but with the specified shape.</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.row_stack"><a class=3D"refe=
rence internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/to=
rch.row_stack.html#torch.row_stack" title=3D"torch.row_stack"><code class=
=3D"xref py py-obj docutils literal notranslate"><span class=3D"pre">row_st=
ack</span></code></a></p></td>
<td><p>Alias of <a class=3D"reference internal has-code" href=3D"https://py=
torch.org/docs/1.13/generated/torch.vstack.html#torch.vstack" title=3D"torc=
h.vstack"><code class=3D"xref py py-func docutils literal notranslate"><spa=
n class=3D"pre">torch.vstack()</span></code></a>.</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.select"><a class=3D"refere=
nce internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torc=
h.select.html#torch.select" title=3D"torch.select"><code class=3D"xref py p=
y-obj docutils literal notranslate"><span class=3D"pre">select</span></code=
></a></p></td>
<td><p>Slices the <code class=3D"xref py py-attr docutils literal notransla=
te"><span class=3D"pre">input</span></code> tensor along the selected dimen=
sion at the given index.</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.scatter"><a class=3D"refere=
nce internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torc=
h.scatter.html#torch.scatter" title=3D"torch.scatter"><code class=3D"xref p=
y py-obj docutils literal notranslate"><span class=3D"pre">scatter</span></=
code></a></p></td>
<td><p>Out-of-place version of <a class=3D"reference internal has-code" hre=
f=3D"https://pytorch.org/docs/1.13/generated/torch.Tensor.scatter_.html#tor=
ch.Tensor.scatter_" title=3D"torch.Tensor.scatter_"><code class=3D"xref py =
py-meth docutils literal notranslate"><span class=3D"pre">torch.Tensor.scat=
ter_()</span></code></a></p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.diagonal_scatter"><a class=
=3D"reference internal has-code" href=3D"https://pytorch.org/docs/1.13/gene=
rated/torch.diagonal_scatter.html#torch.diagonal_scatter" title=3D"torch.di=
agonal_scatter"><code class=3D"xref py py-obj docutils literal notranslate"=
><span class=3D"pre">diagonal_scatter</span></code></a></p></td>
<td><p>Embeds the values of the <code class=3D"xref py py-attr docutils lit=
eral notranslate"><span class=3D"pre">src</span></code> tensor into <code c=
lass=3D"xref py py-attr docutils literal notranslate"><span class=3D"pre">i=
nput</span></code> along the diagonal elements of <code class=3D"xref py py=
-attr docutils literal notranslate"><span class=3D"pre">input</span></code>=
, with respect to <code class=3D"xref py py-attr docutils literal notransla=
te"><span class=3D"pre">dim1</span></code> and <code class=3D"xref py py-at=
tr docutils literal notranslate"><span class=3D"pre">dim2</span></code>.</p=
></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.select_scatter"><a class=3D=
"reference internal has-code" href=3D"https://pytorch.org/docs/1.13/generat=
ed/torch.select_scatter.html#torch.select_scatter" title=3D"torch.select_sc=
atter"><code class=3D"xref py py-obj docutils literal notranslate"><span cl=
ass=3D"pre">select_scatter</span></code></a></p></td>
<td><p>Embeds the values of the <code class=3D"xref py py-attr docutils lit=
eral notranslate"><span class=3D"pre">src</span></code> tensor into <code c=
lass=3D"xref py py-attr docutils literal notranslate"><span class=3D"pre">i=
nput</span></code> at the given index.</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.slice_scatter"><a class=3D=
"reference internal has-code" href=3D"https://pytorch.org/docs/1.13/generat=
ed/torch.slice_scatter.html#torch.slice_scatter" title=3D"torch.slice_scatt=
er"><code class=3D"xref py py-obj docutils literal notranslate"><span class=
=3D"pre">slice_scatter</span></code></a></p></td>
<td><p>Embeds the values of the <code class=3D"xref py py-attr docutils lit=
eral notranslate"><span class=3D"pre">src</span></code> tensor into <code c=
lass=3D"xref py py-attr docutils literal notranslate"><span class=3D"pre">i=
nput</span></code> at the given dimension.</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.scatter_add"><a class=3D"re=
ference internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/=
torch.scatter_add.html#torch.scatter_add" title=3D"torch.scatter_add"><code=
 class=3D"xref py py-obj docutils literal notranslate"><span class=3D"pre">=
scatter_add</span></code></a></p></td>
<td><p>Out-of-place version of <a class=3D"reference internal has-code" hre=
f=3D"https://pytorch.org/docs/1.13/generated/torch.Tensor.scatter_add_.html=
#torch.Tensor.scatter_add_" title=3D"torch.Tensor.scatter_add_"><code class=
=3D"xref py py-meth docutils literal notranslate"><span class=3D"pre">torch=
.Tensor.scatter_add_()</span></code></a></p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.scatter_reduce"><a class=
=3D"reference internal has-code" href=3D"https://pytorch.org/docs/1.13/gene=
rated/torch.scatter_reduce.html#torch.scatter_reduce" title=3D"torch.scatte=
r_reduce"><code class=3D"xref py py-obj docutils literal notranslate"><span=
 class=3D"pre">scatter_reduce</span></code></a></p></td>
<td><p>Out-of-place version of <a class=3D"reference internal has-code" hre=
f=3D"https://pytorch.org/docs/1.13/generated/torch.Tensor.scatter_reduce_.h=
tml#torch.Tensor.scatter_reduce_" title=3D"torch.Tensor.scatter_reduce_"><c=
ode class=3D"xref py py-meth docutils literal notranslate"><span class=3D"p=
re">torch.Tensor.scatter_reduce_()</span></code></a></p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.split"><a class=3D"referenc=
e internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch.=
split.html#torch.split" title=3D"torch.split"><code class=3D"xref py py-obj=
 docutils literal notranslate"><span class=3D"pre">split</span></code></a><=
/p></td>
<td><p>Splits the tensor into chunks.</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.squeeze"><a class=3D"refer=
ence internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/tor=
ch.squeeze.html#torch.squeeze" title=3D"torch.squeeze"><code class=3D"xref =
py py-obj docutils literal notranslate"><span class=3D"pre">squeeze</span><=
/code></a></p></td>
<td><p>Returns a tensor with all the dimensions of <code class=3D"xref py p=
y-attr docutils literal notranslate"><span class=3D"pre">input</span></code=
> of size <cite>1</cite> removed.</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.stack"><a class=3D"referenc=
e internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch.=
stack.html#torch.stack" title=3D"torch.stack"><code class=3D"xref py py-obj=
 docutils literal notranslate"><span class=3D"pre">stack</span></code></a><=
/p></td>
<td><p>Concatenates a sequence of tensors along a new dimension.</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.swapaxes"><a class=3D"refe=
rence internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/to=
rch.swapaxes.html#torch.swapaxes" title=3D"torch.swapaxes"><code class=3D"x=
ref py py-obj docutils literal notranslate"><span class=3D"pre">swapaxes</s=
pan></code></a></p></td>
<td><p>Alias for <a class=3D"reference internal has-code" href=3D"https://p=
ytorch.org/docs/1.13/generated/torch.transpose.html#torch.transpose" title=
=3D"torch.transpose"><code class=3D"xref py py-func docutils literal notran=
slate"><span class=3D"pre">torch.transpose()</span></code></a>.</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.swapdims"><a class=3D"refer=
ence internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/tor=
ch.swapdims.html#torch.swapdims" title=3D"torch.swapdims"><code class=3D"xr=
ef py py-obj docutils literal notranslate"><span class=3D"pre">swapdims</sp=
an></code></a></p></td>
<td><p>Alias for <a class=3D"reference internal has-code" href=3D"https://p=
ytorch.org/docs/1.13/generated/torch.transpose.html#torch.transpose" title=
=3D"torch.transpose"><code class=3D"xref py py-func docutils literal notran=
slate"><span class=3D"pre">torch.transpose()</span></code></a>.</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.t"><a class=3D"reference i=
nternal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch.t.h=
tml#torch.t" title=3D"torch.t"><code class=3D"xref py py-obj docutils liter=
al notranslate"><span class=3D"pre">t</span></code></a></p></td>
<td><p>Expects <code class=3D"xref py py-attr docutils literal notranslate"=
><span class=3D"pre">input</span></code> to be &lt;=3D 2-D tensor and trans=
poses dimensions 0 and 1.</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.take"><a class=3D"reference=
 internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch.t=
ake.html#torch.take" title=3D"torch.take"><code class=3D"xref py py-obj doc=
utils literal notranslate"><span class=3D"pre">take</span></code></a></p></=
td>
<td><p>Returns a new tensor with the elements of <code class=3D"xref py py-=
attr docutils literal notranslate"><span class=3D"pre">input</span></code> =
at the given indices.</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.take_along_dim"><a class=
=3D"reference internal has-code" href=3D"https://pytorch.org/docs/1.13/gene=
rated/torch.take_along_dim.html#torch.take_along_dim" title=3D"torch.take_a=
long_dim"><code class=3D"xref py py-obj docutils literal notranslate"><span=
 class=3D"pre">take_along_dim</span></code></a></p></td>
<td><p>Selects values from <code class=3D"xref py py-attr docutils literal =
notranslate"><span class=3D"pre">input</span></code> at the 1-dimensional i=
ndices from <code class=3D"xref py py-attr docutils literal notranslate"><s=
pan class=3D"pre">indices</span></code> along the given <code class=3D"xref=
 py py-attr docutils literal notranslate"><span class=3D"pre">dim</span></c=
ode>.</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.tensor_split"><a class=3D"r=
eference internal has-code" href=3D"https://pytorch.org/docs/1.13/generated=
/torch.tensor_split.html#torch.tensor_split" title=3D"torch.tensor_split"><=
code class=3D"xref py py-obj docutils literal notranslate"><span class=3D"p=
re">tensor_split</span></code></a></p></td>
<td><p>Splits a tensor into multiple sub-tensors, all of which are views of=
 <code class=3D"xref py py-attr docutils literal notranslate"><span class=
=3D"pre">input</span></code>, along dimension <code class=3D"xref py py-att=
r docutils literal notranslate"><span class=3D"pre">dim</span></code> accor=
ding to the indices or number of sections specified by <code class=3D"xref =
py py-attr docutils literal notranslate"><span class=3D"pre">indices_or_sec=
tions</span></code>.</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.tile"><a class=3D"referenc=
e internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch.=
tile.html#torch.tile" title=3D"torch.tile"><code class=3D"xref py py-obj do=
cutils literal notranslate"><span class=3D"pre">tile</span></code></a></p><=
/td>
<td><p>Constructs a tensor by repeating the elements of <code class=3D"xref=
 py py-attr docutils literal notranslate"><span class=3D"pre">input</span><=
/code>.</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.transpose"><a class=3D"refe=
rence internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/to=
rch.transpose.html#torch.transpose" title=3D"torch.transpose"><code class=
=3D"xref py py-obj docutils literal notranslate"><span class=3D"pre">transp=
ose</span></code></a></p></td>
<td><p>Returns a tensor that is a transposed version of <code class=3D"xref=
 py py-attr docutils literal notranslate"><span class=3D"pre">input</span><=
/code>.</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.unbind"><a class=3D"refere=
nce internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torc=
h.unbind.html#torch.unbind" title=3D"torch.unbind"><code class=3D"xref py p=
y-obj docutils literal notranslate"><span class=3D"pre">unbind</span></code=
></a></p></td>
<td><p>Removes a tensor dimension.</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.unsqueeze"><a class=3D"refe=
rence internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/to=
rch.unsqueeze.html#torch.unsqueeze" title=3D"torch.unsqueeze"><code class=
=3D"xref py py-obj docutils literal notranslate"><span class=3D"pre">unsque=
eze</span></code></a></p></td>
<td><p>Returns a new tensor with a dimension of size one inserted at the sp=
ecified position.</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.vsplit"><a class=3D"refere=
nce internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torc=
h.vsplit.html#torch.vsplit" title=3D"torch.vsplit"><code class=3D"xref py p=
y-obj docutils literal notranslate"><span class=3D"pre">vsplit</span></code=
></a></p></td>
<td><p>Splits <code class=3D"xref py py-attr docutils literal notranslate">=
<span class=3D"pre">input</span></code>, a tensor with two or more dimensio=
ns, into multiple tensors vertically according to <code class=3D"xref py py=
-attr docutils literal notranslate"><span class=3D"pre">indices_or_sections=
</span></code>.</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.vstack"><a class=3D"referen=
ce internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch=
.vstack.html#torch.vstack" title=3D"torch.vstack"><code class=3D"xref py py=
-obj docutils literal notranslate"><span class=3D"pre">vstack</span></code>=
</a></p></td>
<td><p>Stack tensors in sequence vertically (row wise).</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.where"><a class=3D"referen=
ce internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch=
.where.html#torch.where" title=3D"torch.where"><code class=3D"xref py py-ob=
j docutils literal notranslate"><span class=3D"pre">where</span></code></a>=
</p></td>
<td><p>Return a tensor of elements selected from either <code class=3D"xref=
 py py-attr docutils literal notranslate"><span class=3D"pre">x</span></cod=
e> or <code class=3D"xref py py-attr docutils literal notranslate"><span cl=
ass=3D"pre">y</span></code>, depending on <code class=3D"xref py py-attr do=
cutils literal notranslate"><span class=3D"pre">condition</span></code>.</p=
></td>
</tr>
</tbody>
</table></div>
</section>
</section>
<section id=3D"generators">
<span id=3D"id1"></span><h2>Generators<a class=3D"anchorjs-link " aria-labe=
l=3D"Anchor" data-anchorjs-icon=3D"=EE=A7=8B" href=3D"https://pytorch.org/d=
ocs/1.13/torch.html#generators" style=3D"font: 1em / 1 anchorjs-icons; padd=
ing-left: 0.375em;"></a></h2>
<div class=3D"wy-table-responsive"><table class=3D"autosummary longtable do=
cutils align-default">
<tbody>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.Generator"><a class=3D"refe=
rence internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/to=
rch.Generator.html#torch.Generator" title=3D"torch.Generator"><code class=
=3D"xref py py-obj docutils literal notranslate"><span class=3D"pre">Genera=
tor</span></code></a></p></td>
<td><p>Creates and returns a generator object that manages the state of the=
 algorithm which produces pseudo random numbers.</p></td>
</tr>
</tbody>
</table></div>
</section>
<section id=3D"random-sampling">
<span id=3D"id2"></span><h2>Random sampling<a class=3D"anchorjs-link " aria=
-label=3D"Anchor" data-anchorjs-icon=3D"=EE=A7=8B" href=3D"https://pytorch.=
org/docs/1.13/torch.html#random-sampling" style=3D"font: 1em / 1 anchorjs-i=
cons; padding-left: 0.375em;"></a></h2>
<div class=3D"wy-table-responsive"><table class=3D"autosummary longtable do=
cutils align-default">
<tbody>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.seed"><a class=3D"reference=
 internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch.s=
eed.html#torch.seed" title=3D"torch.seed"><code class=3D"xref py py-obj doc=
utils literal notranslate"><span class=3D"pre">seed</span></code></a></p></=
td>
<td><p>Sets the seed for generating random numbers to a non-deterministic r=
andom number.</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.manual_seed"><a class=3D"r=
eference internal has-code" href=3D"https://pytorch.org/docs/1.13/generated=
/torch.manual_seed.html#torch.manual_seed" title=3D"torch.manual_seed"><cod=
e class=3D"xref py py-obj docutils literal notranslate"><span class=3D"pre"=
>manual_seed</span></code></a></p></td>
<td><p>Sets the seed for generating random numbers.</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.initial_seed"><a class=3D"r=
eference internal has-code" href=3D"https://pytorch.org/docs/1.13/generated=
/torch.initial_seed.html#torch.initial_seed" title=3D"torch.initial_seed"><=
code class=3D"xref py py-obj docutils literal notranslate"><span class=3D"p=
re">initial_seed</span></code></a></p></td>
<td><p>Returns the initial seed for generating random numbers as a Python <=
cite>long</cite>.</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.get_rng_state"><a class=3D=
"reference internal has-code" href=3D"https://pytorch.org/docs/1.13/generat=
ed/torch.get_rng_state.html#torch.get_rng_state" title=3D"torch.get_rng_sta=
te"><code class=3D"xref py py-obj docutils literal notranslate"><span class=
=3D"pre">get_rng_state</span></code></a></p></td>
<td><p>Returns the random number generator state as a <cite>torch.ByteTenso=
r</cite>.</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.set_rng_state"><a class=3D"=
reference internal has-code" href=3D"https://pytorch.org/docs/1.13/generate=
d/torch.set_rng_state.html#torch.set_rng_state" title=3D"torch.set_rng_stat=
e"><code class=3D"xref py py-obj docutils literal notranslate"><span class=
=3D"pre">set_rng_state</span></code></a></p></td>
<td><p>Sets the random number generator state.</p></td>
</tr>
</tbody>
</table></div>
<dl class=3D"py attribute">
<dt class=3D"sig sig-object py" id=3D"torch.torch.default_generator">
<span class=3D"sig-prename descclassname"><span class=3D"pre">torch.</span>=
</span><span class=3D"sig-name descname"><span class=3D"pre">default_genera=
tor</span></span><em class=3D"property"><span class=3D"w"> </span><span cla=
ss=3D"pre">Returns</span> <span class=3D"pre">the</span> <span class=3D"pre=
">default</span> <span class=3D"pre">CPU</span> <span class=3D"pre">torch.G=
enerator</span></em><a class=3D"anchorjs-link " aria-label=3D"Anchor" data-=
anchorjs-icon=3D"=EE=A7=8B" href=3D"https://pytorch.org/docs/1.13/torch.htm=
l#torch.torch.default_generator" style=3D"font: 1em / 1 anchorjs-icons; pad=
ding-left: 0.375em;"></a></dt>
<dd></dd></dl>

<div class=3D"wy-table-responsive"><table class=3D"autosummary longtable do=
cutils align-default">
<tbody>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.bernoulli"><a class=3D"refe=
rence internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/to=
rch.bernoulli.html#torch.bernoulli" title=3D"torch.bernoulli"><code class=
=3D"xref py py-obj docutils literal notranslate"><span class=3D"pre">bernou=
lli</span></code></a></p></td>
<td><p>Draws binary random numbers (0 or 1) from a Bernoulli distribution.<=
/p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.multinomial"><a class=3D"r=
eference internal has-code" href=3D"https://pytorch.org/docs/1.13/generated=
/torch.multinomial.html#torch.multinomial" title=3D"torch.multinomial"><cod=
e class=3D"xref py py-obj docutils literal notranslate"><span class=3D"pre"=
>multinomial</span></code></a></p></td>
<td><p>Returns a tensor where each row contains <code class=3D"xref py py-a=
ttr docutils literal notranslate"><span class=3D"pre">num_samples</span></c=
ode> indices sampled from the multinomial probability distribution located =
in the corresponding row of tensor <code class=3D"xref py py-attr docutils =
literal notranslate"><span class=3D"pre">input</span></code>.</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.normal"><a class=3D"referen=
ce internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch=
.normal.html#torch.normal" title=3D"torch.normal"><code class=3D"xref py py=
-obj docutils literal notranslate"><span class=3D"pre">normal</span></code>=
</a></p></td>
<td><p>Returns a tensor of random numbers drawn from separate normal distri=
butions whose mean and standard deviation are given.</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.poisson"><a class=3D"refer=
ence internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/tor=
ch.poisson.html#torch.poisson" title=3D"torch.poisson"><code class=3D"xref =
py py-obj docutils literal notranslate"><span class=3D"pre">poisson</span><=
/code></a></p></td>
<td><p>Returns a tensor of the same size as <code class=3D"xref py py-attr =
docutils literal notranslate"><span class=3D"pre">input</span></code> with =
each element sampled from a Poisson distribution with rate parameter given =
by the corresponding element in <code class=3D"xref py py-attr docutils lit=
eral notranslate"><span class=3D"pre">input</span></code> i.e.,</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.rand"><a class=3D"reference=
 internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch.r=
and.html#torch.rand" title=3D"torch.rand"><code class=3D"xref py py-obj doc=
utils literal notranslate"><span class=3D"pre">rand</span></code></a></p></=
td>
<td><p>Returns a tensor filled with random numbers from a uniform distribut=
ion on the interval <span class=3D"math"><span class=3D"katex"><span class=
=3D"katex-mathml"><math xmlns=3D"http://www.w3.org/1998/Math/MathML"><seman=
tics><mrow><mo stretchy=3D"false">[</mo><mn>0</mn><mo separator=3D"true">,<=
/mo><mn>1</mn><mo stretchy=3D"false">)</mo></mrow><annotation encoding=3D"a=
pplication/x-tex">[0, 1)</annotation></semantics></math></span><span class=
=3D"katex-html" aria-hidden=3D"true"><span class=3D"base"><span class=3D"st=
rut" style=3D"height:1em;vertical-align:-0.25em;"></span><span class=3D"mop=
en">[</span><span class=3D"mord">0</span><span class=3D"mpunct">,</span><sp=
an class=3D"mspace" style=3D"margin-right:0.1667em;"></span><span class=3D"=
mord">1</span><span class=3D"mclose">)</span></span></span></span></span></=
p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.rand_like"><a class=3D"ref=
erence internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/t=
orch.rand_like.html#torch.rand_like" title=3D"torch.rand_like"><code class=
=3D"xref py py-obj docutils literal notranslate"><span class=3D"pre">rand_l=
ike</span></code></a></p></td>
<td><p>Returns a tensor with the same size as <code class=3D"xref py py-att=
r docutils literal notranslate"><span class=3D"pre">input</span></code> tha=
t is filled with random numbers from a uniform distribution on the interval=
 <span class=3D"math"><span class=3D"katex"><span class=3D"katex-mathml"><m=
ath xmlns=3D"http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stret=
chy=3D"false">[</mo><mn>0</mn><mo separator=3D"true">,</mo><mn>1</mn><mo st=
retchy=3D"false">)</mo></mrow><annotation encoding=3D"application/x-tex">[0=
, 1)</annotation></semantics></math></span><span class=3D"katex-html" aria-=
hidden=3D"true"><span class=3D"base"><span class=3D"strut" style=3D"height:=
1em;vertical-align:-0.25em;"></span><span class=3D"mopen">[</span><span cla=
ss=3D"mord">0</span><span class=3D"mpunct">,</span><span class=3D"mspace" s=
tyle=3D"margin-right:0.1667em;"></span><span class=3D"mord">1</span><span c=
lass=3D"mclose">)</span></span></span></span></span>.</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.randint"><a class=3D"refere=
nce internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torc=
h.randint.html#torch.randint" title=3D"torch.randint"><code class=3D"xref p=
y py-obj docutils literal notranslate"><span class=3D"pre">randint</span></=
code></a></p></td>
<td><p>Returns a tensor filled with random integers generated uniformly bet=
ween <code class=3D"xref py py-attr docutils literal notranslate"><span cla=
ss=3D"pre">low</span></code> (inclusive) and <code class=3D"xref py py-attr=
 docutils literal notranslate"><span class=3D"pre">high</span></code> (excl=
usive).</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.randint_like"><a class=3D"=
reference internal has-code" href=3D"https://pytorch.org/docs/1.13/generate=
d/torch.randint_like.html#torch.randint_like" title=3D"torch.randint_like">=
<code class=3D"xref py py-obj docutils literal notranslate"><span class=3D"=
pre">randint_like</span></code></a></p></td>
<td><p>Returns a tensor with the same shape as Tensor <code class=3D"xref p=
y py-attr docutils literal notranslate"><span class=3D"pre">input</span></c=
ode> filled with random integers generated uniformly between <code class=3D=
"xref py py-attr docutils literal notranslate"><span class=3D"pre">low</spa=
n></code> (inclusive) and <code class=3D"xref py py-attr docutils literal n=
otranslate"><span class=3D"pre">high</span></code> (exclusive).</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.randn"><a class=3D"referenc=
e internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch.=
randn.html#torch.randn" title=3D"torch.randn"><code class=3D"xref py py-obj=
 docutils literal notranslate"><span class=3D"pre">randn</span></code></a><=
/p></td>
<td><p>Returns a tensor filled with random numbers from a normal distributi=
on with mean <cite>0</cite> and variance <cite>1</cite> (also called the st=
andard normal distribution).</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.randn_like"><a class=3D"re=
ference internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/=
torch.randn_like.html#torch.randn_like" title=3D"torch.randn_like"><code cl=
ass=3D"xref py py-obj docutils literal notranslate"><span class=3D"pre">ran=
dn_like</span></code></a></p></td>
<td><p>Returns a tensor with the same size as <code class=3D"xref py py-att=
r docutils literal notranslate"><span class=3D"pre">input</span></code> tha=
t is filled with random numbers from a normal distribution with mean 0 and =
variance 1.</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.randperm"><a class=3D"refer=
ence internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/tor=
ch.randperm.html#torch.randperm" title=3D"torch.randperm"><code class=3D"xr=
ef py py-obj docutils literal notranslate"><span class=3D"pre">randperm</sp=
an></code></a></p></td>
<td><p>Returns a random permutation of integers from <code class=3D"docutil=
s literal notranslate"><span class=3D"pre">0</span></code> to <code class=
=3D"docutils literal notranslate"><span class=3D"pre">n</span> <span class=
=3D"pre">-</span> <span class=3D"pre">1</span></code>.</p></td>
</tr>
</tbody>
</table></div>
<section id=3D"in-place-random-sampling">
<span id=3D"inplace-random-sampling"></span><h3>In-place random sampling<a =
class=3D"anchorjs-link " aria-label=3D"Anchor" data-anchorjs-icon=3D"=EE=A7=
=8B" href=3D"https://pytorch.org/docs/1.13/torch.html#in-place-random-sampl=
ing" style=3D"font: 1em / 1 anchorjs-icons; padding-left: 0.375em;"></a></h=
3>
<p>There are a few more in-place random sampling functions defined on Tenso=
rs as well. Click through to refer to their documentation:</p>
<ul class=3D"simple">
<li><p><a class=3D"reference internal has-code" href=3D"https://pytorch.org=
/docs/1.13/generated/torch.Tensor.bernoulli_.html#torch.Tensor.bernoulli_" =
title=3D"torch.Tensor.bernoulli_"><code class=3D"xref py py-func docutils l=
iteral notranslate"><span class=3D"pre">torch.Tensor.bernoulli_()</span></c=
ode></a> - in-place version of <a class=3D"reference internal has-code" hre=
f=3D"https://pytorch.org/docs/1.13/generated/torch.bernoulli.html#torch.ber=
noulli" title=3D"torch.bernoulli"><code class=3D"xref py py-func docutils l=
iteral notranslate"><span class=3D"pre">torch.bernoulli()</span></code></a>=
</p></li>
<li><p><a class=3D"reference internal has-code" href=3D"https://pytorch.org=
/docs/1.13/generated/torch.Tensor.cauchy_.html#torch.Tensor.cauchy_" title=
=3D"torch.Tensor.cauchy_"><code class=3D"xref py py-func docutils literal n=
otranslate"><span class=3D"pre">torch.Tensor.cauchy_()</span></code></a> - =
numbers drawn from the Cauchy distribution</p></li>
<li><p><a class=3D"reference internal has-code" href=3D"https://pytorch.org=
/docs/1.13/generated/torch.Tensor.exponential_.html#torch.Tensor.exponentia=
l_" title=3D"torch.Tensor.exponential_"><code class=3D"xref py py-func docu=
tils literal notranslate"><span class=3D"pre">torch.Tensor.exponential_()</=
span></code></a> - numbers drawn from the exponential distribution</p></li>
<li><p><a class=3D"reference internal has-code" href=3D"https://pytorch.org=
/docs/1.13/generated/torch.Tensor.geometric_.html#torch.Tensor.geometric_" =
title=3D"torch.Tensor.geometric_"><code class=3D"xref py py-func docutils l=
iteral notranslate"><span class=3D"pre">torch.Tensor.geometric_()</span></c=
ode></a> - elements drawn from the geometric distribution</p></li>
<li><p><a class=3D"reference internal has-code" href=3D"https://pytorch.org=
/docs/1.13/generated/torch.Tensor.log_normal_.html#torch.Tensor.log_normal_=
" title=3D"torch.Tensor.log_normal_"><code class=3D"xref py py-func docutil=
s literal notranslate"><span class=3D"pre">torch.Tensor.log_normal_()</span=
></code></a> - samples from the log-normal distribution</p></li>
<li><p><a class=3D"reference internal has-code" href=3D"https://pytorch.org=
/docs/1.13/generated/torch.Tensor.normal_.html#torch.Tensor.normal_" title=
=3D"torch.Tensor.normal_"><code class=3D"xref py py-func docutils literal n=
otranslate"><span class=3D"pre">torch.Tensor.normal_()</span></code></a> - =
in-place version of <a class=3D"reference internal has-code" href=3D"https:=
//pytorch.org/docs/1.13/generated/torch.normal.html#torch.normal" title=3D"=
torch.normal"><code class=3D"xref py py-func docutils literal notranslate">=
<span class=3D"pre">torch.normal()</span></code></a></p></li>
<li><p><a class=3D"reference internal has-code" href=3D"https://pytorch.org=
/docs/1.13/generated/torch.Tensor.random_.html#torch.Tensor.random_" title=
=3D"torch.Tensor.random_"><code class=3D"xref py py-func docutils literal n=
otranslate"><span class=3D"pre">torch.Tensor.random_()</span></code></a> - =
numbers sampled from the discrete uniform distribution</p></li>
<li><p><a class=3D"reference internal has-code" href=3D"https://pytorch.org=
/docs/1.13/generated/torch.Tensor.uniform_.html#torch.Tensor.uniform_" titl=
e=3D"torch.Tensor.uniform_"><code class=3D"xref py py-func docutils literal=
 notranslate"><span class=3D"pre">torch.Tensor.uniform_()</span></code></a>=
 - numbers sampled from the continuous uniform distribution</p></li>
</ul>
</section>
<section id=3D"quasi-random-sampling">
<h3>Quasi-random sampling<a class=3D"anchorjs-link " aria-label=3D"Anchor" =
data-anchorjs-icon=3D"=EE=A7=8B" href=3D"https://pytorch.org/docs/1.13/torc=
h.html#quasi-random-sampling" style=3D"font: 1em / 1 anchorjs-icons; paddin=
g-left: 0.375em;"></a></h3>
<div class=3D"wy-table-responsive"><table class=3D"autosummary longtable do=
cutils align-default">
<tbody>
<tr class=3D"row-odd"><td><p><a class=3D"reference internal has-code" href=
=3D"https://pytorch.org/docs/1.13/generated/torch.quasirandom.SobolEngine.h=
tml#torch.quasirandom.SobolEngine" title=3D"torch.quasirandom.SobolEngine">=
<code class=3D"xref py py-obj docutils literal notranslate"><span class=3D"=
pre">quasirandom.SobolEngine</span></code></a></p></td>
<td><p>The <a class=3D"reference internal has-code" href=3D"https://pytorch=
.org/docs/1.13/generated/torch.quasirandom.SobolEngine.html#torch.quasirand=
om.SobolEngine" title=3D"torch.quasirandom.SobolEngine"><code class=3D"xref=
 py py-class docutils literal notranslate"><span class=3D"pre">torch.quasir=
andom.SobolEngine</span></code></a> is an engine for generating (scrambled)=
 Sobol sequences.</p></td>
</tr>
</tbody>
</table></div>
</section>
</section>
<section id=3D"serialization">
<h2>Serialization<a class=3D"anchorjs-link " aria-label=3D"Anchor" data-anc=
horjs-icon=3D"=EE=A7=8B" href=3D"https://pytorch.org/docs/1.13/torch.html#s=
erialization" style=3D"font: 1em / 1 anchorjs-icons; padding-left: 0.375em;=
"></a></h2>
<div class=3D"wy-table-responsive"><table class=3D"autosummary longtable do=
cutils align-default">
<tbody>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.save"><a class=3D"reference=
 internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch.s=
ave.html#torch.save" title=3D"torch.save"><code class=3D"xref py py-obj doc=
utils literal notranslate"><span class=3D"pre">save</span></code></a></p></=
td>
<td><p>Saves an object to a disk file.</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.load"><a class=3D"referenc=
e internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch.=
load.html#torch.load" title=3D"torch.load"><code class=3D"xref py py-obj do=
cutils literal notranslate"><span class=3D"pre">load</span></code></a></p><=
/td>
<td><p>Loads an object saved with <a class=3D"reference internal has-code" =
href=3D"https://pytorch.org/docs/1.13/generated/torch.save.html#torch.save"=
 title=3D"torch.save"><code class=3D"xref py py-func docutils literal notra=
nslate"><span class=3D"pre">torch.save()</span></code></a> from a file.</p>=
</td>
</tr>
</tbody>
</table></div>
</section>
<section id=3D"parallelism">
<h2>Parallelism<a class=3D"anchorjs-link " aria-label=3D"Anchor" data-ancho=
rjs-icon=3D"=EE=A7=8B" href=3D"https://pytorch.org/docs/1.13/torch.html#par=
allelism" style=3D"font: 1em / 1 anchorjs-icons; padding-left: 0.375em;"></=
a></h2>
<div class=3D"wy-table-responsive"><table class=3D"autosummary longtable do=
cutils align-default">
<tbody>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.get_num_threads"><a class=
=3D"reference internal has-code" href=3D"https://pytorch.org/docs/1.13/gene=
rated/torch.get_num_threads.html#torch.get_num_threads" title=3D"torch.get_=
num_threads"><code class=3D"xref py py-obj docutils literal notranslate"><s=
pan class=3D"pre">get_num_threads</span></code></a></p></td>
<td><p>Returns the number of threads used for parallelizing CPU operations<=
/p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.set_num_threads"><a class=
=3D"reference internal has-code" href=3D"https://pytorch.org/docs/1.13/gene=
rated/torch.set_num_threads.html#torch.set_num_threads" title=3D"torch.set_=
num_threads"><code class=3D"xref py py-obj docutils literal notranslate"><s=
pan class=3D"pre">set_num_threads</span></code></a></p></td>
<td><p>Sets the number of threads used for intraop parallelism on CPU.</p><=
/td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.get_num_interop_threads"><a=
 class=3D"reference internal has-code" href=3D"https://pytorch.org/docs/1.1=
3/generated/torch.get_num_interop_threads.html#torch.get_num_interop_thread=
s" title=3D"torch.get_num_interop_threads"><code class=3D"xref py py-obj do=
cutils literal notranslate"><span class=3D"pre">get_num_interop_threads</sp=
an></code></a></p></td>
<td><p>Returns the number of threads used for inter-op parallelism on CPU (=
e.g.</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.set_num_interop_threads"><=
a class=3D"reference internal has-code" href=3D"https://pytorch.org/docs/1.=
13/generated/torch.set_num_interop_threads.html#torch.set_num_interop_threa=
ds" title=3D"torch.set_num_interop_threads"><code class=3D"xref py py-obj d=
ocutils literal notranslate"><span class=3D"pre">set_num_interop_threads</s=
pan></code></a></p></td>
<td><p>Sets the number of threads used for interop parallelism (e.g.</p></t=
d>
</tr>
</tbody>
</table></div>
</section>
<section id=3D"locally-disabling-gradient-computation">
<span id=3D"torch-rst-local-disable-grad"></span><h2>Locally disabling grad=
ient computation<a class=3D"anchorjs-link " aria-label=3D"Anchor" data-anch=
orjs-icon=3D"=EE=A7=8B" href=3D"https://pytorch.org/docs/1.13/torch.html#lo=
cally-disabling-gradient-computation" style=3D"font: 1em / 1 anchorjs-icons=
; padding-left: 0.375em;"></a></h2>
<p>The context managers <a class=3D"reference internal has-code" href=3D"ht=
tps://pytorch.org/docs/1.13/generated/torch.no_grad.html#torch.no_grad" tit=
le=3D"torch.no_grad"><code class=3D"xref py py-func docutils literal notran=
slate"><span class=3D"pre">torch.no_grad()</span></code></a>, <a class=3D"r=
eference internal has-code" href=3D"https://pytorch.org/docs/1.13/generated=
/torch.enable_grad.html#torch.enable_grad" title=3D"torch.enable_grad"><cod=
e class=3D"xref py py-func docutils literal notranslate"><span class=3D"pre=
">torch.enable_grad()</span></code></a>, and
<a class=3D"reference internal has-code" href=3D"https://pytorch.org/docs/1=
.13/generated/torch.set_grad_enabled.html#torch.set_grad_enabled" title=3D"=
torch.set_grad_enabled"><code class=3D"xref py py-func docutils literal not=
ranslate"><span class=3D"pre">torch.set_grad_enabled()</span></code></a> ar=
e helpful for locally disabling and enabling
gradient computation. See <a class=3D"reference internal" href=3D"https://p=
ytorch.org/docs/1.13/autograd.html#locally-disable-grad"><span class=3D"std=
 std-ref">Locally disabling gradient computation</span></a> for more detail=
s on
their usage.  These context managers are thread local, so they won=E2=80=99=
t
work if you send work to another thread using the <code class=3D"docutils l=
iteral notranslate"><span class=3D"pre">threading</span></code> module, etc=
.</p>
<p>Examples:</p>
<div class=3D"highlight-default notranslate"><div class=3D"highlight"><pre =
id=3D"codecell0"><span></span><span class=3D"gp">&gt;&gt;&gt; </span><span =
class=3D"n">x</span> <span class=3D"o">=3D</span> <span class=3D"n">torch</=
span><span class=3D"o">.</span><span class=3D"n">zeros</span><span class=3D=
"p">(</span><span class=3D"mi">1</span><span class=3D"p">,</span> <span cla=
ss=3D"n">requires_grad</span><span class=3D"o">=3D</span><span class=3D"kc"=
>True</span><span class=3D"p">)</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"k">with</span> <span =
class=3D"n">torch</span><span class=3D"o">.</span><span class=3D"n">no_grad=
</span><span class=3D"p">():</span>
<span class=3D"gp">... </span>    <span class=3D"n">y</span> <span class=3D=
"o">=3D</span> <span class=3D"n">x</span> <span class=3D"o">*</span> <span =
class=3D"mi">2</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">y</span><span clas=
s=3D"o">.</span><span class=3D"n">requires_grad</span>
<span class=3D"go">False</span>

<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">is_train</span> <s=
pan class=3D"o">=3D</span> <span class=3D"kc">False</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"k">with</span> <span =
class=3D"n">torch</span><span class=3D"o">.</span><span class=3D"n">set_gra=
d_enabled</span><span class=3D"p">(</span><span class=3D"n">is_train</span>=
<span class=3D"p">):</span>
<span class=3D"gp">... </span>    <span class=3D"n">y</span> <span class=3D=
"o">=3D</span> <span class=3D"n">x</span> <span class=3D"o">*</span> <span =
class=3D"mi">2</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">y</span><span clas=
s=3D"o">.</span><span class=3D"n">requires_grad</span>
<span class=3D"go">False</span>

<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">torch</span><span =
class=3D"o">.</span><span class=3D"n">set_grad_enabled</span><span class=3D=
"p">(</span><span class=3D"kc">True</span><span class=3D"p">)</span>  <span=
 class=3D"c1"># this can also be used as a function</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">y</span> <span cla=
ss=3D"o">=3D</span> <span class=3D"n">x</span> <span class=3D"o">*</span> <=
span class=3D"mi">2</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">y</span><span clas=
s=3D"o">.</span><span class=3D"n">requires_grad</span>
<span class=3D"go">True</span>

<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">torch</span><span =
class=3D"o">.</span><span class=3D"n">set_grad_enabled</span><span class=3D=
"p">(</span><span class=3D"kc">False</span><span class=3D"p">)</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">y</span> <span cla=
ss=3D"o">=3D</span> <span class=3D"n">x</span> <span class=3D"o">*</span> <=
span class=3D"mi">2</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">y</span><span clas=
s=3D"o">.</span><span class=3D"n">requires_grad</span>
<span class=3D"go">False</span>
</pre><button class=3D"copybtn o-tooltip--left" data-tooltip=3D"Copy" data-=
clipboard-target=3D"#codecell0">
      <svg xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon icon-tabler i=
con-tabler-copy" width=3D"44" height=3D"44" viewBox=3D"0 0 24 24" stroke-wi=
dth=3D"1.5" stroke=3D"#000000" fill=3D"none" stroke-linecap=3D"round" strok=
e-linejoin=3D"round">
  <title>Copy to clipboard</title>
  <path stroke=3D"none" d=3D"M0 0h24v24H0z" fill=3D"none"></path>
  <rect x=3D"8" y=3D"8" width=3D"12" height=3D"12" rx=3D"2"></rect>
  <path d=3D"M16 8v-2a2 2 0 0 0 -2 -2h-8a2 2 0 0 0 -2 2v8a2 2 0 0 0 2 2h2">=
</path>
</svg>
    </button></div>
</div>
<div class=3D"wy-table-responsive"><table class=3D"autosummary longtable do=
cutils align-default">
<tbody>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.no_grad"><a class=3D"refere=
nce internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torc=
h.no_grad.html#torch.no_grad" title=3D"torch.no_grad"><code class=3D"xref p=
y py-obj docutils literal notranslate"><span class=3D"pre">no_grad</span></=
code></a></p></td>
<td><p>Context-manager that disabled gradient calculation.</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.enable_grad"><a class=3D"r=
eference internal has-code" href=3D"https://pytorch.org/docs/1.13/generated=
/torch.enable_grad.html#torch.enable_grad" title=3D"torch.enable_grad"><cod=
e class=3D"xref py py-obj docutils literal notranslate"><span class=3D"pre"=
>enable_grad</span></code></a></p></td>
<td><p>Context-manager that enables gradient calculation.</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.set_grad_enabled"><a class=
=3D"reference internal has-code" href=3D"https://pytorch.org/docs/1.13/gene=
rated/torch.set_grad_enabled.html#torch.set_grad_enabled" title=3D"torch.se=
t_grad_enabled"><code class=3D"xref py py-obj docutils literal notranslate"=
><span class=3D"pre">set_grad_enabled</span></code></a></p></td>
<td><p>Context-manager that sets gradient calculation to on or off.</p></td=
>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.is_grad_enabled"><a class=
=3D"reference internal has-code" href=3D"https://pytorch.org/docs/1.13/gene=
rated/torch.is_grad_enabled.html#torch.is_grad_enabled" title=3D"torch.is_g=
rad_enabled"><code class=3D"xref py py-obj docutils literal notranslate"><s=
pan class=3D"pre">is_grad_enabled</span></code></a></p></td>
<td><p>Returns True if grad mode is currently enabled.</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.inference_mode"><a class=3D=
"reference internal has-code" href=3D"https://pytorch.org/docs/1.13/generat=
ed/torch.inference_mode.html#torch.inference_mode" title=3D"torch.inference=
_mode"><code class=3D"xref py py-obj docutils literal notranslate"><span cl=
ass=3D"pre">inference_mode</span></code></a></p></td>
<td><p>Context-manager that enables or disables inference mode</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.is_inference_mode_enabled"=
><a class=3D"reference internal has-code" href=3D"https://pytorch.org/docs/=
1.13/generated/torch.is_inference_mode_enabled.html#torch.is_inference_mode=
_enabled" title=3D"torch.is_inference_mode_enabled"><code class=3D"xref py =
py-obj docutils literal notranslate"><span class=3D"pre">is_inference_mode_=
enabled</span></code></a></p></td>
<td><p>Returns True if inference mode is currently enabled.</p></td>
</tr>
</tbody>
</table></div>
</section>
<section id=3D"math-operations">
<h2>Math operations<a class=3D"anchorjs-link " aria-label=3D"Anchor" data-a=
nchorjs-icon=3D"=EE=A7=8B" href=3D"https://pytorch.org/docs/1.13/torch.html=
#math-operations" style=3D"font: 1em / 1 anchorjs-icons; padding-left: 0.37=
5em;"></a></h2>
<section id=3D"pointwise-ops">
<h3>Pointwise Ops<a class=3D"anchorjs-link " aria-label=3D"Anchor" data-anc=
horjs-icon=3D"=EE=A7=8B" href=3D"https://pytorch.org/docs/1.13/torch.html#p=
ointwise-ops" style=3D"font: 1em / 1 anchorjs-icons; padding-left: 0.375em;=
"></a></h3>
<div class=3D"wy-table-responsive"><table class=3D"autosummary longtable do=
cutils align-default">
<tbody>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.abs"><a class=3D"reference =
internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch.ab=
s.html#torch.abs" title=3D"torch.abs"><code class=3D"xref py py-obj docutil=
s literal notranslate"><span class=3D"pre">abs</span></code></a></p></td>
<td><p>Computes the absolute value of each element in <code class=3D"xref p=
y py-attr docutils literal notranslate"><span class=3D"pre">input</span></c=
ode>.</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.absolute"><a class=3D"refe=
rence internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/to=
rch.absolute.html#torch.absolute" title=3D"torch.absolute"><code class=3D"x=
ref py py-obj docutils literal notranslate"><span class=3D"pre">absolute</s=
pan></code></a></p></td>
<td><p>Alias for <a class=3D"reference internal has-code" href=3D"https://p=
ytorch.org/docs/1.13/generated/torch.abs.html#torch.abs" title=3D"torch.abs=
"><code class=3D"xref py py-func docutils literal notranslate"><span class=
=3D"pre">torch.abs()</span></code></a></p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.acos"><a class=3D"reference=
 internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch.a=
cos.html#torch.acos" title=3D"torch.acos"><code class=3D"xref py py-obj doc=
utils literal notranslate"><span class=3D"pre">acos</span></code></a></p></=
td>
<td><p>Computes the inverse cosine of each element in <code class=3D"xref p=
y py-attr docutils literal notranslate"><span class=3D"pre">input</span></c=
ode>.</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.arccos"><a class=3D"refere=
nce internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torc=
h.arccos.html#torch.arccos" title=3D"torch.arccos"><code class=3D"xref py p=
y-obj docutils literal notranslate"><span class=3D"pre">arccos</span></code=
></a></p></td>
<td><p>Alias for <a class=3D"reference internal has-code" href=3D"https://p=
ytorch.org/docs/1.13/generated/torch.acos.html#torch.acos" title=3D"torch.a=
cos"><code class=3D"xref py py-func docutils literal notranslate"><span cla=
ss=3D"pre">torch.acos()</span></code></a>.</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.acosh"><a class=3D"referenc=
e internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch.=
acosh.html#torch.acosh" title=3D"torch.acosh"><code class=3D"xref py py-obj=
 docutils literal notranslate"><span class=3D"pre">acosh</span></code></a><=
/p></td>
<td><p>Returns a new tensor with the inverse hyperbolic cosine of the eleme=
nts of <code class=3D"xref py py-attr docutils literal notranslate"><span c=
lass=3D"pre">input</span></code>.</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.arccosh"><a class=3D"refer=
ence internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/tor=
ch.arccosh.html#torch.arccosh" title=3D"torch.arccosh"><code class=3D"xref =
py py-obj docutils literal notranslate"><span class=3D"pre">arccosh</span><=
/code></a></p></td>
<td><p>Alias for <a class=3D"reference internal has-code" href=3D"https://p=
ytorch.org/docs/1.13/generated/torch.acosh.html#torch.acosh" title=3D"torch=
.acosh"><code class=3D"xref py py-func docutils literal notranslate"><span =
class=3D"pre">torch.acosh()</span></code></a>.</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.add"><a class=3D"reference =
internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch.ad=
d.html#torch.add" title=3D"torch.add"><code class=3D"xref py py-obj docutil=
s literal notranslate"><span class=3D"pre">add</span></code></a></p></td>
<td><p>Adds <code class=3D"xref py py-attr docutils literal notranslate"><s=
pan class=3D"pre">other</span></code>, scaled by <code class=3D"xref py py-=
attr docutils literal notranslate"><span class=3D"pre">alpha</span></code>,=
 to <code class=3D"xref py py-attr docutils literal notranslate"><span clas=
s=3D"pre">input</span></code>.</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.addcdiv"><a class=3D"refer=
ence internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/tor=
ch.addcdiv.html#torch.addcdiv" title=3D"torch.addcdiv"><code class=3D"xref =
py py-obj docutils literal notranslate"><span class=3D"pre">addcdiv</span><=
/code></a></p></td>
<td><p>Performs the element-wise division of <code class=3D"xref py py-attr=
 docutils literal notranslate"><span class=3D"pre">tensor1</span></code> by=
 <code class=3D"xref py py-attr docutils literal notranslate"><span class=
=3D"pre">tensor2</span></code>, multiply the result by the scalar <code cla=
ss=3D"xref py py-attr docutils literal notranslate"><span class=3D"pre">val=
ue</span></code> and add it to <code class=3D"xref py py-attr docutils lite=
ral notranslate"><span class=3D"pre">input</span></code>.</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.addcmul"><a class=3D"refere=
nce internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torc=
h.addcmul.html#torch.addcmul" title=3D"torch.addcmul"><code class=3D"xref p=
y py-obj docutils literal notranslate"><span class=3D"pre">addcmul</span></=
code></a></p></td>
<td><p>Performs the element-wise multiplication of <code class=3D"xref py p=
y-attr docutils literal notranslate"><span class=3D"pre">tensor1</span></co=
de> by <code class=3D"xref py py-attr docutils literal notranslate"><span c=
lass=3D"pre">tensor2</span></code>, multiply the result by the scalar <code=
 class=3D"xref py py-attr docutils literal notranslate"><span class=3D"pre"=
>value</span></code> and add it to <code class=3D"xref py py-attr docutils =
literal notranslate"><span class=3D"pre">input</span></code>.</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.angle"><a class=3D"referen=
ce internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch=
.angle.html#torch.angle" title=3D"torch.angle"><code class=3D"xref py py-ob=
j docutils literal notranslate"><span class=3D"pre">angle</span></code></a>=
</p></td>
<td><p>Computes the element-wise angle (in radians) of the given <code clas=
s=3D"xref py py-attr docutils literal notranslate"><span class=3D"pre">inpu=
t</span></code> tensor.</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.asin"><a class=3D"reference=
 internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch.a=
sin.html#torch.asin" title=3D"torch.asin"><code class=3D"xref py py-obj doc=
utils literal notranslate"><span class=3D"pre">asin</span></code></a></p></=
td>
<td><p>Returns a new tensor with the arcsine  of the elements of <code clas=
s=3D"xref py py-attr docutils literal notranslate"><span class=3D"pre">inpu=
t</span></code>.</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.arcsin"><a class=3D"refere=
nce internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torc=
h.arcsin.html#torch.arcsin" title=3D"torch.arcsin"><code class=3D"xref py p=
y-obj docutils literal notranslate"><span class=3D"pre">arcsin</span></code=
></a></p></td>
<td><p>Alias for <a class=3D"reference internal has-code" href=3D"https://p=
ytorch.org/docs/1.13/generated/torch.asin.html#torch.asin" title=3D"torch.a=
sin"><code class=3D"xref py py-func docutils literal notranslate"><span cla=
ss=3D"pre">torch.asin()</span></code></a>.</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.asinh"><a class=3D"referenc=
e internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch.=
asinh.html#torch.asinh" title=3D"torch.asinh"><code class=3D"xref py py-obj=
 docutils literal notranslate"><span class=3D"pre">asinh</span></code></a><=
/p></td>
<td><p>Returns a new tensor with the inverse hyperbolic sine of the element=
s of <code class=3D"xref py py-attr docutils literal notranslate"><span cla=
ss=3D"pre">input</span></code>.</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.arcsinh"><a class=3D"refer=
ence internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/tor=
ch.arcsinh.html#torch.arcsinh" title=3D"torch.arcsinh"><code class=3D"xref =
py py-obj docutils literal notranslate"><span class=3D"pre">arcsinh</span><=
/code></a></p></td>
<td><p>Alias for <a class=3D"reference internal has-code" href=3D"https://p=
ytorch.org/docs/1.13/generated/torch.asinh.html#torch.asinh" title=3D"torch=
.asinh"><code class=3D"xref py py-func docutils literal notranslate"><span =
class=3D"pre">torch.asinh()</span></code></a>.</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.atan"><a class=3D"reference=
 internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch.a=
tan.html#torch.atan" title=3D"torch.atan"><code class=3D"xref py py-obj doc=
utils literal notranslate"><span class=3D"pre">atan</span></code></a></p></=
td>
<td><p>Returns a new tensor with the arctangent  of the elements of <code c=
lass=3D"xref py py-attr docutils literal notranslate"><span class=3D"pre">i=
nput</span></code>.</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.arctan"><a class=3D"refere=
nce internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torc=
h.arctan.html#torch.arctan" title=3D"torch.arctan"><code class=3D"xref py p=
y-obj docutils literal notranslate"><span class=3D"pre">arctan</span></code=
></a></p></td>
<td><p>Alias for <a class=3D"reference internal has-code" href=3D"https://p=
ytorch.org/docs/1.13/generated/torch.atan.html#torch.atan" title=3D"torch.a=
tan"><code class=3D"xref py py-func docutils literal notranslate"><span cla=
ss=3D"pre">torch.atan()</span></code></a>.</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.atanh"><a class=3D"referenc=
e internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch.=
atanh.html#torch.atanh" title=3D"torch.atanh"><code class=3D"xref py py-obj=
 docutils literal notranslate"><span class=3D"pre">atanh</span></code></a><=
/p></td>
<td><p>Returns a new tensor with the inverse hyperbolic tangent of the elem=
ents of <code class=3D"xref py py-attr docutils literal notranslate"><span =
class=3D"pre">input</span></code>.</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.arctanh"><a class=3D"refer=
ence internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/tor=
ch.arctanh.html#torch.arctanh" title=3D"torch.arctanh"><code class=3D"xref =
py py-obj docutils literal notranslate"><span class=3D"pre">arctanh</span><=
/code></a></p></td>
<td><p>Alias for <a class=3D"reference internal has-code" href=3D"https://p=
ytorch.org/docs/1.13/generated/torch.atanh.html#torch.atanh" title=3D"torch=
.atanh"><code class=3D"xref py py-func docutils literal notranslate"><span =
class=3D"pre">torch.atanh()</span></code></a>.</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.atan2"><a class=3D"referenc=
e internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch.=
atan2.html#torch.atan2" title=3D"torch.atan2"><code class=3D"xref py py-obj=
 docutils literal notranslate"><span class=3D"pre">atan2</span></code></a><=
/p></td>
<td><p>Element-wise arctangent of <span class=3D"math"><span class=3D"katex=
"><span class=3D"katex-mathml"><math xmlns=3D"http://www.w3.org/1998/Math/M=
athML"><semantics><mrow><msub><mtext>input</mtext><mi>i</mi></msub><mi math=
variant=3D"normal">/</mi><msub><mtext>other</mtext><mi>i</mi></msub></mrow>=
<annotation encoding=3D"application/x-tex">\text{input}_{i} / \text{other}_=
{i}</annotation></semantics></math></span><span class=3D"katex-html" aria-h=
idden=3D"true"><span class=3D"base"><span class=3D"strut" style=3D"height:1=
em;vertical-align:-0.25em;"></span><span class=3D"mord"><span class=3D"mord=
 text"><span class=3D"mord">input</span></span><span class=3D"msupsub"><spa=
n class=3D"vlist-t vlist-t2"><span class=3D"vlist-r"><span class=3D"vlist" =
style=3D"height:0.2175em;"><span style=3D"top:-2.4559em;margin-right:0.05em=
;"><span class=3D"pstrut" style=3D"height:2.7em;"></span><span class=3D"siz=
ing reset-size6 size3 mtight"><span class=3D"mord mtight"><span class=3D"mo=
rd mathnormal mtight">i</span></span></span></span></span><span class=3D"vl=
ist-s">=E2=80=8B</span></span><span class=3D"vlist-r"><span class=3D"vlist"=
 style=3D"height:0.2441em;"><span></span></span></span></span></span></span=
><span class=3D"mord">/</span><span class=3D"mord"><span class=3D"mord text=
"><span class=3D"mord">other</span></span><span class=3D"msupsub"><span cla=
ss=3D"vlist-t vlist-t2"><span class=3D"vlist-r"><span class=3D"vlist" style=
=3D"height:0.3117em;"><span style=3D"top:-2.55em;margin-right:0.05em;"><spa=
n class=3D"pstrut" style=3D"height:2.7em;"></span><span class=3D"sizing res=
et-size6 size3 mtight"><span class=3D"mord mtight"><span class=3D"mord math=
normal mtight">i</span></span></span></span></span><span class=3D"vlist-s">=
=E2=80=8B</span></span><span class=3D"vlist-r"><span class=3D"vlist" style=
=3D"height:0.15em;"><span></span></span></span></span></span></span></span>=
</span></span></span> with consideration of the quadrant.</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.arctan2"><a class=3D"refer=
ence internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/tor=
ch.arctan2.html#torch.arctan2" title=3D"torch.arctan2"><code class=3D"xref =
py py-obj docutils literal notranslate"><span class=3D"pre">arctan2</span><=
/code></a></p></td>
<td><p>Alias for <a class=3D"reference internal has-code" href=3D"https://p=
ytorch.org/docs/1.13/generated/torch.atan2.html#torch.atan2" title=3D"torch=
.atan2"><code class=3D"xref py py-func docutils literal notranslate"><span =
class=3D"pre">torch.atan2()</span></code></a>.</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.bitwise_not"><a class=3D"re=
ference internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/=
torch.bitwise_not.html#torch.bitwise_not" title=3D"torch.bitwise_not"><code=
 class=3D"xref py py-obj docutils literal notranslate"><span class=3D"pre">=
bitwise_not</span></code></a></p></td>
<td><p>Computes the bitwise NOT of the given input tensor.</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.bitwise_and"><a class=3D"r=
eference internal has-code" href=3D"https://pytorch.org/docs/1.13/generated=
/torch.bitwise_and.html#torch.bitwise_and" title=3D"torch.bitwise_and"><cod=
e class=3D"xref py py-obj docutils literal notranslate"><span class=3D"pre"=
>bitwise_and</span></code></a></p></td>
<td><p>Computes the bitwise AND of <code class=3D"xref py py-attr docutils =
literal notranslate"><span class=3D"pre">input</span></code> and <code clas=
s=3D"xref py py-attr docutils literal notranslate"><span class=3D"pre">othe=
r</span></code>.</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.bitwise_or"><a class=3D"ref=
erence internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/t=
orch.bitwise_or.html#torch.bitwise_or" title=3D"torch.bitwise_or"><code cla=
ss=3D"xref py py-obj docutils literal notranslate"><span class=3D"pre">bitw=
ise_or</span></code></a></p></td>
<td><p>Computes the bitwise OR of <code class=3D"xref py py-attr docutils l=
iteral notranslate"><span class=3D"pre">input</span></code> and <code class=
=3D"xref py py-attr docutils literal notranslate"><span class=3D"pre">other=
</span></code>.</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.bitwise_xor"><a class=3D"r=
eference internal has-code" href=3D"https://pytorch.org/docs/1.13/generated=
/torch.bitwise_xor.html#torch.bitwise_xor" title=3D"torch.bitwise_xor"><cod=
e class=3D"xref py py-obj docutils literal notranslate"><span class=3D"pre"=
>bitwise_xor</span></code></a></p></td>
<td><p>Computes the bitwise XOR of <code class=3D"xref py py-attr docutils =
literal notranslate"><span class=3D"pre">input</span></code> and <code clas=
s=3D"xref py py-attr docutils literal notranslate"><span class=3D"pre">othe=
r</span></code>.</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.bitwise_left_shift"><a clas=
s=3D"reference internal has-code" href=3D"https://pytorch.org/docs/1.13/gen=
erated/torch.bitwise_left_shift.html#torch.bitwise_left_shift" title=3D"tor=
ch.bitwise_left_shift"><code class=3D"xref py py-obj docutils literal notra=
nslate"><span class=3D"pre">bitwise_left_shift</span></code></a></p></td>
<td><p>Computes the left arithmetic shift of <code class=3D"xref py py-attr=
 docutils literal notranslate"><span class=3D"pre">input</span></code> by <=
code class=3D"xref py py-attr docutils literal notranslate"><span class=3D"=
pre">other</span></code> bits.</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.bitwise_right_shift"><a cl=
ass=3D"reference internal has-code" href=3D"https://pytorch.org/docs/1.13/g=
enerated/torch.bitwise_right_shift.html#torch.bitwise_right_shift" title=3D=
"torch.bitwise_right_shift"><code class=3D"xref py py-obj docutils literal =
notranslate"><span class=3D"pre">bitwise_right_shift</span></code></a></p><=
/td>
<td><p>Computes the right arithmetic shift of <code class=3D"xref py py-att=
r docutils literal notranslate"><span class=3D"pre">input</span></code> by =
<code class=3D"xref py py-attr docutils literal notranslate"><span class=3D=
"pre">other</span></code> bits.</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.ceil"><a class=3D"reference=
 internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch.c=
eil.html#torch.ceil" title=3D"torch.ceil"><code class=3D"xref py py-obj doc=
utils literal notranslate"><span class=3D"pre">ceil</span></code></a></p></=
td>
<td><p>Returns a new tensor with the ceil of the elements of <code class=3D=
"xref py py-attr docutils literal notranslate"><span class=3D"pre">input</s=
pan></code>, the smallest integer greater than or equal to each element.</p=
></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.clamp"><a class=3D"referen=
ce internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch=
.clamp.html#torch.clamp" title=3D"torch.clamp"><code class=3D"xref py py-ob=
j docutils literal notranslate"><span class=3D"pre">clamp</span></code></a>=
</p></td>
<td><p>Clamps all elements in <code class=3D"xref py py-attr docutils liter=
al notranslate"><span class=3D"pre">input</span></code> into the range <cit=
e>[</cite> <a class=3D"reference internal has-code" href=3D"https://pytorch=
.org/docs/1.13/generated/torch.min.html#torch.min" title=3D"torch.min"><cod=
e class=3D"xref py py-attr docutils literal notranslate"><span class=3D"pre=
">min</span></code></a>, <a class=3D"reference internal has-code" href=3D"h=
ttps://pytorch.org/docs/1.13/generated/torch.max.html#torch.max" title=3D"t=
orch.max"><code class=3D"xref py py-attr docutils literal notranslate"><spa=
n class=3D"pre">max</span></code></a> <cite>]</cite>.</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.clip"><a class=3D"reference=
 internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch.c=
lip.html#torch.clip" title=3D"torch.clip"><code class=3D"xref py py-obj doc=
utils literal notranslate"><span class=3D"pre">clip</span></code></a></p></=
td>
<td><p>Alias for <a class=3D"reference internal has-code" href=3D"https://p=
ytorch.org/docs/1.13/generated/torch.clamp.html#torch.clamp" title=3D"torch=
.clamp"><code class=3D"xref py py-func docutils literal notranslate"><span =
class=3D"pre">torch.clamp()</span></code></a>.</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.conj_physical"><a class=3D=
"reference internal has-code" href=3D"https://pytorch.org/docs/1.13/generat=
ed/torch.conj_physical.html#torch.conj_physical" title=3D"torch.conj_physic=
al"><code class=3D"xref py py-obj docutils literal notranslate"><span class=
=3D"pre">conj_physical</span></code></a></p></td>
<td><p>Computes the element-wise conjugate of the given <code class=3D"xref=
 py py-attr docutils literal notranslate"><span class=3D"pre">input</span><=
/code> tensor.</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.copysign"><a class=3D"refer=
ence internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/tor=
ch.copysign.html#torch.copysign" title=3D"torch.copysign"><code class=3D"xr=
ef py py-obj docutils literal notranslate"><span class=3D"pre">copysign</sp=
an></code></a></p></td>
<td><p>Create a new floating-point tensor with the magnitude of <code class=
=3D"xref py py-attr docutils literal notranslate"><span class=3D"pre">input=
</span></code> and the sign of <code class=3D"xref py py-attr docutils lite=
ral notranslate"><span class=3D"pre">other</span></code>, elementwise.</p><=
/td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.cos"><a class=3D"reference=
 internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch.c=
os.html#torch.cos" title=3D"torch.cos"><code class=3D"xref py py-obj docuti=
ls literal notranslate"><span class=3D"pre">cos</span></code></a></p></td>
<td><p>Returns a new tensor with the cosine  of the elements of <code class=
=3D"xref py py-attr docutils literal notranslate"><span class=3D"pre">input=
</span></code>.</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.cosh"><a class=3D"reference=
 internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch.c=
osh.html#torch.cosh" title=3D"torch.cosh"><code class=3D"xref py py-obj doc=
utils literal notranslate"><span class=3D"pre">cosh</span></code></a></p></=
td>
<td><p>Returns a new tensor with the hyperbolic cosine  of the elements of =
<code class=3D"xref py py-attr docutils literal notranslate"><span class=3D=
"pre">input</span></code>.</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.deg2rad"><a class=3D"refer=
ence internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/tor=
ch.deg2rad.html#torch.deg2rad" title=3D"torch.deg2rad"><code class=3D"xref =
py py-obj docutils literal notranslate"><span class=3D"pre">deg2rad</span><=
/code></a></p></td>
<td><p>Returns a new tensor with each of the elements of <code class=3D"xre=
f py py-attr docutils literal notranslate"><span class=3D"pre">input</span>=
</code> converted from angles in degrees to radians.</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.div"><a class=3D"reference =
internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch.di=
v.html#torch.div" title=3D"torch.div"><code class=3D"xref py py-obj docutil=
s literal notranslate"><span class=3D"pre">div</span></code></a></p></td>
<td><p>Divides each element of the input <code class=3D"docutils literal no=
translate"><span class=3D"pre">input</span></code> by the corresponding ele=
ment of <code class=3D"xref py py-attr docutils literal notranslate"><span =
class=3D"pre">other</span></code>.</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.divide"><a class=3D"refere=
nce internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torc=
h.divide.html#torch.divide" title=3D"torch.divide"><code class=3D"xref py p=
y-obj docutils literal notranslate"><span class=3D"pre">divide</span></code=
></a></p></td>
<td><p>Alias for <a class=3D"reference internal has-code" href=3D"https://p=
ytorch.org/docs/1.13/generated/torch.div.html#torch.div" title=3D"torch.div=
"><code class=3D"xref py py-func docutils literal notranslate"><span class=
=3D"pre">torch.div()</span></code></a>.</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.digamma"><a class=3D"refere=
nce internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torc=
h.digamma.html#torch.digamma" title=3D"torch.digamma"><code class=3D"xref p=
y py-obj docutils literal notranslate"><span class=3D"pre">digamma</span></=
code></a></p></td>
<td><p>Alias for <a class=3D"reference internal has-code" href=3D"https://p=
ytorch.org/docs/1.13/special.html#torch.special.digamma" title=3D"torch.spe=
cial.digamma"><code class=3D"xref py py-func docutils literal notranslate">=
<span class=3D"pre">torch.special.digamma()</span></code></a>.</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.erf"><a class=3D"reference=
 internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch.e=
rf.html#torch.erf" title=3D"torch.erf"><code class=3D"xref py py-obj docuti=
ls literal notranslate"><span class=3D"pre">erf</span></code></a></p></td>
<td><p>Alias for <a class=3D"reference internal has-code" href=3D"https://p=
ytorch.org/docs/1.13/special.html#torch.special.erf" title=3D"torch.special=
.erf"><code class=3D"xref py py-func docutils literal notranslate"><span cl=
ass=3D"pre">torch.special.erf()</span></code></a>.</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.erfc"><a class=3D"reference=
 internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch.e=
rfc.html#torch.erfc" title=3D"torch.erfc"><code class=3D"xref py py-obj doc=
utils literal notranslate"><span class=3D"pre">erfc</span></code></a></p></=
td>
<td><p>Alias for <a class=3D"reference internal has-code" href=3D"https://p=
ytorch.org/docs/1.13/special.html#torch.special.erfc" title=3D"torch.specia=
l.erfc"><code class=3D"xref py py-func docutils literal notranslate"><span =
class=3D"pre">torch.special.erfc()</span></code></a>.</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.erfinv"><a class=3D"refere=
nce internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torc=
h.erfinv.html#torch.erfinv" title=3D"torch.erfinv"><code class=3D"xref py p=
y-obj docutils literal notranslate"><span class=3D"pre">erfinv</span></code=
></a></p></td>
<td><p>Alias for <a class=3D"reference internal has-code" href=3D"https://p=
ytorch.org/docs/1.13/special.html#torch.special.erfinv" title=3D"torch.spec=
ial.erfinv"><code class=3D"xref py py-func docutils literal notranslate"><s=
pan class=3D"pre">torch.special.erfinv()</span></code></a>.</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.exp"><a class=3D"reference =
internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch.ex=
p.html#torch.exp" title=3D"torch.exp"><code class=3D"xref py py-obj docutil=
s literal notranslate"><span class=3D"pre">exp</span></code></a></p></td>
<td><p>Returns a new tensor with the exponential of the elements of the inp=
ut tensor <code class=3D"xref py py-attr docutils literal notranslate"><spa=
n class=3D"pre">input</span></code>.</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.exp2"><a class=3D"referenc=
e internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch.=
exp2.html#torch.exp2" title=3D"torch.exp2"><code class=3D"xref py py-obj do=
cutils literal notranslate"><span class=3D"pre">exp2</span></code></a></p><=
/td>
<td><p>Alias for <a class=3D"reference internal has-code" href=3D"https://p=
ytorch.org/docs/1.13/special.html#torch.special.exp2" title=3D"torch.specia=
l.exp2"><code class=3D"xref py py-func docutils literal notranslate"><span =
class=3D"pre">torch.special.exp2()</span></code></a>.</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.expm1"><a class=3D"referenc=
e internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch.=
expm1.html#torch.expm1" title=3D"torch.expm1"><code class=3D"xref py py-obj=
 docutils literal notranslate"><span class=3D"pre">expm1</span></code></a><=
/p></td>
<td><p>Alias for <a class=3D"reference internal has-code" href=3D"https://p=
ytorch.org/docs/1.13/special.html#torch.special.expm1" title=3D"torch.speci=
al.expm1"><code class=3D"xref py py-func docutils literal notranslate"><spa=
n class=3D"pre">torch.special.expm1()</span></code></a>.</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.fake_quantize_per_channel_=
affine"><a class=3D"reference internal has-code" href=3D"https://pytorch.or=
g/docs/1.13/generated/torch.fake_quantize_per_channel_affine.html#torch.fak=
e_quantize_per_channel_affine" title=3D"torch.fake_quantize_per_channel_aff=
ine"><code class=3D"xref py py-obj docutils literal notranslate"><span clas=
s=3D"pre">fake_quantize_per_channel_affine</span></code></a></p></td>
<td><p>Returns a new tensor with the data in <code class=3D"xref py py-attr=
 docutils literal notranslate"><span class=3D"pre">input</span></code> fake=
 quantized per channel using <code class=3D"xref py py-attr docutils litera=
l notranslate"><span class=3D"pre">scale</span></code>, <code class=3D"xref=
 py py-attr docutils literal notranslate"><span class=3D"pre">zero_point</s=
pan></code>, <code class=3D"xref py py-attr docutils literal notranslate"><=
span class=3D"pre">quant_min</span></code> and <code class=3D"xref py py-at=
tr docutils literal notranslate"><span class=3D"pre">quant_max</span></code=
>, across the channel specified by <code class=3D"xref py py-attr docutils =
literal notranslate"><span class=3D"pre">axis</span></code>.</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.fake_quantize_per_tensor_af=
fine"><a class=3D"reference internal has-code" href=3D"https://pytorch.org/=
docs/1.13/generated/torch.fake_quantize_per_tensor_affine.html#torch.fake_q=
uantize_per_tensor_affine" title=3D"torch.fake_quantize_per_tensor_affine">=
<code class=3D"xref py py-obj docutils literal notranslate"><span class=3D"=
pre">fake_quantize_per_tensor_affine</span></code></a></p></td>
<td><p>Returns a new tensor with the data in <code class=3D"xref py py-attr=
 docutils literal notranslate"><span class=3D"pre">input</span></code> fake=
 quantized using <code class=3D"xref py py-attr docutils literal notranslat=
e"><span class=3D"pre">scale</span></code>, <code class=3D"xref py py-attr =
docutils literal notranslate"><span class=3D"pre">zero_point</span></code>,=
 <code class=3D"xref py py-attr docutils literal notranslate"><span class=
=3D"pre">quant_min</span></code> and <code class=3D"xref py py-attr docutil=
s literal notranslate"><span class=3D"pre">quant_max</span></code>.</p></td=
>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.fix"><a class=3D"reference=
 internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch.f=
ix.html#torch.fix" title=3D"torch.fix"><code class=3D"xref py py-obj docuti=
ls literal notranslate"><span class=3D"pre">fix</span></code></a></p></td>
<td><p>Alias for <a class=3D"reference internal has-code" href=3D"https://p=
ytorch.org/docs/1.13/generated/torch.trunc.html#torch.trunc" title=3D"torch=
.trunc"><code class=3D"xref py py-func docutils literal notranslate"><span =
class=3D"pre">torch.trunc()</span></code></a></p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.float_power"><a class=3D"re=
ference internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/=
torch.float_power.html#torch.float_power" title=3D"torch.float_power"><code=
 class=3D"xref py py-obj docutils literal notranslate"><span class=3D"pre">=
float_power</span></code></a></p></td>
<td><p>Raises <code class=3D"xref py py-attr docutils literal notranslate">=
<span class=3D"pre">input</span></code> to the power of <code class=3D"xref=
 py py-attr docutils literal notranslate"><span class=3D"pre">exponent</spa=
n></code>, elementwise, in double precision.</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.floor"><a class=3D"referen=
ce internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch=
.floor.html#torch.floor" title=3D"torch.floor"><code class=3D"xref py py-ob=
j docutils literal notranslate"><span class=3D"pre">floor</span></code></a>=
</p></td>
<td><p>Returns a new tensor with the floor of the elements of <code class=
=3D"xref py py-attr docutils literal notranslate"><span class=3D"pre">input=
</span></code>, the largest integer less than or equal to each element.</p>=
</td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.floor_divide"><a class=3D"r=
eference internal has-code" href=3D"https://pytorch.org/docs/1.13/generated=
/torch.floor_divide.html#torch.floor_divide" title=3D"torch.floor_divide"><=
code class=3D"xref py py-obj docutils literal notranslate"><span class=3D"p=
re">floor_divide</span></code></a></p></td>
<td><p></p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.fmod"><a class=3D"referenc=
e internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch.=
fmod.html#torch.fmod" title=3D"torch.fmod"><code class=3D"xref py py-obj do=
cutils literal notranslate"><span class=3D"pre">fmod</span></code></a></p><=
/td>
<td><p>Applies C++'s <a class=3D"reference external" href=3D"https://en.cpp=
reference.com/w/cpp/numeric/math/fmod">std::fmod</a> entrywise.</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.frac"><a class=3D"reference=
 internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch.f=
rac.html#torch.frac" title=3D"torch.frac"><code class=3D"xref py py-obj doc=
utils literal notranslate"><span class=3D"pre">frac</span></code></a></p></=
td>
<td><p>Computes the fractional portion of each element in <code class=3D"xr=
ef py py-attr docutils literal notranslate"><span class=3D"pre">input</span=
></code>.</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.frexp"><a class=3D"referen=
ce internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch=
.frexp.html#torch.frexp" title=3D"torch.frexp"><code class=3D"xref py py-ob=
j docutils literal notranslate"><span class=3D"pre">frexp</span></code></a>=
</p></td>
<td><p>Decomposes <code class=3D"xref py py-attr docutils literal notransla=
te"><span class=3D"pre">input</span></code> into mantissa and exponent tens=
ors such that <span class=3D"math"><span class=3D"katex"><span class=3D"kat=
ex-mathml"><math xmlns=3D"http://www.w3.org/1998/Math/MathML"><semantics><m=
row><mtext>input</mtext><mo>=3D</mo><mtext>mantissa</mtext><mo>=C3=97</mo><=
msup><mn>2</mn><mtext>exponent</mtext></msup></mrow><annotation encoding=3D=
"application/x-tex">\text{input} =3D \text{mantissa} \times 2^{\text{expone=
nt}}</annotation></semantics></math></span><span class=3D"katex-html" aria-=
hidden=3D"true"><span class=3D"base"><span class=3D"strut" style=3D"height:=
0.8623em;vertical-align:-0.1944em;"></span><span class=3D"mord text"><span =
class=3D"mord">input</span></span><span class=3D"mspace" style=3D"margin-ri=
ght:0.2778em;"></span><span class=3D"mrel">=3D</span><span class=3D"mspace"=
 style=3D"margin-right:0.2778em;"></span></span><span class=3D"base"><span =
class=3D"strut" style=3D"height:0.7512em;vertical-align:-0.0833em;"></span>=
<span class=3D"mord text"><span class=3D"mord">mantissa</span></span><span =
class=3D"mspace" style=3D"margin-right:0.2222em;"></span><span class=3D"mbi=
n">=C3=97</span><span class=3D"mspace" style=3D"margin-right:0.2222em;"></s=
pan></span><span class=3D"base"><span class=3D"strut" style=3D"height:0.793=
6em;"></span><span class=3D"mord"><span class=3D"mord">2</span><span class=
=3D"msupsub"><span class=3D"vlist-t"><span class=3D"vlist-r"><span class=3D=
"vlist" style=3D"height:0.7936em;"><span style=3D"top:-3.063em;margin-right=
:0.05em;"><span class=3D"pstrut" style=3D"height:2.7em;"></span><span class=
=3D"sizing reset-size6 size3 mtight"><span class=3D"mord mtight"><span clas=
s=3D"mord text mtight"><span class=3D"mord mtight">exponent</span></span></=
span></span></span></span></span></span></span></span></span></span></span>=
</span>.</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.gradient"><a class=3D"refer=
ence internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/tor=
ch.gradient.html#torch.gradient" title=3D"torch.gradient"><code class=3D"xr=
ef py py-obj docutils literal notranslate"><span class=3D"pre">gradient</sp=
an></code></a></p></td>
<td><p>Estimates the gradient of a function <span class=3D"math"><span clas=
s=3D"katex"><span class=3D"katex-mathml"><math xmlns=3D"http://www.w3.org/1=
998/Math/MathML"><semantics><mrow><mi>g</mi><mo>:</mo><msup><mi mathvariant=
=3D"double-struck">R</mi><mi>n</mi></msup><mo>=E2=86=92</mo><mi mathvariant=
=3D"double-struck">R</mi></mrow><annotation encoding=3D"application/x-tex">=
g : \mathbb{R}^n \rightarrow \mathbb{R}</annotation></semantics></math></sp=
an><span class=3D"katex-html" aria-hidden=3D"true"><span class=3D"base"><sp=
an class=3D"strut" style=3D"height:0.625em;vertical-align:-0.1944em;"></spa=
n><span class=3D"mord mathnormal" style=3D"margin-right:0.03588em;">g</span=
><span class=3D"mspace" style=3D"margin-right:0.2778em;"></span><span class=
=3D"mrel">:</span><span class=3D"mspace" style=3D"margin-right:0.2778em;"><=
/span></span><span class=3D"base"><span class=3D"strut" style=3D"height:0.6=
889em;"></span><span class=3D"mord"><span class=3D"mord mathbb">R</span><sp=
an class=3D"msupsub"><span class=3D"vlist-t"><span class=3D"vlist-r"><span =
class=3D"vlist" style=3D"height:0.6644em;"><span style=3D"top:-3.063em;marg=
in-right:0.05em;"><span class=3D"pstrut" style=3D"height:2.7em;"></span><sp=
an class=3D"sizing reset-size6 size3 mtight"><span class=3D"mord mathnormal=
 mtight">n</span></span></span></span></span></span></span></span><span cla=
ss=3D"mspace" style=3D"margin-right:0.2778em;"></span><span class=3D"mrel">=
=E2=86=92</span><span class=3D"mspace" style=3D"margin-right:0.2778em;"></s=
pan></span><span class=3D"base"><span class=3D"strut" style=3D"height:0.688=
9em;"></span><span class=3D"mord mathbb">R</span></span></span></span></spa=
n> in one or more dimensions using the <a class=3D"reference external" href=
=3D"https://www.ams.org/journals/mcom/1988-51-184/S0025-5718-1988-0935077-0=
/S0025-5718-1988-0935077-0.pdf">second-order accurate central differences m=
ethod</a>.</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.imag"><a class=3D"referenc=
e internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch.=
imag.html#torch.imag" title=3D"torch.imag"><code class=3D"xref py py-obj do=
cutils literal notranslate"><span class=3D"pre">imag</span></code></a></p><=
/td>
<td><p>Returns a new tensor containing imaginary values of the <code class=
=3D"xref py py-attr docutils literal notranslate"><span class=3D"pre">self<=
/span></code> tensor.</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.ldexp"><a class=3D"referenc=
e internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch.=
ldexp.html#torch.ldexp" title=3D"torch.ldexp"><code class=3D"xref py py-obj=
 docutils literal notranslate"><span class=3D"pre">ldexp</span></code></a><=
/p></td>
<td><p>Multiplies <code class=3D"xref py py-attr docutils literal notransla=
te"><span class=3D"pre">input</span></code> by 2**:attr:<cite>other</cite>.=
</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.lerp"><a class=3D"referenc=
e internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch.=
lerp.html#torch.lerp" title=3D"torch.lerp"><code class=3D"xref py py-obj do=
cutils literal notranslate"><span class=3D"pre">lerp</span></code></a></p><=
/td>
<td><p>Does a linear interpolation of two tensors <code class=3D"xref py py=
-attr docutils literal notranslate"><span class=3D"pre">start</span></code>=
 (given by <code class=3D"xref py py-attr docutils literal notranslate"><sp=
an class=3D"pre">input</span></code>) and <code class=3D"xref py py-attr do=
cutils literal notranslate"><span class=3D"pre">end</span></code> based on =
a scalar or tensor <code class=3D"xref py py-attr docutils literal notransl=
ate"><span class=3D"pre">weight</span></code> and returns the resulting <co=
de class=3D"xref py py-attr docutils literal notranslate"><span class=3D"pr=
e">out</span></code> tensor.</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.lgamma"><a class=3D"referen=
ce internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch=
.lgamma.html#torch.lgamma" title=3D"torch.lgamma"><code class=3D"xref py py=
-obj docutils literal notranslate"><span class=3D"pre">lgamma</span></code>=
</a></p></td>
<td><p>Computes the natural logarithm of the absolute value of the gamma fu=
nction on <code class=3D"xref py py-attr docutils literal notranslate"><spa=
n class=3D"pre">input</span></code>.</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.log"><a class=3D"reference=
 internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch.l=
og.html#torch.log" title=3D"torch.log"><code class=3D"xref py py-obj docuti=
ls literal notranslate"><span class=3D"pre">log</span></code></a></p></td>
<td><p>Returns a new tensor with the natural logarithm of the elements of <=
code class=3D"xref py py-attr docutils literal notranslate"><span class=3D"=
pre">input</span></code>.</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.log10"><a class=3D"referenc=
e internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch.=
log10.html#torch.log10" title=3D"torch.log10"><code class=3D"xref py py-obj=
 docutils literal notranslate"><span class=3D"pre">log10</span></code></a><=
/p></td>
<td><p>Returns a new tensor with the logarithm to the base 10 of the elemen=
ts of <code class=3D"xref py py-attr docutils literal notranslate"><span cl=
ass=3D"pre">input</span></code>.</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.log1p"><a class=3D"referen=
ce internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch=
.log1p.html#torch.log1p" title=3D"torch.log1p"><code class=3D"xref py py-ob=
j docutils literal notranslate"><span class=3D"pre">log1p</span></code></a>=
</p></td>
<td><p>Returns a new tensor with the natural logarithm of (1 + <code class=
=3D"xref py py-attr docutils literal notranslate"><span class=3D"pre">input=
</span></code>).</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.log2"><a class=3D"reference=
 internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch.l=
og2.html#torch.log2" title=3D"torch.log2"><code class=3D"xref py py-obj doc=
utils literal notranslate"><span class=3D"pre">log2</span></code></a></p></=
td>
<td><p>Returns a new tensor with the logarithm to the base 2 of the element=
s of <code class=3D"xref py py-attr docutils literal notranslate"><span cla=
ss=3D"pre">input</span></code>.</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.logaddexp"><a class=3D"ref=
erence internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/t=
orch.logaddexp.html#torch.logaddexp" title=3D"torch.logaddexp"><code class=
=3D"xref py py-obj docutils literal notranslate"><span class=3D"pre">logadd=
exp</span></code></a></p></td>
<td><p>Logarithm of the sum of exponentiations of the inputs.</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.logaddexp2"><a class=3D"ref=
erence internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/t=
orch.logaddexp2.html#torch.logaddexp2" title=3D"torch.logaddexp2"><code cla=
ss=3D"xref py py-obj docutils literal notranslate"><span class=3D"pre">loga=
ddexp2</span></code></a></p></td>
<td><p>Logarithm of the sum of exponentiations of the inputs in base-2.</p>=
</td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.logical_and"><a class=3D"r=
eference internal has-code" href=3D"https://pytorch.org/docs/1.13/generated=
/torch.logical_and.html#torch.logical_and" title=3D"torch.logical_and"><cod=
e class=3D"xref py py-obj docutils literal notranslate"><span class=3D"pre"=
>logical_and</span></code></a></p></td>
<td><p>Computes the element-wise logical AND of the given input tensors.</p=
></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.logical_not"><a class=3D"re=
ference internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/=
torch.logical_not.html#torch.logical_not" title=3D"torch.logical_not"><code=
 class=3D"xref py py-obj docutils literal notranslate"><span class=3D"pre">=
logical_not</span></code></a></p></td>
<td><p>Computes the element-wise logical NOT of the given input tensor.</p>=
</td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.logical_or"><a class=3D"re=
ference internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/=
torch.logical_or.html#torch.logical_or" title=3D"torch.logical_or"><code cl=
ass=3D"xref py py-obj docutils literal notranslate"><span class=3D"pre">log=
ical_or</span></code></a></p></td>
<td><p>Computes the element-wise logical OR of the given input tensors.</p>=
</td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.logical_xor"><a class=3D"re=
ference internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/=
torch.logical_xor.html#torch.logical_xor" title=3D"torch.logical_xor"><code=
 class=3D"xref py py-obj docutils literal notranslate"><span class=3D"pre">=
logical_xor</span></code></a></p></td>
<td><p>Computes the element-wise logical XOR of the given input tensors.</p=
></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.logit"><a class=3D"referen=
ce internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch=
.logit.html#torch.logit" title=3D"torch.logit"><code class=3D"xref py py-ob=
j docutils literal notranslate"><span class=3D"pre">logit</span></code></a>=
</p></td>
<td><p>Alias for <a class=3D"reference internal has-code" href=3D"https://p=
ytorch.org/docs/1.13/special.html#torch.special.logit" title=3D"torch.speci=
al.logit"><code class=3D"xref py py-func docutils literal notranslate"><spa=
n class=3D"pre">torch.special.logit()</span></code></a>.</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.hypot"><a class=3D"referenc=
e internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch.=
hypot.html#torch.hypot" title=3D"torch.hypot"><code class=3D"xref py py-obj=
 docutils literal notranslate"><span class=3D"pre">hypot</span></code></a><=
/p></td>
<td><p>Given the legs of a right triangle, return its hypotenuse.</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.i0"><a class=3D"reference =
internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch.i0=
.html#torch.i0" title=3D"torch.i0"><code class=3D"xref py py-obj docutils l=
iteral notranslate"><span class=3D"pre">i0</span></code></a></p></td>
<td><p>Alias for <a class=3D"reference internal has-code" href=3D"https://p=
ytorch.org/docs/1.13/special.html#torch.special.i0" title=3D"torch.special.=
i0"><code class=3D"xref py py-func docutils literal notranslate"><span clas=
s=3D"pre">torch.special.i0()</span></code></a>.</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.igamma"><a class=3D"referen=
ce internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch=
.igamma.html#torch.igamma" title=3D"torch.igamma"><code class=3D"xref py py=
-obj docutils literal notranslate"><span class=3D"pre">igamma</span></code>=
</a></p></td>
<td><p>Alias for <a class=3D"reference internal has-code" href=3D"https://p=
ytorch.org/docs/1.13/special.html#torch.special.gammainc" title=3D"torch.sp=
ecial.gammainc"><code class=3D"xref py py-func docutils literal notranslate=
"><span class=3D"pre">torch.special.gammainc()</span></code></a>.</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.igammac"><a class=3D"refer=
ence internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/tor=
ch.igammac.html#torch.igammac" title=3D"torch.igammac"><code class=3D"xref =
py py-obj docutils literal notranslate"><span class=3D"pre">igammac</span><=
/code></a></p></td>
<td><p>Alias for <a class=3D"reference internal has-code" href=3D"https://p=
ytorch.org/docs/1.13/special.html#torch.special.gammaincc" title=3D"torch.s=
pecial.gammaincc"><code class=3D"xref py py-func docutils literal notransla=
te"><span class=3D"pre">torch.special.gammaincc()</span></code></a>.</p></t=
d>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.mul"><a class=3D"reference =
internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch.mu=
l.html#torch.mul" title=3D"torch.mul"><code class=3D"xref py py-obj docutil=
s literal notranslate"><span class=3D"pre">mul</span></code></a></p></td>
<td><p>Multiplies <code class=3D"xref py py-attr docutils literal notransla=
te"><span class=3D"pre">input</span></code> by <code class=3D"xref py py-at=
tr docutils literal notranslate"><span class=3D"pre">other</span></code>.</=
p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.multiply"><a class=3D"refe=
rence internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/to=
rch.multiply.html#torch.multiply" title=3D"torch.multiply"><code class=3D"x=
ref py py-obj docutils literal notranslate"><span class=3D"pre">multiply</s=
pan></code></a></p></td>
<td><p>Alias for <a class=3D"reference internal has-code" href=3D"https://p=
ytorch.org/docs/1.13/generated/torch.mul.html#torch.mul" title=3D"torch.mul=
"><code class=3D"xref py py-func docutils literal notranslate"><span class=
=3D"pre">torch.mul()</span></code></a>.</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.mvlgamma"><a class=3D"refer=
ence internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/tor=
ch.mvlgamma.html#torch.mvlgamma" title=3D"torch.mvlgamma"><code class=3D"xr=
ef py py-obj docutils literal notranslate"><span class=3D"pre">mvlgamma</sp=
an></code></a></p></td>
<td><p>Alias for <a class=3D"reference internal has-code" href=3D"https://p=
ytorch.org/docs/1.13/special.html#torch.special.multigammaln" title=3D"torc=
h.special.multigammaln"><code class=3D"xref py py-func docutils literal not=
ranslate"><span class=3D"pre">torch.special.multigammaln()</span></code></a=
>.</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.nan_to_num"><a class=3D"re=
ference internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/=
torch.nan_to_num.html#torch.nan_to_num" title=3D"torch.nan_to_num"><code cl=
ass=3D"xref py py-obj docutils literal notranslate"><span class=3D"pre">nan=
_to_num</span></code></a></p></td>
<td><p>Replaces <code class=3D"docutils literal notranslate"><span class=3D=
"pre">NaN</span></code>, positive infinity, and negative infinity values in=
 <code class=3D"xref py py-attr docutils literal notranslate"><span class=
=3D"pre">input</span></code> with the values specified by <code class=3D"xr=
ef py py-attr docutils literal notranslate"><span class=3D"pre">nan</span><=
/code>, <code class=3D"xref py py-attr docutils literal notranslate"><span =
class=3D"pre">posinf</span></code>, and <code class=3D"xref py py-attr docu=
tils literal notranslate"><span class=3D"pre">neginf</span></code>, respect=
ively.</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.neg"><a class=3D"reference =
internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch.ne=
g.html#torch.neg" title=3D"torch.neg"><code class=3D"xref py py-obj docutil=
s literal notranslate"><span class=3D"pre">neg</span></code></a></p></td>
<td><p>Returns a new tensor with the negative of the elements of <code clas=
s=3D"xref py py-attr docutils literal notranslate"><span class=3D"pre">inpu=
t</span></code>.</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.negative"><a class=3D"refe=
rence internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/to=
rch.negative.html#torch.negative" title=3D"torch.negative"><code class=3D"x=
ref py py-obj docutils literal notranslate"><span class=3D"pre">negative</s=
pan></code></a></p></td>
<td><p>Alias for <a class=3D"reference internal has-code" href=3D"https://p=
ytorch.org/docs/1.13/generated/torch.neg.html#torch.neg" title=3D"torch.neg=
"><code class=3D"xref py py-func docutils literal notranslate"><span class=
=3D"pre">torch.neg()</span></code></a></p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.nextafter"><a class=3D"refe=
rence internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/to=
rch.nextafter.html#torch.nextafter" title=3D"torch.nextafter"><code class=
=3D"xref py py-obj docutils literal notranslate"><span class=3D"pre">nextaf=
ter</span></code></a></p></td>
<td><p>Return the next floating-point value after <code class=3D"xref py py=
-attr docutils literal notranslate"><span class=3D"pre">input</span></code>=
 towards <code class=3D"xref py py-attr docutils literal notranslate"><span=
 class=3D"pre">other</span></code>, elementwise.</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.polygamma"><a class=3D"ref=
erence internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/t=
orch.polygamma.html#torch.polygamma" title=3D"torch.polygamma"><code class=
=3D"xref py py-obj docutils literal notranslate"><span class=3D"pre">polyga=
mma</span></code></a></p></td>
<td><p>Alias for <a class=3D"reference internal has-code" href=3D"https://p=
ytorch.org/docs/1.13/special.html#torch.special.polygamma" title=3D"torch.s=
pecial.polygamma"><code class=3D"xref py py-func docutils literal notransla=
te"><span class=3D"pre">torch.special.polygamma()</span></code></a>.</p></t=
d>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.positive"><a class=3D"refer=
ence internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/tor=
ch.positive.html#torch.positive" title=3D"torch.positive"><code class=3D"xr=
ef py py-obj docutils literal notranslate"><span class=3D"pre">positive</sp=
an></code></a></p></td>
<td><p>Returns <code class=3D"xref py py-attr docutils literal notranslate"=
><span class=3D"pre">input</span></code>.</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.pow"><a class=3D"reference=
 internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch.p=
ow.html#torch.pow" title=3D"torch.pow"><code class=3D"xref py py-obj docuti=
ls literal notranslate"><span class=3D"pre">pow</span></code></a></p></td>
<td><p>Takes the power of each element in <code class=3D"xref py py-attr do=
cutils literal notranslate"><span class=3D"pre">input</span></code> with <c=
ode class=3D"xref py py-attr docutils literal notranslate"><span class=3D"p=
re">exponent</span></code> and returns a tensor with the result.</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.quantized_batch_norm"><a cl=
ass=3D"reference internal has-code" href=3D"https://pytorch.org/docs/1.13/g=
enerated/torch.quantized_batch_norm.html#torch.quantized_batch_norm" title=
=3D"torch.quantized_batch_norm"><code class=3D"xref py py-obj docutils lite=
ral notranslate"><span class=3D"pre">quantized_batch_norm</span></code></a>=
</p></td>
<td><p>Applies batch normalization on a 4D (NCHW) quantized tensor.</p></td=
>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.quantized_max_pool1d"><a c=
lass=3D"reference internal has-code" href=3D"https://pytorch.org/docs/1.13/=
generated/torch.quantized_max_pool1d.html#torch.quantized_max_pool1d" title=
=3D"torch.quantized_max_pool1d"><code class=3D"xref py py-obj docutils lite=
ral notranslate"><span class=3D"pre">quantized_max_pool1d</span></code></a>=
</p></td>
<td><p>Applies a 1D max pooling over an input quantized tensor composed of =
several input planes.</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.quantized_max_pool2d"><a cl=
ass=3D"reference internal has-code" href=3D"https://pytorch.org/docs/1.13/g=
enerated/torch.quantized_max_pool2d.html#torch.quantized_max_pool2d" title=
=3D"torch.quantized_max_pool2d"><code class=3D"xref py py-obj docutils lite=
ral notranslate"><span class=3D"pre">quantized_max_pool2d</span></code></a>=
</p></td>
<td><p>Applies a 2D max pooling over an input quantized tensor composed of =
several input planes.</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.rad2deg"><a class=3D"refer=
ence internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/tor=
ch.rad2deg.html#torch.rad2deg" title=3D"torch.rad2deg"><code class=3D"xref =
py py-obj docutils literal notranslate"><span class=3D"pre">rad2deg</span><=
/code></a></p></td>
<td><p>Returns a new tensor with each of the elements of <code class=3D"xre=
f py py-attr docutils literal notranslate"><span class=3D"pre">input</span>=
</code> converted from angles in radians to degrees.</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.real"><a class=3D"reference=
 internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch.r=
eal.html#torch.real" title=3D"torch.real"><code class=3D"xref py py-obj doc=
utils literal notranslate"><span class=3D"pre">real</span></code></a></p></=
td>
<td><p>Returns a new tensor containing real values of the <code class=3D"xr=
ef py py-attr docutils literal notranslate"><span class=3D"pre">self</span>=
</code> tensor.</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.reciprocal"><a class=3D"re=
ference internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/=
torch.reciprocal.html#torch.reciprocal" title=3D"torch.reciprocal"><code cl=
ass=3D"xref py py-obj docutils literal notranslate"><span class=3D"pre">rec=
iprocal</span></code></a></p></td>
<td><p>Returns a new tensor with the reciprocal of the elements of <code cl=
ass=3D"xref py py-attr docutils literal notranslate"><span class=3D"pre">in=
put</span></code></p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.remainder"><a class=3D"refe=
rence internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/to=
rch.remainder.html#torch.remainder" title=3D"torch.remainder"><code class=
=3D"xref py py-obj docutils literal notranslate"><span class=3D"pre">remain=
der</span></code></a></p></td>
<td><p>Computes <a class=3D"reference external" href=3D"https://docs.python=
.org/3/reference/expressions.html#binary-arithmetic-operations">Python's mo=
dulus operation</a> entrywise.</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.round"><a class=3D"referen=
ce internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch=
.round.html#torch.round" title=3D"torch.round"><code class=3D"xref py py-ob=
j docutils literal notranslate"><span class=3D"pre">round</span></code></a>=
</p></td>
<td><p>Rounds elements of <code class=3D"xref py py-attr docutils literal n=
otranslate"><span class=3D"pre">input</span></code> to the nearest integer.=
</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.rsqrt"><a class=3D"referenc=
e internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch.=
rsqrt.html#torch.rsqrt" title=3D"torch.rsqrt"><code class=3D"xref py py-obj=
 docutils literal notranslate"><span class=3D"pre">rsqrt</span></code></a><=
/p></td>
<td><p>Returns a new tensor with the reciprocal of the square-root of each =
of the elements of <code class=3D"xref py py-attr docutils literal notransl=
ate"><span class=3D"pre">input</span></code>.</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.sigmoid"><a class=3D"refer=
ence internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/tor=
ch.sigmoid.html#torch.sigmoid" title=3D"torch.sigmoid"><code class=3D"xref =
py py-obj docutils literal notranslate"><span class=3D"pre">sigmoid</span><=
/code></a></p></td>
<td><p>Alias for <a class=3D"reference internal has-code" href=3D"https://p=
ytorch.org/docs/1.13/special.html#torch.special.expit" title=3D"torch.speci=
al.expit"><code class=3D"xref py py-func docutils literal notranslate"><spa=
n class=3D"pre">torch.special.expit()</span></code></a>.</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.sign"><a class=3D"reference=
 internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch.s=
ign.html#torch.sign" title=3D"torch.sign"><code class=3D"xref py py-obj doc=
utils literal notranslate"><span class=3D"pre">sign</span></code></a></p></=
td>
<td><p>Returns a new tensor with the signs of the elements of <code class=
=3D"xref py py-attr docutils literal notranslate"><span class=3D"pre">input=
</span></code>.</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.sgn"><a class=3D"reference=
 internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch.s=
gn.html#torch.sgn" title=3D"torch.sgn"><code class=3D"xref py py-obj docuti=
ls literal notranslate"><span class=3D"pre">sgn</span></code></a></p></td>
<td><p>This function is an extension of torch.sign() to complex tensors.</p=
></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.signbit"><a class=3D"refere=
nce internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torc=
h.signbit.html#torch.signbit" title=3D"torch.signbit"><code class=3D"xref p=
y py-obj docutils literal notranslate"><span class=3D"pre">signbit</span></=
code></a></p></td>
<td><p>Tests if each element of <code class=3D"xref py py-attr docutils lit=
eral notranslate"><span class=3D"pre">input</span></code> has its sign bit =
set or not.</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.sin"><a class=3D"reference=
 internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch.s=
in.html#torch.sin" title=3D"torch.sin"><code class=3D"xref py py-obj docuti=
ls literal notranslate"><span class=3D"pre">sin</span></code></a></p></td>
<td><p>Returns a new tensor with the sine of the elements of <code class=3D=
"xref py py-attr docutils literal notranslate"><span class=3D"pre">input</s=
pan></code>.</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.sinc"><a class=3D"reference=
 internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch.s=
inc.html#torch.sinc" title=3D"torch.sinc"><code class=3D"xref py py-obj doc=
utils literal notranslate"><span class=3D"pre">sinc</span></code></a></p></=
td>
<td><p>Alias for <a class=3D"reference internal has-code" href=3D"https://p=
ytorch.org/docs/1.13/special.html#torch.special.sinc" title=3D"torch.specia=
l.sinc"><code class=3D"xref py py-func docutils literal notranslate"><span =
class=3D"pre">torch.special.sinc()</span></code></a>.</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.sinh"><a class=3D"referenc=
e internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch.=
sinh.html#torch.sinh" title=3D"torch.sinh"><code class=3D"xref py py-obj do=
cutils literal notranslate"><span class=3D"pre">sinh</span></code></a></p><=
/td>
<td><p>Returns a new tensor with the hyperbolic sine of the elements of <co=
de class=3D"xref py py-attr docutils literal notranslate"><span class=3D"pr=
e">input</span></code>.</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.sqrt"><a class=3D"reference=
 internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch.s=
qrt.html#torch.sqrt" title=3D"torch.sqrt"><code class=3D"xref py py-obj doc=
utils literal notranslate"><span class=3D"pre">sqrt</span></code></a></p></=
td>
<td><p>Returns a new tensor with the square-root of the elements of <code c=
lass=3D"xref py py-attr docutils literal notranslate"><span class=3D"pre">i=
nput</span></code>.</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.square"><a class=3D"refere=
nce internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torc=
h.square.html#torch.square" title=3D"torch.square"><code class=3D"xref py p=
y-obj docutils literal notranslate"><span class=3D"pre">square</span></code=
></a></p></td>
<td><p>Returns a new tensor with the square of the elements of <code class=
=3D"xref py py-attr docutils literal notranslate"><span class=3D"pre">input=
</span></code>.</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.sub"><a class=3D"reference =
internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch.su=
b.html#torch.sub" title=3D"torch.sub"><code class=3D"xref py py-obj docutil=
s literal notranslate"><span class=3D"pre">sub</span></code></a></p></td>
<td><p>Subtracts <code class=3D"xref py py-attr docutils literal notranslat=
e"><span class=3D"pre">other</span></code>, scaled by <code class=3D"xref p=
y py-attr docutils literal notranslate"><span class=3D"pre">alpha</span></c=
ode>, from <code class=3D"xref py py-attr docutils literal notranslate"><sp=
an class=3D"pre">input</span></code>.</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.subtract"><a class=3D"refe=
rence internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/to=
rch.subtract.html#torch.subtract" title=3D"torch.subtract"><code class=3D"x=
ref py py-obj docutils literal notranslate"><span class=3D"pre">subtract</s=
pan></code></a></p></td>
<td><p>Alias for <a class=3D"reference internal has-code" href=3D"https://p=
ytorch.org/docs/1.13/generated/torch.sub.html#torch.sub" title=3D"torch.sub=
"><code class=3D"xref py py-func docutils literal notranslate"><span class=
=3D"pre">torch.sub()</span></code></a>.</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.tan"><a class=3D"reference =
internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch.ta=
n.html#torch.tan" title=3D"torch.tan"><code class=3D"xref py py-obj docutil=
s literal notranslate"><span class=3D"pre">tan</span></code></a></p></td>
<td><p>Returns a new tensor with the tangent of the elements of <code class=
=3D"xref py py-attr docutils literal notranslate"><span class=3D"pre">input=
</span></code>.</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.tanh"><a class=3D"referenc=
e internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch.=
tanh.html#torch.tanh" title=3D"torch.tanh"><code class=3D"xref py py-obj do=
cutils literal notranslate"><span class=3D"pre">tanh</span></code></a></p><=
/td>
<td><p>Returns a new tensor with the hyperbolic tangent of the elements of =
<code class=3D"xref py py-attr docutils literal notranslate"><span class=3D=
"pre">input</span></code>.</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.true_divide"><a class=3D"re=
ference internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/=
torch.true_divide.html#torch.true_divide" title=3D"torch.true_divide"><code=
 class=3D"xref py py-obj docutils literal notranslate"><span class=3D"pre">=
true_divide</span></code></a></p></td>
<td><p>Alias for <a class=3D"reference internal has-code" href=3D"https://p=
ytorch.org/docs/1.13/generated/torch.div.html#torch.div" title=3D"torch.div=
"><code class=3D"xref py py-func docutils literal notranslate"><span class=
=3D"pre">torch.div()</span></code></a> with <code class=3D"docutils literal=
 notranslate"><span class=3D"pre">rounding_mode=3DNone</span></code>.</p></=
td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.trunc"><a class=3D"referen=
ce internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch=
.trunc.html#torch.trunc" title=3D"torch.trunc"><code class=3D"xref py py-ob=
j docutils literal notranslate"><span class=3D"pre">trunc</span></code></a>=
</p></td>
<td><p>Returns a new tensor with the truncated integer values of the elemen=
ts of <code class=3D"xref py py-attr docutils literal notranslate"><span cl=
ass=3D"pre">input</span></code>.</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.xlogy"><a class=3D"referenc=
e internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch.=
xlogy.html#torch.xlogy" title=3D"torch.xlogy"><code class=3D"xref py py-obj=
 docutils literal notranslate"><span class=3D"pre">xlogy</span></code></a><=
/p></td>
<td><p>Alias for <a class=3D"reference internal has-code" href=3D"https://p=
ytorch.org/docs/1.13/special.html#torch.special.xlogy" title=3D"torch.speci=
al.xlogy"><code class=3D"xref py py-func docutils literal notranslate"><spa=
n class=3D"pre">torch.special.xlogy()</span></code></a>.</p></td>
</tr>
</tbody>
</table></div>
</section>
<section id=3D"reduction-ops">
<h3>Reduction Ops<a class=3D"anchorjs-link " aria-label=3D"Anchor" data-anc=
horjs-icon=3D"=EE=A7=8B" href=3D"https://pytorch.org/docs/1.13/torch.html#r=
eduction-ops" style=3D"font: 1em / 1 anchorjs-icons; padding-left: 0.375em;=
"></a></h3>
<div class=3D"wy-table-responsive"><table class=3D"autosummary longtable do=
cutils align-default">
<tbody>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.argmax"><a class=3D"referen=
ce internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch=
.argmax.html#torch.argmax" title=3D"torch.argmax"><code class=3D"xref py py=
-obj docutils literal notranslate"><span class=3D"pre">argmax</span></code>=
</a></p></td>
<td><p>Returns the indices of the maximum value of all elements in the <cod=
e class=3D"xref py py-attr docutils literal notranslate"><span class=3D"pre=
">input</span></code> tensor.</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.argmin"><a class=3D"refere=
nce internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torc=
h.argmin.html#torch.argmin" title=3D"torch.argmin"><code class=3D"xref py p=
y-obj docutils literal notranslate"><span class=3D"pre">argmin</span></code=
></a></p></td>
<td><p>Returns the indices of the minimum value(s) of the flattened tensor =
or along a dimension</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.amax"><a class=3D"reference=
 internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch.a=
max.html#torch.amax" title=3D"torch.amax"><code class=3D"xref py py-obj doc=
utils literal notranslate"><span class=3D"pre">amax</span></code></a></p></=
td>
<td><p>Returns the maximum value of each slice of the <code class=3D"xref p=
y py-attr docutils literal notranslate"><span class=3D"pre">input</span></c=
ode> tensor in the given dimension(s) <code class=3D"xref py py-attr docuti=
ls literal notranslate"><span class=3D"pre">dim</span></code>.</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.amin"><a class=3D"referenc=
e internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch.=
amin.html#torch.amin" title=3D"torch.amin"><code class=3D"xref py py-obj do=
cutils literal notranslate"><span class=3D"pre">amin</span></code></a></p><=
/td>
<td><p>Returns the minimum value of each slice of the <code class=3D"xref p=
y py-attr docutils literal notranslate"><span class=3D"pre">input</span></c=
ode> tensor in the given dimension(s) <code class=3D"xref py py-attr docuti=
ls literal notranslate"><span class=3D"pre">dim</span></code>.</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.aminmax"><a class=3D"refere=
nce internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torc=
h.aminmax.html#torch.aminmax" title=3D"torch.aminmax"><code class=3D"xref p=
y py-obj docutils literal notranslate"><span class=3D"pre">aminmax</span></=
code></a></p></td>
<td><p>Computes the minimum and maximum values of the <code class=3D"xref p=
y py-attr docutils literal notranslate"><span class=3D"pre">input</span></c=
ode> tensor.</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.all"><a class=3D"reference=
 internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch.a=
ll.html#torch.all" title=3D"torch.all"><code class=3D"xref py py-obj docuti=
ls literal notranslate"><span class=3D"pre">all</span></code></a></p></td>
<td><p>Tests if all elements in <code class=3D"xref py py-attr docutils lit=
eral notranslate"><span class=3D"pre">input</span></code> evaluate to <cite=
>True</cite>.</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.any"><a class=3D"reference =
internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch.an=
y.html#torch.any" title=3D"torch.any"><code class=3D"xref py py-obj docutil=
s literal notranslate"><span class=3D"pre">any</span></code></a></p></td>
<td><p>Tests if any element in <code class=3D"xref py py-attr docutils lite=
ral notranslate"><span class=3D"pre">input</span></code> evaluates to <cite=
>True</cite>.</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.max"><a class=3D"reference=
 internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch.m=
ax.html#torch.max" title=3D"torch.max"><code class=3D"xref py py-obj docuti=
ls literal notranslate"><span class=3D"pre">max</span></code></a></p></td>
<td><p>Returns the maximum value of all elements in the <code class=3D"docu=
tils literal notranslate"><span class=3D"pre">input</span></code> tensor.</=
p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.min"><a class=3D"reference =
internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch.mi=
n.html#torch.min" title=3D"torch.min"><code class=3D"xref py py-obj docutil=
s literal notranslate"><span class=3D"pre">min</span></code></a></p></td>
<td><p>Returns the minimum value of all elements in the <code class=3D"xref=
 py py-attr docutils literal notranslate"><span class=3D"pre">input</span><=
/code> tensor.</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.dist"><a class=3D"referenc=
e internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch.=
dist.html#torch.dist" title=3D"torch.dist"><code class=3D"xref py py-obj do=
cutils literal notranslate"><span class=3D"pre">dist</span></code></a></p><=
/td>
<td><p>Returns the p-norm of (<code class=3D"xref py py-attr docutils liter=
al notranslate"><span class=3D"pre">input</span></code> - <code class=3D"xr=
ef py py-attr docutils literal notranslate"><span class=3D"pre">other</span=
></code>)</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.logsumexp"><a class=3D"refe=
rence internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/to=
rch.logsumexp.html#torch.logsumexp" title=3D"torch.logsumexp"><code class=
=3D"xref py py-obj docutils literal notranslate"><span class=3D"pre">logsum=
exp</span></code></a></p></td>
<td><p>Returns the log of summed exponentials of each row of the <code clas=
s=3D"xref py py-attr docutils literal notranslate"><span class=3D"pre">inpu=
t</span></code> tensor in the given dimension <code class=3D"xref py py-att=
r docutils literal notranslate"><span class=3D"pre">dim</span></code>.</p><=
/td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.mean"><a class=3D"referenc=
e internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch.=
mean.html#torch.mean" title=3D"torch.mean"><code class=3D"xref py py-obj do=
cutils literal notranslate"><span class=3D"pre">mean</span></code></a></p><=
/td>
<td><p>Returns the mean value of all elements in the <code class=3D"xref py=
 py-attr docutils literal notranslate"><span class=3D"pre">input</span></co=
de> tensor.</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.nanmean"><a class=3D"refere=
nce internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torc=
h.nanmean.html#torch.nanmean" title=3D"torch.nanmean"><code class=3D"xref p=
y py-obj docutils literal notranslate"><span class=3D"pre">nanmean</span></=
code></a></p></td>
<td><p>Computes the mean of all <cite>non-NaN</cite> elements along the spe=
cified dimensions.</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.median"><a class=3D"refere=
nce internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torc=
h.median.html#torch.median" title=3D"torch.median"><code class=3D"xref py p=
y-obj docutils literal notranslate"><span class=3D"pre">median</span></code=
></a></p></td>
<td><p>Returns the median of the values in <code class=3D"xref py py-attr d=
ocutils literal notranslate"><span class=3D"pre">input</span></code>.</p></=
td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.nanmedian"><a class=3D"refe=
rence internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/to=
rch.nanmedian.html#torch.nanmedian" title=3D"torch.nanmedian"><code class=
=3D"xref py py-obj docutils literal notranslate"><span class=3D"pre">nanmed=
ian</span></code></a></p></td>
<td><p>Returns the median of the values in <code class=3D"xref py py-attr d=
ocutils literal notranslate"><span class=3D"pre">input</span></code>, ignor=
ing <code class=3D"docutils literal notranslate"><span class=3D"pre">NaN</s=
pan></code> values.</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.mode"><a class=3D"referenc=
e internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch.=
mode.html#torch.mode" title=3D"torch.mode"><code class=3D"xref py py-obj do=
cutils literal notranslate"><span class=3D"pre">mode</span></code></a></p><=
/td>
<td><p>Returns a namedtuple <code class=3D"docutils literal notranslate"><s=
pan class=3D"pre">(values,</span> <span class=3D"pre">indices)</span></code=
> where <code class=3D"docutils literal notranslate"><span class=3D"pre">va=
lues</span></code> is the mode value of each row of the <code class=3D"xref=
 py py-attr docutils literal notranslate"><span class=3D"pre">input</span><=
/code> tensor in the given dimension <code class=3D"xref py py-attr docutil=
s literal notranslate"><span class=3D"pre">dim</span></code>, i.e. a value =
which appears most often in that row, and <code class=3D"docutils literal n=
otranslate"><span class=3D"pre">indices</span></code> is the index location=
 of each mode value found.</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.norm"><a class=3D"reference=
 internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch.n=
orm.html#torch.norm" title=3D"torch.norm"><code class=3D"xref py py-obj doc=
utils literal notranslate"><span class=3D"pre">norm</span></code></a></p></=
td>
<td><p>Returns the matrix norm or vector norm of a given tensor.</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.nansum"><a class=3D"refere=
nce internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torc=
h.nansum.html#torch.nansum" title=3D"torch.nansum"><code class=3D"xref py p=
y-obj docutils literal notranslate"><span class=3D"pre">nansum</span></code=
></a></p></td>
<td><p>Returns the sum of all elements, treating Not a Numbers (NaNs) as ze=
ro.</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.prod"><a class=3D"reference=
 internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch.p=
rod.html#torch.prod" title=3D"torch.prod"><code class=3D"xref py py-obj doc=
utils literal notranslate"><span class=3D"pre">prod</span></code></a></p></=
td>
<td><p>Returns the product of all elements in the <code class=3D"xref py py=
-attr docutils literal notranslate"><span class=3D"pre">input</span></code>=
 tensor.</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.quantile"><a class=3D"refe=
rence internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/to=
rch.quantile.html#torch.quantile" title=3D"torch.quantile"><code class=3D"x=
ref py py-obj docutils literal notranslate"><span class=3D"pre">quantile</s=
pan></code></a></p></td>
<td><p>Computes the q-th quantiles of each row of the <code class=3D"xref p=
y py-attr docutils literal notranslate"><span class=3D"pre">input</span></c=
ode> tensor along the dimension <code class=3D"xref py py-attr docutils lit=
eral notranslate"><span class=3D"pre">dim</span></code>.</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.nanquantile"><a class=3D"re=
ference internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/=
torch.nanquantile.html#torch.nanquantile" title=3D"torch.nanquantile"><code=
 class=3D"xref py py-obj docutils literal notranslate"><span class=3D"pre">=
nanquantile</span></code></a></p></td>
<td><p>This is a variant of <a class=3D"reference internal has-code" href=
=3D"https://pytorch.org/docs/1.13/generated/torch.quantile.html#torch.quant=
ile" title=3D"torch.quantile"><code class=3D"xref py py-func docutils liter=
al notranslate"><span class=3D"pre">torch.quantile()</span></code></a> that=
 "ignores" <code class=3D"docutils literal notranslate"><span class=3D"pre"=
>NaN</span></code> values, computing the quantiles <code class=3D"xref py p=
y-attr docutils literal notranslate"><span class=3D"pre">q</span></code> as=
 if <code class=3D"docutils literal notranslate"><span class=3D"pre">NaN</s=
pan></code> values in <code class=3D"xref py py-attr docutils literal notra=
nslate"><span class=3D"pre">input</span></code> did not exist.</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.std"><a class=3D"reference=
 internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch.s=
td.html#torch.std" title=3D"torch.std"><code class=3D"xref py py-obj docuti=
ls literal notranslate"><span class=3D"pre">std</span></code></a></p></td>
<td><p>If <code class=3D"xref py py-attr docutils literal notranslate"><spa=
n class=3D"pre">unbiased</span></code> is <code class=3D"docutils literal n=
otranslate"><span class=3D"pre">True</span></code>, Bessel's correction wil=
l be used.</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.std_mean"><a class=3D"refer=
ence internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/tor=
ch.std_mean.html#torch.std_mean" title=3D"torch.std_mean"><code class=3D"xr=
ef py py-obj docutils literal notranslate"><span class=3D"pre">std_mean</sp=
an></code></a></p></td>
<td><p>If <code class=3D"xref py py-attr docutils literal notranslate"><spa=
n class=3D"pre">unbiased</span></code> is <code class=3D"docutils literal n=
otranslate"><span class=3D"pre">True</span></code>, Bessel's correction wil=
l be used to calculate the standard deviation.</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.sum"><a class=3D"reference=
 internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch.s=
um.html#torch.sum" title=3D"torch.sum"><code class=3D"xref py py-obj docuti=
ls literal notranslate"><span class=3D"pre">sum</span></code></a></p></td>
<td><p>Returns the sum of all elements in the <code class=3D"xref py py-att=
r docutils literal notranslate"><span class=3D"pre">input</span></code> ten=
sor.</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.unique"><a class=3D"referen=
ce internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch=
.unique.html#torch.unique" title=3D"torch.unique"><code class=3D"xref py py=
-obj docutils literal notranslate"><span class=3D"pre">unique</span></code>=
</a></p></td>
<td><p>Returns the unique elements of the input tensor.</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.unique_consecutive"><a cla=
ss=3D"reference internal has-code" href=3D"https://pytorch.org/docs/1.13/ge=
nerated/torch.unique_consecutive.html#torch.unique_consecutive" title=3D"to=
rch.unique_consecutive"><code class=3D"xref py py-obj docutils literal notr=
anslate"><span class=3D"pre">unique_consecutive</span></code></a></p></td>
<td><p>Eliminates all but the first element from every consecutive group of=
 equivalent elements.</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.var"><a class=3D"reference =
internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch.va=
r.html#torch.var" title=3D"torch.var"><code class=3D"xref py py-obj docutil=
s literal notranslate"><span class=3D"pre">var</span></code></a></p></td>
<td><p>If <code class=3D"xref py py-attr docutils literal notranslate"><spa=
n class=3D"pre">unbiased</span></code> is <code class=3D"docutils literal n=
otranslate"><span class=3D"pre">True</span></code>, Bessel's correction wil=
l be used.</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.var_mean"><a class=3D"refe=
rence internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/to=
rch.var_mean.html#torch.var_mean" title=3D"torch.var_mean"><code class=3D"x=
ref py py-obj docutils literal notranslate"><span class=3D"pre">var_mean</s=
pan></code></a></p></td>
<td><p>If <code class=3D"xref py py-attr docutils literal notranslate"><spa=
n class=3D"pre">unbiased</span></code> is <code class=3D"docutils literal n=
otranslate"><span class=3D"pre">True</span></code>, Bessel's correction wil=
l be used to calculate the variance.</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.count_nonzero"><a class=3D"=
reference internal has-code" href=3D"https://pytorch.org/docs/1.13/generate=
d/torch.count_nonzero.html#torch.count_nonzero" title=3D"torch.count_nonzer=
o"><code class=3D"xref py py-obj docutils literal notranslate"><span class=
=3D"pre">count_nonzero</span></code></a></p></td>
<td><p>Counts the number of non-zero values in the tensor <code class=3D"xr=
ef py py-attr docutils literal notranslate"><span class=3D"pre">input</span=
></code> along the given <code class=3D"xref py py-attr docutils literal no=
translate"><span class=3D"pre">dim</span></code>.</p></td>
</tr>
</tbody>
</table></div>
</section>
<section id=3D"comparison-ops">
<h3>Comparison Ops<a class=3D"anchorjs-link " aria-label=3D"Anchor" data-an=
chorjs-icon=3D"=EE=A7=8B" href=3D"https://pytorch.org/docs/1.13/torch.html#=
comparison-ops" style=3D"font: 1em / 1 anchorjs-icons; padding-left: 0.375e=
m;"></a></h3>
<div class=3D"wy-table-responsive"><table class=3D"autosummary longtable do=
cutils align-default">
<tbody>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.allclose"><a class=3D"refer=
ence internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/tor=
ch.allclose.html#torch.allclose" title=3D"torch.allclose"><code class=3D"xr=
ef py py-obj docutils literal notranslate"><span class=3D"pre">allclose</sp=
an></code></a></p></td>
<td><p>This function checks if all <code class=3D"xref py py-attr docutils =
literal notranslate"><span class=3D"pre">input</span></code> and <code clas=
s=3D"xref py py-attr docutils literal notranslate"><span class=3D"pre">othe=
r</span></code> satisfy the condition:</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.argsort"><a class=3D"refer=
ence internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/tor=
ch.argsort.html#torch.argsort" title=3D"torch.argsort"><code class=3D"xref =
py py-obj docutils literal notranslate"><span class=3D"pre">argsort</span><=
/code></a></p></td>
<td><p>Returns the indices that sort a tensor along a given dimension in as=
cending order by value.</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.eq"><a class=3D"reference i=
nternal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch.eq.=
html#torch.eq" title=3D"torch.eq"><code class=3D"xref py py-obj docutils li=
teral notranslate"><span class=3D"pre">eq</span></code></a></p></td>
<td><p>Computes element-wise equality</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.equal"><a class=3D"referen=
ce internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch=
.equal.html#torch.equal" title=3D"torch.equal"><code class=3D"xref py py-ob=
j docutils literal notranslate"><span class=3D"pre">equal</span></code></a>=
</p></td>
<td><p><code class=3D"docutils literal notranslate"><span class=3D"pre">Tru=
e</span></code> if two tensors have the same size and elements, <code class=
=3D"docutils literal notranslate"><span class=3D"pre">False</span></code> o=
therwise.</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.ge"><a class=3D"reference i=
nternal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch.ge.=
html#torch.ge" title=3D"torch.ge"><code class=3D"xref py py-obj docutils li=
teral notranslate"><span class=3D"pre">ge</span></code></a></p></td>
<td><p>Computes <span class=3D"math"><span class=3D"katex"><span class=3D"k=
atex-mathml"><math xmlns=3D"http://www.w3.org/1998/Math/MathML"><semantics>=
<mrow><mtext>input</mtext><mo>=E2=89=A5</mo><mtext>other</mtext></mrow><ann=
otation encoding=3D"application/x-tex">\text{input} \geq \text{other}</anno=
tation></semantics></math></span><span class=3D"katex-html" aria-hidden=3D"=
true"><span class=3D"base"><span class=3D"strut" style=3D"height:0.8623em;v=
ertical-align:-0.1944em;"></span><span class=3D"mord text"><span class=3D"m=
ord">input</span></span><span class=3D"mspace" style=3D"margin-right:0.2778=
em;"></span><span class=3D"mrel">=E2=89=A5</span><span class=3D"mspace" sty=
le=3D"margin-right:0.2778em;"></span></span><span class=3D"base"><span clas=
s=3D"strut" style=3D"height:0.6944em;"></span><span class=3D"mord text"><sp=
an class=3D"mord">other</span></span></span></span></span></span> element-w=
ise.</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.greater_equal"><a class=3D=
"reference internal has-code" href=3D"https://pytorch.org/docs/1.13/generat=
ed/torch.greater_equal.html#torch.greater_equal" title=3D"torch.greater_equ=
al"><code class=3D"xref py py-obj docutils literal notranslate"><span class=
=3D"pre">greater_equal</span></code></a></p></td>
<td><p>Alias for <a class=3D"reference internal has-code" href=3D"https://p=
ytorch.org/docs/1.13/generated/torch.ge.html#torch.ge" title=3D"torch.ge"><=
code class=3D"xref py py-func docutils literal notranslate"><span class=3D"=
pre">torch.ge()</span></code></a>.</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.gt"><a class=3D"reference i=
nternal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch.gt.=
html#torch.gt" title=3D"torch.gt"><code class=3D"xref py py-obj docutils li=
teral notranslate"><span class=3D"pre">gt</span></code></a></p></td>
<td><p>Computes <span class=3D"math"><span class=3D"katex"><span class=3D"k=
atex-mathml"><math xmlns=3D"http://www.w3.org/1998/Math/MathML"><semantics>=
<mrow><mtext>input</mtext><mo>&gt;</mo><mtext>other</mtext></mrow><annotati=
on encoding=3D"application/x-tex">\text{input} &gt; \text{other}</annotatio=
n></semantics></math></span><span class=3D"katex-html" aria-hidden=3D"true"=
><span class=3D"base"><span class=3D"strut" style=3D"height:0.8623em;vertic=
al-align:-0.1944em;"></span><span class=3D"mord text"><span class=3D"mord">=
input</span></span><span class=3D"mspace" style=3D"margin-right:0.2778em;">=
</span><span class=3D"mrel">&gt;</span><span class=3D"mspace" style=3D"marg=
in-right:0.2778em;"></span></span><span class=3D"base"><span class=3D"strut=
" style=3D"height:0.6944em;"></span><span class=3D"mord text"><span class=
=3D"mord">other</span></span></span></span></span></span> element-wise.</p>=
</td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.greater"><a class=3D"refer=
ence internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/tor=
ch.greater.html#torch.greater" title=3D"torch.greater"><code class=3D"xref =
py py-obj docutils literal notranslate"><span class=3D"pre">greater</span><=
/code></a></p></td>
<td><p>Alias for <a class=3D"reference internal has-code" href=3D"https://p=
ytorch.org/docs/1.13/generated/torch.gt.html#torch.gt" title=3D"torch.gt"><=
code class=3D"xref py py-func docutils literal notranslate"><span class=3D"=
pre">torch.gt()</span></code></a>.</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.isclose"><a class=3D"refere=
nce internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torc=
h.isclose.html#torch.isclose" title=3D"torch.isclose"><code class=3D"xref p=
y py-obj docutils literal notranslate"><span class=3D"pre">isclose</span></=
code></a></p></td>
<td><p>Returns a new tensor with boolean elements representing if each elem=
ent of <code class=3D"xref py py-attr docutils literal notranslate"><span c=
lass=3D"pre">input</span></code> is "close" to the corresponding element of=
 <code class=3D"xref py py-attr docutils literal notranslate"><span class=
=3D"pre">other</span></code>.</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.isfinite"><a class=3D"refe=
rence internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/to=
rch.isfinite.html#torch.isfinite" title=3D"torch.isfinite"><code class=3D"x=
ref py py-obj docutils literal notranslate"><span class=3D"pre">isfinite</s=
pan></code></a></p></td>
<td><p>Returns a new tensor with boolean elements representing if each elem=
ent is <cite>finite</cite> or not.</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.isin"><a class=3D"reference=
 internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch.i=
sin.html#torch.isin" title=3D"torch.isin"><code class=3D"xref py py-obj doc=
utils literal notranslate"><span class=3D"pre">isin</span></code></a></p></=
td>
<td><p>Tests if each element of <code class=3D"xref py py-attr docutils lit=
eral notranslate"><span class=3D"pre">elements</span></code> is in <code cl=
ass=3D"xref py py-attr docutils literal notranslate"><span class=3D"pre">te=
st_elements</span></code>.</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.isinf"><a class=3D"referen=
ce internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch=
.isinf.html#torch.isinf" title=3D"torch.isinf"><code class=3D"xref py py-ob=
j docutils literal notranslate"><span class=3D"pre">isinf</span></code></a>=
</p></td>
<td><p>Tests if each element of <code class=3D"xref py py-attr docutils lit=
eral notranslate"><span class=3D"pre">input</span></code> is infinite (posi=
tive or negative infinity) or not.</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.isposinf"><a class=3D"refer=
ence internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/tor=
ch.isposinf.html#torch.isposinf" title=3D"torch.isposinf"><code class=3D"xr=
ef py py-obj docutils literal notranslate"><span class=3D"pre">isposinf</sp=
an></code></a></p></td>
<td><p>Tests if each element of <code class=3D"xref py py-attr docutils lit=
eral notranslate"><span class=3D"pre">input</span></code> is positive infin=
ity or not.</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.isneginf"><a class=3D"refe=
rence internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/to=
rch.isneginf.html#torch.isneginf" title=3D"torch.isneginf"><code class=3D"x=
ref py py-obj docutils literal notranslate"><span class=3D"pre">isneginf</s=
pan></code></a></p></td>
<td><p>Tests if each element of <code class=3D"xref py py-attr docutils lit=
eral notranslate"><span class=3D"pre">input</span></code> is negative infin=
ity or not.</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.isnan"><a class=3D"referenc=
e internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch.=
isnan.html#torch.isnan" title=3D"torch.isnan"><code class=3D"xref py py-obj=
 docutils literal notranslate"><span class=3D"pre">isnan</span></code></a><=
/p></td>
<td><p>Returns a new tensor with boolean elements representing if each elem=
ent of <code class=3D"xref py py-attr docutils literal notranslate"><span c=
lass=3D"pre">input</span></code> is NaN or not.</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.isreal"><a class=3D"refere=
nce internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torc=
h.isreal.html#torch.isreal" title=3D"torch.isreal"><code class=3D"xref py p=
y-obj docutils literal notranslate"><span class=3D"pre">isreal</span></code=
></a></p></td>
<td><p>Returns a new tensor with boolean elements representing if each elem=
ent of <code class=3D"xref py py-attr docutils literal notranslate"><span c=
lass=3D"pre">input</span></code> is real-valued or not.</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.kthvalue"><a class=3D"refer=
ence internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/tor=
ch.kthvalue.html#torch.kthvalue" title=3D"torch.kthvalue"><code class=3D"xr=
ef py py-obj docutils literal notranslate"><span class=3D"pre">kthvalue</sp=
an></code></a></p></td>
<td><p>Returns a namedtuple <code class=3D"docutils literal notranslate"><s=
pan class=3D"pre">(values,</span> <span class=3D"pre">indices)</span></code=
> where <code class=3D"docutils literal notranslate"><span class=3D"pre">va=
lues</span></code> is the <code class=3D"xref py py-attr docutils literal n=
otranslate"><span class=3D"pre">k</span></code> th smallest element of each=
 row of the <code class=3D"xref py py-attr docutils literal notranslate"><s=
pan class=3D"pre">input</span></code> tensor in the given dimension <code c=
lass=3D"xref py py-attr docutils literal notranslate"><span class=3D"pre">d=
im</span></code>.</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.le"><a class=3D"reference =
internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch.le=
.html#torch.le" title=3D"torch.le"><code class=3D"xref py py-obj docutils l=
iteral notranslate"><span class=3D"pre">le</span></code></a></p></td>
<td><p>Computes <span class=3D"math"><span class=3D"katex"><span class=3D"k=
atex-mathml"><math xmlns=3D"http://www.w3.org/1998/Math/MathML"><semantics>=
<mrow><mtext>input</mtext><mo>=E2=89=A4</mo><mtext>other</mtext></mrow><ann=
otation encoding=3D"application/x-tex">\text{input} \leq \text{other}</anno=
tation></semantics></math></span><span class=3D"katex-html" aria-hidden=3D"=
true"><span class=3D"base"><span class=3D"strut" style=3D"height:0.8623em;v=
ertical-align:-0.1944em;"></span><span class=3D"mord text"><span class=3D"m=
ord">input</span></span><span class=3D"mspace" style=3D"margin-right:0.2778=
em;"></span><span class=3D"mrel">=E2=89=A4</span><span class=3D"mspace" sty=
le=3D"margin-right:0.2778em;"></span></span><span class=3D"base"><span clas=
s=3D"strut" style=3D"height:0.6944em;"></span><span class=3D"mord text"><sp=
an class=3D"mord">other</span></span></span></span></span></span> element-w=
ise.</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.less_equal"><a class=3D"ref=
erence internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/t=
orch.less_equal.html#torch.less_equal" title=3D"torch.less_equal"><code cla=
ss=3D"xref py py-obj docutils literal notranslate"><span class=3D"pre">less=
_equal</span></code></a></p></td>
<td><p>Alias for <a class=3D"reference internal has-code" href=3D"https://p=
ytorch.org/docs/1.13/generated/torch.le.html#torch.le" title=3D"torch.le"><=
code class=3D"xref py py-func docutils literal notranslate"><span class=3D"=
pre">torch.le()</span></code></a>.</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.lt"><a class=3D"reference =
internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch.lt=
.html#torch.lt" title=3D"torch.lt"><code class=3D"xref py py-obj docutils l=
iteral notranslate"><span class=3D"pre">lt</span></code></a></p></td>
<td><p>Computes <span class=3D"math"><span class=3D"katex"><span class=3D"k=
atex-mathml"><math xmlns=3D"http://www.w3.org/1998/Math/MathML"><semantics>=
<mrow><mtext>input</mtext><mo>&lt;</mo><mtext>other</mtext></mrow><annotati=
on encoding=3D"application/x-tex">\text{input} &lt; \text{other}</annotatio=
n></semantics></math></span><span class=3D"katex-html" aria-hidden=3D"true"=
><span class=3D"base"><span class=3D"strut" style=3D"height:0.8623em;vertic=
al-align:-0.1944em;"></span><span class=3D"mord text"><span class=3D"mord">=
input</span></span><span class=3D"mspace" style=3D"margin-right:0.2778em;">=
</span><span class=3D"mrel">&lt;</span><span class=3D"mspace" style=3D"marg=
in-right:0.2778em;"></span></span><span class=3D"base"><span class=3D"strut=
" style=3D"height:0.6944em;"></span><span class=3D"mord text"><span class=
=3D"mord">other</span></span></span></span></span></span> element-wise.</p>=
</td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.less"><a class=3D"reference=
 internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch.l=
ess.html#torch.less" title=3D"torch.less"><code class=3D"xref py py-obj doc=
utils literal notranslate"><span class=3D"pre">less</span></code></a></p></=
td>
<td><p>Alias for <a class=3D"reference internal has-code" href=3D"https://p=
ytorch.org/docs/1.13/generated/torch.lt.html#torch.lt" title=3D"torch.lt"><=
code class=3D"xref py py-func docutils literal notranslate"><span class=3D"=
pre">torch.lt()</span></code></a>.</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.maximum"><a class=3D"refer=
ence internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/tor=
ch.maximum.html#torch.maximum" title=3D"torch.maximum"><code class=3D"xref =
py py-obj docutils literal notranslate"><span class=3D"pre">maximum</span><=
/code></a></p></td>
<td><p>Computes the element-wise maximum of <code class=3D"xref py py-attr =
docutils literal notranslate"><span class=3D"pre">input</span></code> and <=
code class=3D"xref py py-attr docutils literal notranslate"><span class=3D"=
pre">other</span></code>.</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.minimum"><a class=3D"refere=
nce internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torc=
h.minimum.html#torch.minimum" title=3D"torch.minimum"><code class=3D"xref p=
y py-obj docutils literal notranslate"><span class=3D"pre">minimum</span></=
code></a></p></td>
<td><p>Computes the element-wise minimum of <code class=3D"xref py py-attr =
docutils literal notranslate"><span class=3D"pre">input</span></code> and <=
code class=3D"xref py py-attr docutils literal notranslate"><span class=3D"=
pre">other</span></code>.</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.fmax"><a class=3D"referenc=
e internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch.=
fmax.html#torch.fmax" title=3D"torch.fmax"><code class=3D"xref py py-obj do=
cutils literal notranslate"><span class=3D"pre">fmax</span></code></a></p><=
/td>
<td><p>Computes the element-wise maximum of <code class=3D"xref py py-attr =
docutils literal notranslate"><span class=3D"pre">input</span></code> and <=
code class=3D"xref py py-attr docutils literal notranslate"><span class=3D"=
pre">other</span></code>.</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.fmin"><a class=3D"reference=
 internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch.f=
min.html#torch.fmin" title=3D"torch.fmin"><code class=3D"xref py py-obj doc=
utils literal notranslate"><span class=3D"pre">fmin</span></code></a></p></=
td>
<td><p>Computes the element-wise minimum of <code class=3D"xref py py-attr =
docutils literal notranslate"><span class=3D"pre">input</span></code> and <=
code class=3D"xref py py-attr docutils literal notranslate"><span class=3D"=
pre">other</span></code>.</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.ne"><a class=3D"reference =
internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch.ne=
.html#torch.ne" title=3D"torch.ne"><code class=3D"xref py py-obj docutils l=
iteral notranslate"><span class=3D"pre">ne</span></code></a></p></td>
<td><p>Computes <span class=3D"math"><span class=3D"katex"><span class=3D"k=
atex-mathml"><math xmlns=3D"http://www.w3.org/1998/Math/MathML"><semantics>=
<mrow><mtext>input</mtext><mo mathvariant=3D"normal">=E2=89=A0</mo><mtext>o=
ther</mtext></mrow><annotation encoding=3D"application/x-tex">\text{input} =
\neq \text{other}</annotation></semantics></math></span><span class=3D"kate=
x-html" aria-hidden=3D"true"><span class=3D"base"><span class=3D"strut" sty=
le=3D"height:0.8889em;vertical-align:-0.1944em;"></span><span class=3D"mord=
 text"><span class=3D"mord">input</span></span><span class=3D"mspace" style=
=3D"margin-right:0.2778em;"></span><span class=3D"mrel"><span class=3D"mrel=
"><span class=3D"mord vbox"><span class=3D"thinbox"><span class=3D"rlap"><s=
pan class=3D"strut" style=3D"height:0.8889em;vertical-align:-0.1944em;"></s=
pan><span class=3D"inner"><span class=3D"mord"><span class=3D"mrel">=EE=80=
=A0</span></span></span><span class=3D"fix"></span></span></span></span></s=
pan><span class=3D"mrel">=3D</span></span><span class=3D"mspace" style=3D"m=
argin-right:0.2778em;"></span></span><span class=3D"base"><span class=3D"st=
rut" style=3D"height:0.6944em;"></span><span class=3D"mord text"><span clas=
s=3D"mord">other</span></span></span></span></span></span> element-wise.</p=
></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.not_equal"><a class=3D"refe=
rence internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/to=
rch.not_equal.html#torch.not_equal" title=3D"torch.not_equal"><code class=
=3D"xref py py-obj docutils literal notranslate"><span class=3D"pre">not_eq=
ual</span></code></a></p></td>
<td><p>Alias for <a class=3D"reference internal has-code" href=3D"https://p=
ytorch.org/docs/1.13/generated/torch.ne.html#torch.ne" title=3D"torch.ne"><=
code class=3D"xref py py-func docutils literal notranslate"><span class=3D"=
pre">torch.ne()</span></code></a>.</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.sort"><a class=3D"referenc=
e internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch.=
sort.html#torch.sort" title=3D"torch.sort"><code class=3D"xref py py-obj do=
cutils literal notranslate"><span class=3D"pre">sort</span></code></a></p><=
/td>
<td><p>Sorts the elements of the <code class=3D"xref py py-attr docutils li=
teral notranslate"><span class=3D"pre">input</span></code> tensor along a g=
iven dimension in ascending order by value.</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.topk"><a class=3D"reference=
 internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch.t=
opk.html#torch.topk" title=3D"torch.topk"><code class=3D"xref py py-obj doc=
utils literal notranslate"><span class=3D"pre">topk</span></code></a></p></=
td>
<td><p>Returns the <code class=3D"xref py py-attr docutils literal notransl=
ate"><span class=3D"pre">k</span></code> largest elements of the given <cod=
e class=3D"xref py py-attr docutils literal notranslate"><span class=3D"pre=
">input</span></code> tensor along a given dimension.</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.msort"><a class=3D"referen=
ce internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch=
.msort.html#torch.msort" title=3D"torch.msort"><code class=3D"xref py py-ob=
j docutils literal notranslate"><span class=3D"pre">msort</span></code></a>=
</p></td>
<td><p>Sorts the elements of the <code class=3D"xref py py-attr docutils li=
teral notranslate"><span class=3D"pre">input</span></code> tensor along its=
 first dimension in ascending order by value.</p></td>
</tr>
</tbody>
</table></div>
</section>
<section id=3D"spectral-ops">
<h3>Spectral Ops<a class=3D"anchorjs-link " aria-label=3D"Anchor" data-anch=
orjs-icon=3D"=EE=A7=8B" href=3D"https://pytorch.org/docs/1.13/torch.html#sp=
ectral-ops" style=3D"font: 1em / 1 anchorjs-icons; padding-left: 0.375em;">=
</a></h3>
<div class=3D"wy-table-responsive"><table class=3D"autosummary longtable do=
cutils align-default">
<tbody>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.stft"><a class=3D"reference=
 internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch.s=
tft.html#torch.stft" title=3D"torch.stft"><code class=3D"xref py py-obj doc=
utils literal notranslate"><span class=3D"pre">stft</span></code></a></p></=
td>
<td><p>Short-time Fourier transform (STFT).</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.istft"><a class=3D"referen=
ce internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch=
.istft.html#torch.istft" title=3D"torch.istft"><code class=3D"xref py py-ob=
j docutils literal notranslate"><span class=3D"pre">istft</span></code></a>=
</p></td>
<td><p>Inverse short time Fourier Transform.</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.bartlett_window"><a class=
=3D"reference internal has-code" href=3D"https://pytorch.org/docs/1.13/gene=
rated/torch.bartlett_window.html#torch.bartlett_window" title=3D"torch.bart=
lett_window"><code class=3D"xref py py-obj docutils literal notranslate"><s=
pan class=3D"pre">bartlett_window</span></code></a></p></td>
<td><p>Bartlett window function.</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.blackman_window"><a class=
=3D"reference internal has-code" href=3D"https://pytorch.org/docs/1.13/gene=
rated/torch.blackman_window.html#torch.blackman_window" title=3D"torch.blac=
kman_window"><code class=3D"xref py py-obj docutils literal notranslate"><s=
pan class=3D"pre">blackman_window</span></code></a></p></td>
<td><p>Blackman window function.</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.hamming_window"><a class=3D=
"reference internal has-code" href=3D"https://pytorch.org/docs/1.13/generat=
ed/torch.hamming_window.html#torch.hamming_window" title=3D"torch.hamming_w=
indow"><code class=3D"xref py py-obj docutils literal notranslate"><span cl=
ass=3D"pre">hamming_window</span></code></a></p></td>
<td><p>Hamming window function.</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.hann_window"><a class=3D"r=
eference internal has-code" href=3D"https://pytorch.org/docs/1.13/generated=
/torch.hann_window.html#torch.hann_window" title=3D"torch.hann_window"><cod=
e class=3D"xref py py-obj docutils literal notranslate"><span class=3D"pre"=
>hann_window</span></code></a></p></td>
<td><p>Hann window function.</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.kaiser_window"><a class=3D"=
reference internal has-code" href=3D"https://pytorch.org/docs/1.13/generate=
d/torch.kaiser_window.html#torch.kaiser_window" title=3D"torch.kaiser_windo=
w"><code class=3D"xref py py-obj docutils literal notranslate"><span class=
=3D"pre">kaiser_window</span></code></a></p></td>
<td><p>Computes the Kaiser window with window length <code class=3D"xref py=
 py-attr docutils literal notranslate"><span class=3D"pre">window_length</s=
pan></code> and shape parameter <code class=3D"xref py py-attr docutils lit=
eral notranslate"><span class=3D"pre">beta</span></code>.</p></td>
</tr>
</tbody>
</table></div>
</section>
<section id=3D"other-operations">
<h3>Other Operations<a class=3D"anchorjs-link " aria-label=3D"Anchor" data-=
anchorjs-icon=3D"=EE=A7=8B" href=3D"https://pytorch.org/docs/1.13/torch.htm=
l#other-operations" style=3D"font: 1em / 1 anchorjs-icons; padding-left: 0.=
375em;"></a></h3>
<div class=3D"wy-table-responsive"><table class=3D"autosummary longtable do=
cutils align-default">
<tbody>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.atleast_1d"><a class=3D"ref=
erence internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/t=
orch.atleast_1d.html#torch.atleast_1d" title=3D"torch.atleast_1d"><code cla=
ss=3D"xref py py-obj docutils literal notranslate"><span class=3D"pre">atle=
ast_1d</span></code></a></p></td>
<td><p>Returns a 1-dimensional view of each input tensor with zero dimensio=
ns.</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.atleast_2d"><a class=3D"re=
ference internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/=
torch.atleast_2d.html#torch.atleast_2d" title=3D"torch.atleast_2d"><code cl=
ass=3D"xref py py-obj docutils literal notranslate"><span class=3D"pre">atl=
east_2d</span></code></a></p></td>
<td><p>Returns a 2-dimensional view of each input tensor with zero dimensio=
ns.</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.atleast_3d"><a class=3D"ref=
erence internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/t=
orch.atleast_3d.html#torch.atleast_3d" title=3D"torch.atleast_3d"><code cla=
ss=3D"xref py py-obj docutils literal notranslate"><span class=3D"pre">atle=
ast_3d</span></code></a></p></td>
<td><p>Returns a 3-dimensional view of each input tensor with zero dimensio=
ns.</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.bincount"><a class=3D"refe=
rence internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/to=
rch.bincount.html#torch.bincount" title=3D"torch.bincount"><code class=3D"x=
ref py py-obj docutils literal notranslate"><span class=3D"pre">bincount</s=
pan></code></a></p></td>
<td><p>Count the frequency of each value in an array of non-negative ints.<=
/p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.block_diag"><a class=3D"ref=
erence internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/t=
orch.block_diag.html#torch.block_diag" title=3D"torch.block_diag"><code cla=
ss=3D"xref py py-obj docutils literal notranslate"><span class=3D"pre">bloc=
k_diag</span></code></a></p></td>
<td><p>Create a block diagonal matrix from provided tensors.</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.broadcast_tensors"><a clas=
s=3D"reference internal has-code" href=3D"https://pytorch.org/docs/1.13/gen=
erated/torch.broadcast_tensors.html#torch.broadcast_tensors" title=3D"torch=
.broadcast_tensors"><code class=3D"xref py py-obj docutils literal notransl=
ate"><span class=3D"pre">broadcast_tensors</span></code></a></p></td>
<td><p>Broadcasts the given tensors according to <a class=3D"reference inte=
rnal" href=3D"https://pytorch.org/docs/1.13/notes/broadcasting.html#broadca=
sting-semantics"><span class=3D"std std-ref">Broadcasting semantics</span><=
/a>.</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.broadcast_to"><a class=3D"r=
eference internal has-code" href=3D"https://pytorch.org/docs/1.13/generated=
/torch.broadcast_to.html#torch.broadcast_to" title=3D"torch.broadcast_to"><=
code class=3D"xref py py-obj docutils literal notranslate"><span class=3D"p=
re">broadcast_to</span></code></a></p></td>
<td><p>Broadcasts <code class=3D"xref py py-attr docutils literal notransla=
te"><span class=3D"pre">input</span></code> to the shape <code class=3D"xre=
f py py-attr docutils literal notranslate"><span class=3D"pre">shape</span>=
</code>.</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.broadcast_shapes"><a class=
=3D"reference internal has-code" href=3D"https://pytorch.org/docs/1.13/gene=
rated/torch.broadcast_shapes.html#torch.broadcast_shapes" title=3D"torch.br=
oadcast_shapes"><code class=3D"xref py py-obj docutils literal notranslate"=
><span class=3D"pre">broadcast_shapes</span></code></a></p></td>
<td><p>Similar to <a class=3D"reference internal has-code" href=3D"https://=
pytorch.org/docs/1.13/generated/torch.broadcast_tensors.html#torch.broadcas=
t_tensors" title=3D"torch.broadcast_tensors"><code class=3D"xref py py-func=
 docutils literal notranslate"><span class=3D"pre">broadcast_tensors()</spa=
n></code></a> but for shapes.</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.bucketize"><a class=3D"refe=
rence internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/to=
rch.bucketize.html#torch.bucketize" title=3D"torch.bucketize"><code class=
=3D"xref py py-obj docutils literal notranslate"><span class=3D"pre">bucket=
ize</span></code></a></p></td>
<td><p>Returns the indices of the buckets to which each value in the <code =
class=3D"xref py py-attr docutils literal notranslate"><span class=3D"pre">=
input</span></code> belongs, where the boundaries of the buckets are set by=
 <code class=3D"xref py py-attr docutils literal notranslate"><span class=
=3D"pre">boundaries</span></code>.</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.cartesian_prod"><a class=
=3D"reference internal has-code" href=3D"https://pytorch.org/docs/1.13/gene=
rated/torch.cartesian_prod.html#torch.cartesian_prod" title=3D"torch.cartes=
ian_prod"><code class=3D"xref py py-obj docutils literal notranslate"><span=
 class=3D"pre">cartesian_prod</span></code></a></p></td>
<td><p>Do cartesian product of the given sequence of tensors.</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.cdist"><a class=3D"referenc=
e internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch.=
cdist.html#torch.cdist" title=3D"torch.cdist"><code class=3D"xref py py-obj=
 docutils literal notranslate"><span class=3D"pre">cdist</span></code></a><=
/p></td>
<td><p>Computes batched the p-norm distance between each pair of the two co=
llections of row vectors.</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.clone"><a class=3D"referen=
ce internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch=
.clone.html#torch.clone" title=3D"torch.clone"><code class=3D"xref py py-ob=
j docutils literal notranslate"><span class=3D"pre">clone</span></code></a>=
</p></td>
<td><p>Returns a copy of <code class=3D"xref py py-attr docutils literal no=
translate"><span class=3D"pre">input</span></code>.</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.combinations"><a class=3D"r=
eference internal has-code" href=3D"https://pytorch.org/docs/1.13/generated=
/torch.combinations.html#torch.combinations" title=3D"torch.combinations"><=
code class=3D"xref py py-obj docutils literal notranslate"><span class=3D"p=
re">combinations</span></code></a></p></td>
<td><p>Compute combinations of length <span class=3D"math"><span class=3D"k=
atex"><span class=3D"katex-mathml"><math xmlns=3D"http://www.w3.org/1998/Ma=
th/MathML"><semantics><mrow><mi>r</mi></mrow><annotation encoding=3D"applic=
ation/x-tex">r</annotation></semantics></math></span><span class=3D"katex-h=
tml" aria-hidden=3D"true"><span class=3D"base"><span class=3D"strut" style=
=3D"height:0.4306em;"></span><span class=3D"mord mathnormal" style=3D"margi=
n-right:0.02778em;">r</span></span></span></span></span> of the given tenso=
r.</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.corrcoef"><a class=3D"refe=
rence internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/to=
rch.corrcoef.html#torch.corrcoef" title=3D"torch.corrcoef"><code class=3D"x=
ref py py-obj docutils literal notranslate"><span class=3D"pre">corrcoef</s=
pan></code></a></p></td>
<td><p>Estimates the Pearson product-moment correlation coefficient matrix =
of the variables given by the <code class=3D"xref py py-attr docutils liter=
al notranslate"><span class=3D"pre">input</span></code> matrix, where rows =
are the variables and columns are the observations.</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.cov"><a class=3D"reference =
internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch.co=
v.html#torch.cov" title=3D"torch.cov"><code class=3D"xref py py-obj docutil=
s literal notranslate"><span class=3D"pre">cov</span></code></a></p></td>
<td><p>Estimates the covariance matrix of the variables given by the <code =
class=3D"xref py py-attr docutils literal notranslate"><span class=3D"pre">=
input</span></code> matrix, where rows are the variables and columns are th=
e observations.</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.cross"><a class=3D"referen=
ce internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch=
.cross.html#torch.cross" title=3D"torch.cross"><code class=3D"xref py py-ob=
j docutils literal notranslate"><span class=3D"pre">cross</span></code></a>=
</p></td>
<td><p>Returns the cross product of vectors in dimension <code class=3D"xre=
f py py-attr docutils literal notranslate"><span class=3D"pre">dim</span></=
code> of <code class=3D"xref py py-attr docutils literal notranslate"><span=
 class=3D"pre">input</span></code> and <code class=3D"xref py py-attr docut=
ils literal notranslate"><span class=3D"pre">other</span></code>.</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.cummax"><a class=3D"referen=
ce internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch=
.cummax.html#torch.cummax" title=3D"torch.cummax"><code class=3D"xref py py=
-obj docutils literal notranslate"><span class=3D"pre">cummax</span></code>=
</a></p></td>
<td><p>Returns a namedtuple <code class=3D"docutils literal notranslate"><s=
pan class=3D"pre">(values,</span> <span class=3D"pre">indices)</span></code=
> where <code class=3D"docutils literal notranslate"><span class=3D"pre">va=
lues</span></code> is the cumulative maximum of elements of <code class=3D"=
xref py py-attr docutils literal notranslate"><span class=3D"pre">input</sp=
an></code> in the dimension <code class=3D"xref py py-attr docutils literal=
 notranslate"><span class=3D"pre">dim</span></code>.</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.cummin"><a class=3D"refere=
nce internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torc=
h.cummin.html#torch.cummin" title=3D"torch.cummin"><code class=3D"xref py p=
y-obj docutils literal notranslate"><span class=3D"pre">cummin</span></code=
></a></p></td>
<td><p>Returns a namedtuple <code class=3D"docutils literal notranslate"><s=
pan class=3D"pre">(values,</span> <span class=3D"pre">indices)</span></code=
> where <code class=3D"docutils literal notranslate"><span class=3D"pre">va=
lues</span></code> is the cumulative minimum of elements of <code class=3D"=
xref py py-attr docutils literal notranslate"><span class=3D"pre">input</sp=
an></code> in the dimension <code class=3D"xref py py-attr docutils literal=
 notranslate"><span class=3D"pre">dim</span></code>.</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.cumprod"><a class=3D"refere=
nce internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torc=
h.cumprod.html#torch.cumprod" title=3D"torch.cumprod"><code class=3D"xref p=
y py-obj docutils literal notranslate"><span class=3D"pre">cumprod</span></=
code></a></p></td>
<td><p>Returns the cumulative product of elements of <code class=3D"xref py=
 py-attr docutils literal notranslate"><span class=3D"pre">input</span></co=
de> in the dimension <code class=3D"xref py py-attr docutils literal notran=
slate"><span class=3D"pre">dim</span></code>.</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.cumsum"><a class=3D"refere=
nce internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torc=
h.cumsum.html#torch.cumsum" title=3D"torch.cumsum"><code class=3D"xref py p=
y-obj docutils literal notranslate"><span class=3D"pre">cumsum</span></code=
></a></p></td>
<td><p>Returns the cumulative sum of elements of <code class=3D"xref py py-=
attr docutils literal notranslate"><span class=3D"pre">input</span></code> =
in the dimension <code class=3D"xref py py-attr docutils literal notranslat=
e"><span class=3D"pre">dim</span></code>.</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.diag"><a class=3D"reference=
 internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch.d=
iag.html#torch.diag" title=3D"torch.diag"><code class=3D"xref py py-obj doc=
utils literal notranslate"><span class=3D"pre">diag</span></code></a></p></=
td>
<td><p></p><ul class=3D"simple">
<li><p>If <code class=3D"xref py py-attr docutils literal notranslate"><spa=
n class=3D"pre">input</span></code> is a vector (1-D tensor), then returns =
a 2-D square tensor</p></li>
</ul>
<p></p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.diag_embed"><a class=3D"re=
ference internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/=
torch.diag_embed.html#torch.diag_embed" title=3D"torch.diag_embed"><code cl=
ass=3D"xref py py-obj docutils literal notranslate"><span class=3D"pre">dia=
g_embed</span></code></a></p></td>
<td><p>Creates a tensor whose diagonals of certain 2D planes (specified by =
<code class=3D"xref py py-attr docutils literal notranslate"><span class=3D=
"pre">dim1</span></code> and <code class=3D"xref py py-attr docutils litera=
l notranslate"><span class=3D"pre">dim2</span></code>) are filled by <code =
class=3D"xref py py-attr docutils literal notranslate"><span class=3D"pre">=
input</span></code>.</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.diagflat"><a class=3D"refer=
ence internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/tor=
ch.diagflat.html#torch.diagflat" title=3D"torch.diagflat"><code class=3D"xr=
ef py py-obj docutils literal notranslate"><span class=3D"pre">diagflat</sp=
an></code></a></p></td>
<td><p></p><ul class=3D"simple">
<li><p>If <code class=3D"xref py py-attr docutils literal notranslate"><spa=
n class=3D"pre">input</span></code> is a vector (1-D tensor), then returns =
a 2-D square tensor</p></li>
</ul>
<p></p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.diagonal"><a class=3D"refe=
rence internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/to=
rch.diagonal.html#torch.diagonal" title=3D"torch.diagonal"><code class=3D"x=
ref py py-obj docutils literal notranslate"><span class=3D"pre">diagonal</s=
pan></code></a></p></td>
<td><p>Returns a partial view of <code class=3D"xref py py-attr docutils li=
teral notranslate"><span class=3D"pre">input</span></code> with the its dia=
gonal elements with respect to <code class=3D"xref py py-attr docutils lite=
ral notranslate"><span class=3D"pre">dim1</span></code> and <code class=3D"=
xref py py-attr docutils literal notranslate"><span class=3D"pre">dim2</spa=
n></code> appended as a dimension at the end of the shape.</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.diff"><a class=3D"reference=
 internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch.d=
iff.html#torch.diff" title=3D"torch.diff"><code class=3D"xref py py-obj doc=
utils literal notranslate"><span class=3D"pre">diff</span></code></a></p></=
td>
<td><p>Computes the n-th forward difference along the given dimension.</p><=
/td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.einsum"><a class=3D"refere=
nce internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torc=
h.einsum.html#torch.einsum" title=3D"torch.einsum"><code class=3D"xref py p=
y-obj docutils literal notranslate"><span class=3D"pre">einsum</span></code=
></a></p></td>
<td><p>Sums the product of the elements of the input <code class=3D"xref py=
 py-attr docutils literal notranslate"><span class=3D"pre">operands</span><=
/code> along dimensions specified using a notation based on the Einstein su=
mmation convention.</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.flatten"><a class=3D"refere=
nce internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torc=
h.flatten.html#torch.flatten" title=3D"torch.flatten"><code class=3D"xref p=
y py-obj docutils literal notranslate"><span class=3D"pre">flatten</span></=
code></a></p></td>
<td><p>Flattens <code class=3D"xref py py-attr docutils literal notranslate=
"><span class=3D"pre">input</span></code> by reshaping it into a one-dimens=
ional tensor.</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.flip"><a class=3D"referenc=
e internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch.=
flip.html#torch.flip" title=3D"torch.flip"><code class=3D"xref py py-obj do=
cutils literal notranslate"><span class=3D"pre">flip</span></code></a></p><=
/td>
<td><p>Reverse the order of a n-D tensor along given axis in dims.</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.fliplr"><a class=3D"referen=
ce internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch=
.fliplr.html#torch.fliplr" title=3D"torch.fliplr"><code class=3D"xref py py=
-obj docutils literal notranslate"><span class=3D"pre">fliplr</span></code>=
</a></p></td>
<td><p>Flip tensor in the left/right direction, returning a new tensor.</p>=
</td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.flipud"><a class=3D"refere=
nce internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torc=
h.flipud.html#torch.flipud" title=3D"torch.flipud"><code class=3D"xref py p=
y-obj docutils literal notranslate"><span class=3D"pre">flipud</span></code=
></a></p></td>
<td><p>Flip tensor in the up/down direction, returning a new tensor.</p></t=
d>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.kron"><a class=3D"reference=
 internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch.k=
ron.html#torch.kron" title=3D"torch.kron"><code class=3D"xref py py-obj doc=
utils literal notranslate"><span class=3D"pre">kron</span></code></a></p></=
td>
<td><p>Computes the Kronecker product, denoted by <span class=3D"math"><spa=
n class=3D"katex"><span class=3D"katex-mathml"><math xmlns=3D"http://www.w3=
.org/1998/Math/MathML"><semantics><mrow><mo>=E2=8A=97</mo></mrow><annotatio=
n encoding=3D"application/x-tex">\otimes</annotation></semantics></math></s=
pan><span class=3D"katex-html" aria-hidden=3D"true"><span class=3D"base"><s=
pan class=3D"strut" style=3D"height:0.6667em;vertical-align:-0.0833em;"></s=
pan><span class=3D"mord">=E2=8A=97</span></span></span></span></span>, of <=
code class=3D"xref py py-attr docutils literal notranslate"><span class=3D"=
pre">input</span></code> and <code class=3D"xref py py-attr docutils litera=
l notranslate"><span class=3D"pre">other</span></code>.</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.rot90"><a class=3D"referen=
ce internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch=
.rot90.html#torch.rot90" title=3D"torch.rot90"><code class=3D"xref py py-ob=
j docutils literal notranslate"><span class=3D"pre">rot90</span></code></a>=
</p></td>
<td><p>Rotate a n-D tensor by 90 degrees in the plane specified by dims axi=
s.</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.gcd"><a class=3D"reference =
internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch.gc=
d.html#torch.gcd" title=3D"torch.gcd"><code class=3D"xref py py-obj docutil=
s literal notranslate"><span class=3D"pre">gcd</span></code></a></p></td>
<td><p>Computes the element-wise greatest common divisor (GCD) of <code cla=
ss=3D"xref py py-attr docutils literal notranslate"><span class=3D"pre">inp=
ut</span></code> and <code class=3D"xref py py-attr docutils literal notran=
slate"><span class=3D"pre">other</span></code>.</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.histc"><a class=3D"referen=
ce internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch=
.histc.html#torch.histc" title=3D"torch.histc"><code class=3D"xref py py-ob=
j docutils literal notranslate"><span class=3D"pre">histc</span></code></a>=
</p></td>
<td><p>Computes the histogram of a tensor.</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.histogram"><a class=3D"refe=
rence internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/to=
rch.histogram.html#torch.histogram" title=3D"torch.histogram"><code class=
=3D"xref py py-obj docutils literal notranslate"><span class=3D"pre">histog=
ram</span></code></a></p></td>
<td><p>Computes a histogram of the values in a tensor.</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.histogramdd"><a class=3D"r=
eference internal has-code" href=3D"https://pytorch.org/docs/1.13/generated=
/torch.histogramdd.html#torch.histogramdd" title=3D"torch.histogramdd"><cod=
e class=3D"xref py py-obj docutils literal notranslate"><span class=3D"pre"=
>histogramdd</span></code></a></p></td>
<td><p>Computes a multi-dimensional histogram of the values in a tensor.</p=
></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.meshgrid"><a class=3D"refer=
ence internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/tor=
ch.meshgrid.html#torch.meshgrid" title=3D"torch.meshgrid"><code class=3D"xr=
ef py py-obj docutils literal notranslate"><span class=3D"pre">meshgrid</sp=
an></code></a></p></td>
<td><p>Creates grids of coordinates specified by the 1D inputs in <cite>att=
r</cite>:tensors.</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.lcm"><a class=3D"reference=
 internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch.l=
cm.html#torch.lcm" title=3D"torch.lcm"><code class=3D"xref py py-obj docuti=
ls literal notranslate"><span class=3D"pre">lcm</span></code></a></p></td>
<td><p>Computes the element-wise least common multiple (LCM) of <code class=
=3D"xref py py-attr docutils literal notranslate"><span class=3D"pre">input=
</span></code> and <code class=3D"xref py py-attr docutils literal notransl=
ate"><span class=3D"pre">other</span></code>.</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.logcumsumexp"><a class=3D"r=
eference internal has-code" href=3D"https://pytorch.org/docs/1.13/generated=
/torch.logcumsumexp.html#torch.logcumsumexp" title=3D"torch.logcumsumexp"><=
code class=3D"xref py py-obj docutils literal notranslate"><span class=3D"p=
re">logcumsumexp</span></code></a></p></td>
<td><p>Returns the logarithm of the cumulative summation of the exponentiat=
ion of elements of <code class=3D"xref py py-attr docutils literal notransl=
ate"><span class=3D"pre">input</span></code> in the dimension <code class=
=3D"xref py py-attr docutils literal notranslate"><span class=3D"pre">dim</=
span></code>.</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.ravel"><a class=3D"referen=
ce internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch=
.ravel.html#torch.ravel" title=3D"torch.ravel"><code class=3D"xref py py-ob=
j docutils literal notranslate"><span class=3D"pre">ravel</span></code></a>=
</p></td>
<td><p>Return a contiguous flattened tensor.</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.renorm"><a class=3D"referen=
ce internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch=
.renorm.html#torch.renorm" title=3D"torch.renorm"><code class=3D"xref py py=
-obj docutils literal notranslate"><span class=3D"pre">renorm</span></code>=
</a></p></td>
<td><p>Returns a tensor where each sub-tensor of <code class=3D"xref py py-=
attr docutils literal notranslate"><span class=3D"pre">input</span></code> =
along dimension <code class=3D"xref py py-attr docutils literal notranslate=
"><span class=3D"pre">dim</span></code> is normalized such that the <cite>p=
</cite>-norm of the sub-tensor is lower than the value <code class=3D"xref =
py py-attr docutils literal notranslate"><span class=3D"pre">maxnorm</span>=
</code></p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.repeat_interleave"><a clas=
s=3D"reference internal has-code" href=3D"https://pytorch.org/docs/1.13/gen=
erated/torch.repeat_interleave.html#torch.repeat_interleave" title=3D"torch=
.repeat_interleave"><code class=3D"xref py py-obj docutils literal notransl=
ate"><span class=3D"pre">repeat_interleave</span></code></a></p></td>
<td><p>Repeat elements of a tensor.</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.roll"><a class=3D"reference=
 internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch.r=
oll.html#torch.roll" title=3D"torch.roll"><code class=3D"xref py py-obj doc=
utils literal notranslate"><span class=3D"pre">roll</span></code></a></p></=
td>
<td><p>Roll the tensor <code class=3D"xref py py-attr docutils literal notr=
anslate"><span class=3D"pre">input</span></code> along the given dimension(=
s).</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.searchsorted"><a class=3D"=
reference internal has-code" href=3D"https://pytorch.org/docs/1.13/generate=
d/torch.searchsorted.html#torch.searchsorted" title=3D"torch.searchsorted">=
<code class=3D"xref py py-obj docutils literal notranslate"><span class=3D"=
pre">searchsorted</span></code></a></p></td>
<td><p>Find the indices from the <em>innermost</em> dimension of <code clas=
s=3D"xref py py-attr docutils literal notranslate"><span class=3D"pre">sort=
ed_sequence</span></code> such that, if the corresponding values in <code c=
lass=3D"xref py py-attr docutils literal notranslate"><span class=3D"pre">v=
alues</span></code> were inserted before the indices, when sorted, the orde=
r of the corresponding <em>innermost</em> dimension within <code class=3D"x=
ref py py-attr docutils literal notranslate"><span class=3D"pre">sorted_seq=
uence</span></code> would be preserved.</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.tensordot"><a class=3D"refe=
rence internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/to=
rch.tensordot.html#torch.tensordot" title=3D"torch.tensordot"><code class=
=3D"xref py py-obj docutils literal notranslate"><span class=3D"pre">tensor=
dot</span></code></a></p></td>
<td><p>Returns a contraction of a and b over multiple dimensions.</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.trace"><a class=3D"referen=
ce internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch=
.trace.html#torch.trace" title=3D"torch.trace"><code class=3D"xref py py-ob=
j docutils literal notranslate"><span class=3D"pre">trace</span></code></a>=
</p></td>
<td><p>Returns the sum of the elements of the diagonal of the input 2-D mat=
rix.</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.tril"><a class=3D"reference=
 internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch.t=
ril.html#torch.tril" title=3D"torch.tril"><code class=3D"xref py py-obj doc=
utils literal notranslate"><span class=3D"pre">tril</span></code></a></p></=
td>
<td><p>Returns the lower triangular part of the matrix (2-D tensor) or batc=
h of matrices <code class=3D"xref py py-attr docutils literal notranslate">=
<span class=3D"pre">input</span></code>, the other elements of the result t=
ensor <code class=3D"xref py py-attr docutils literal notranslate"><span cl=
ass=3D"pre">out</span></code> are set to 0.</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.tril_indices"><a class=3D"=
reference internal has-code" href=3D"https://pytorch.org/docs/1.13/generate=
d/torch.tril_indices.html#torch.tril_indices" title=3D"torch.tril_indices">=
<code class=3D"xref py py-obj docutils literal notranslate"><span class=3D"=
pre">tril_indices</span></code></a></p></td>
<td><p>Returns the indices of the lower triangular part of a <code class=3D=
"xref py py-attr docutils literal notranslate"><span class=3D"pre">row</spa=
n></code>-by- <code class=3D"xref py py-attr docutils literal notranslate">=
<span class=3D"pre">col</span></code> matrix in a 2-by-N Tensor, where the =
first row contains row coordinates of all indices and the second row contai=
ns column coordinates.</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.triu"><a class=3D"reference=
 internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch.t=
riu.html#torch.triu" title=3D"torch.triu"><code class=3D"xref py py-obj doc=
utils literal notranslate"><span class=3D"pre">triu</span></code></a></p></=
td>
<td><p>Returns the upper triangular part of a matrix (2-D tensor) or batch =
of matrices <code class=3D"xref py py-attr docutils literal notranslate"><s=
pan class=3D"pre">input</span></code>, the other elements of the result ten=
sor <code class=3D"xref py py-attr docutils literal notranslate"><span clas=
s=3D"pre">out</span></code> are set to 0.</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.triu_indices"><a class=3D"=
reference internal has-code" href=3D"https://pytorch.org/docs/1.13/generate=
d/torch.triu_indices.html#torch.triu_indices" title=3D"torch.triu_indices">=
<code class=3D"xref py py-obj docutils literal notranslate"><span class=3D"=
pre">triu_indices</span></code></a></p></td>
<td><p>Returns the indices of the upper triangular part of a <code class=3D=
"xref py py-attr docutils literal notranslate"><span class=3D"pre">row</spa=
n></code> by <code class=3D"xref py py-attr docutils literal notranslate"><=
span class=3D"pre">col</span></code> matrix in a 2-by-N Tensor, where the f=
irst row contains row coordinates of all indices and the second row contain=
s column coordinates.</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.unflatten"><a class=3D"refe=
rence internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/to=
rch.unflatten.html#torch.unflatten" title=3D"torch.unflatten"><code class=
=3D"xref py py-obj docutils literal notranslate"><span class=3D"pre">unflat=
ten</span></code></a></p></td>
<td><p>Expands a dimension of the input tensor over multiple dimensions.</p=
></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.vander"><a class=3D"refere=
nce internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torc=
h.vander.html#torch.vander" title=3D"torch.vander"><code class=3D"xref py p=
y-obj docutils literal notranslate"><span class=3D"pre">vander</span></code=
></a></p></td>
<td><p>Generates a Vandermonde matrix.</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.view_as_real"><a class=3D"r=
eference internal has-code" href=3D"https://pytorch.org/docs/1.13/generated=
/torch.view_as_real.html#torch.view_as_real" title=3D"torch.view_as_real"><=
code class=3D"xref py py-obj docutils literal notranslate"><span class=3D"p=
re">view_as_real</span></code></a></p></td>
<td><p>Returns a view of <code class=3D"xref py py-attr docutils literal no=
translate"><span class=3D"pre">input</span></code> as a real tensor.</p></t=
d>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.view_as_complex"><a class=
=3D"reference internal has-code" href=3D"https://pytorch.org/docs/1.13/gene=
rated/torch.view_as_complex.html#torch.view_as_complex" title=3D"torch.view=
_as_complex"><code class=3D"xref py py-obj docutils literal notranslate"><s=
pan class=3D"pre">view_as_complex</span></code></a></p></td>
<td><p>Returns a view of <code class=3D"xref py py-attr docutils literal no=
translate"><span class=3D"pre">input</span></code> as a complex tensor.</p>=
</td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.resolve_conj"><a class=3D"r=
eference internal has-code" href=3D"https://pytorch.org/docs/1.13/generated=
/torch.resolve_conj.html#torch.resolve_conj" title=3D"torch.resolve_conj"><=
code class=3D"xref py py-obj docutils literal notranslate"><span class=3D"p=
re">resolve_conj</span></code></a></p></td>
<td><p>Returns a new tensor with materialized conjugation if <code class=3D=
"xref py py-attr docutils literal notranslate"><span class=3D"pre">input</s=
pan></code>'s conjugate bit is set to <cite>True</cite>, else returns <code=
 class=3D"xref py py-attr docutils literal notranslate"><span class=3D"pre"=
>input</span></code>.</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.resolve_neg"><a class=3D"r=
eference internal has-code" href=3D"https://pytorch.org/docs/1.13/generated=
/torch.resolve_neg.html#torch.resolve_neg" title=3D"torch.resolve_neg"><cod=
e class=3D"xref py py-obj docutils literal notranslate"><span class=3D"pre"=
>resolve_neg</span></code></a></p></td>
<td><p>Returns a new tensor with materialized negation if <code class=3D"xr=
ef py py-attr docutils literal notranslate"><span class=3D"pre">input</span=
></code>'s negative bit is set to <cite>True</cite>, else returns <code cla=
ss=3D"xref py py-attr docutils literal notranslate"><span class=3D"pre">inp=
ut</span></code>.</p></td>
</tr>
</tbody>
</table></div>
</section>
<section id=3D"blas-and-lapack-operations">
<h3>BLAS and LAPACK Operations<a class=3D"anchorjs-link " aria-label=3D"Anc=
hor" data-anchorjs-icon=3D"=EE=A7=8B" href=3D"https://pytorch.org/docs/1.13=
/torch.html#blas-and-lapack-operations" style=3D"font: 1em / 1 anchorjs-ico=
ns; padding-left: 0.375em;"></a></h3>
<div class=3D"wy-table-responsive"><table class=3D"autosummary longtable do=
cutils align-default">
<tbody>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.addbmm"><a class=3D"referen=
ce internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch=
.addbmm.html#torch.addbmm" title=3D"torch.addbmm"><code class=3D"xref py py=
-obj docutils literal notranslate"><span class=3D"pre">addbmm</span></code>=
</a></p></td>
<td><p>Performs a batch matrix-matrix product of matrices stored in <code c=
lass=3D"xref py py-attr docutils literal notranslate"><span class=3D"pre">b=
atch1</span></code> and <code class=3D"xref py py-attr docutils literal not=
ranslate"><span class=3D"pre">batch2</span></code>, with a reduced add step=
 (all matrix multiplications get accumulated along the first dimension).</p=
></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.addmm"><a class=3D"referen=
ce internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch=
.addmm.html#torch.addmm" title=3D"torch.addmm"><code class=3D"xref py py-ob=
j docutils literal notranslate"><span class=3D"pre">addmm</span></code></a>=
</p></td>
<td><p>Performs a matrix multiplication of the matrices <code class=3D"xref=
 py py-attr docutils literal notranslate"><span class=3D"pre">mat1</span></=
code> and <code class=3D"xref py py-attr docutils literal notranslate"><spa=
n class=3D"pre">mat2</span></code>.</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.addmv"><a class=3D"referenc=
e internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch.=
addmv.html#torch.addmv" title=3D"torch.addmv"><code class=3D"xref py py-obj=
 docutils literal notranslate"><span class=3D"pre">addmv</span></code></a><=
/p></td>
<td><p>Performs a matrix-vector product of the matrix <code class=3D"xref p=
y py-attr docutils literal notranslate"><span class=3D"pre">mat</span></cod=
e> and the vector <code class=3D"xref py py-attr docutils literal notransla=
te"><span class=3D"pre">vec</span></code>.</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.addr"><a class=3D"referenc=
e internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch.=
addr.html#torch.addr" title=3D"torch.addr"><code class=3D"xref py py-obj do=
cutils literal notranslate"><span class=3D"pre">addr</span></code></a></p><=
/td>
<td><p>Performs the outer-product of vectors <code class=3D"xref py py-attr=
 docutils literal notranslate"><span class=3D"pre">vec1</span></code> and <=
code class=3D"xref py py-attr docutils literal notranslate"><span class=3D"=
pre">vec2</span></code> and adds it to the matrix <code class=3D"xref py py=
-attr docutils literal notranslate"><span class=3D"pre">input</span></code>=
.</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.baddbmm"><a class=3D"refere=
nce internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torc=
h.baddbmm.html#torch.baddbmm" title=3D"torch.baddbmm"><code class=3D"xref p=
y py-obj docutils literal notranslate"><span class=3D"pre">baddbmm</span></=
code></a></p></td>
<td><p>Performs a batch matrix-matrix product of matrices in <code class=3D=
"xref py py-attr docutils literal notranslate"><span class=3D"pre">batch1</=
span></code> and <code class=3D"xref py py-attr docutils literal notranslat=
e"><span class=3D"pre">batch2</span></code>.</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.bmm"><a class=3D"reference=
 internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch.b=
mm.html#torch.bmm" title=3D"torch.bmm"><code class=3D"xref py py-obj docuti=
ls literal notranslate"><span class=3D"pre">bmm</span></code></a></p></td>
<td><p>Performs a batch matrix-matrix product of matrices stored in <code c=
lass=3D"xref py py-attr docutils literal notranslate"><span class=3D"pre">i=
nput</span></code> and <code class=3D"xref py py-attr docutils literal notr=
anslate"><span class=3D"pre">mat2</span></code>.</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.chain_matmul"><a class=3D"r=
eference internal has-code" href=3D"https://pytorch.org/docs/1.13/generated=
/torch.chain_matmul.html#torch.chain_matmul" title=3D"torch.chain_matmul"><=
code class=3D"xref py py-obj docutils literal notranslate"><span class=3D"p=
re">chain_matmul</span></code></a></p></td>
<td><p>Returns the matrix product of the <span class=3D"math"><span class=
=3D"katex"><span class=3D"katex-mathml"><math xmlns=3D"http://www.w3.org/19=
98/Math/MathML"><semantics><mrow><mi>N</mi></mrow><annotation encoding=3D"a=
pplication/x-tex">N</annotation></semantics></math></span><span class=3D"ka=
tex-html" aria-hidden=3D"true"><span class=3D"base"><span class=3D"strut" s=
tyle=3D"height:0.6833em;"></span><span class=3D"mord mathnormal" style=3D"m=
argin-right:0.10903em;">N</span></span></span></span></span> 2-D tensors.</=
p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.cholesky"><a class=3D"refe=
rence internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/to=
rch.cholesky.html#torch.cholesky" title=3D"torch.cholesky"><code class=3D"x=
ref py py-obj docutils literal notranslate"><span class=3D"pre">cholesky</s=
pan></code></a></p></td>
<td><p>Computes the Cholesky decomposition of a symmetric positive-definite=
 matrix <span class=3D"math"><span class=3D"katex"><span class=3D"katex-mat=
hml"><math xmlns=3D"http://www.w3.org/1998/Math/MathML"><semantics><mrow><m=
i>A</mi></mrow><annotation encoding=3D"application/x-tex">A</annotation></s=
emantics></math></span><span class=3D"katex-html" aria-hidden=3D"true"><spa=
n class=3D"base"><span class=3D"strut" style=3D"height:0.6833em;"></span><s=
pan class=3D"mord mathnormal">A</span></span></span></span></span> or for b=
atches of symmetric positive-definite matrices.</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.cholesky_inverse"><a class=
=3D"reference internal has-code" href=3D"https://pytorch.org/docs/1.13/gene=
rated/torch.cholesky_inverse.html#torch.cholesky_inverse" title=3D"torch.ch=
olesky_inverse"><code class=3D"xref py py-obj docutils literal notranslate"=
><span class=3D"pre">cholesky_inverse</span></code></a></p></td>
<td><p>Computes the inverse of a symmetric positive-definite matrix <span c=
lass=3D"math"><span class=3D"katex"><span class=3D"katex-mathml"><math xmln=
s=3D"http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi></mrow>=
<annotation encoding=3D"application/x-tex">A</annotation></semantics></math=
></span><span class=3D"katex-html" aria-hidden=3D"true"><span class=3D"base=
"><span class=3D"strut" style=3D"height:0.6833em;"></span><span class=3D"mo=
rd mathnormal">A</span></span></span></span></span> using its Cholesky fact=
or <span class=3D"math"><span class=3D"katex"><span class=3D"katex-mathml">=
<math xmlns=3D"http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>u</=
mi></mrow><annotation encoding=3D"application/x-tex">u</annotation></semant=
ics></math></span><span class=3D"katex-html" aria-hidden=3D"true"><span cla=
ss=3D"base"><span class=3D"strut" style=3D"height:0.4306em;"></span><span c=
lass=3D"mord mathnormal">u</span></span></span></span></span>: returns matr=
ix <code class=3D"docutils literal notranslate"><span class=3D"pre">inv</sp=
an></code>.</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.cholesky_solve"><a class=
=3D"reference internal has-code" href=3D"https://pytorch.org/docs/1.13/gene=
rated/torch.cholesky_solve.html#torch.cholesky_solve" title=3D"torch.choles=
ky_solve"><code class=3D"xref py py-obj docutils literal notranslate"><span=
 class=3D"pre">cholesky_solve</span></code></a></p></td>
<td><p>Solves a linear system of equations with a positive semidefinite mat=
rix to be inverted given its Cholesky factor matrix <span class=3D"math"><s=
pan class=3D"katex"><span class=3D"katex-mathml"><math xmlns=3D"http://www.=
w3.org/1998/Math/MathML"><semantics><mrow><mi>u</mi></mrow><annotation enco=
ding=3D"application/x-tex">u</annotation></semantics></math></span><span cl=
ass=3D"katex-html" aria-hidden=3D"true"><span class=3D"base"><span class=3D=
"strut" style=3D"height:0.4306em;"></span><span class=3D"mord mathnormal">u=
</span></span></span></span></span>.</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.dot"><a class=3D"reference =
internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch.do=
t.html#torch.dot" title=3D"torch.dot"><code class=3D"xref py py-obj docutil=
s literal notranslate"><span class=3D"pre">dot</span></code></a></p></td>
<td><p>Computes the dot product of two 1D tensors.</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.geqrf"><a class=3D"referen=
ce internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch=
.geqrf.html#torch.geqrf" title=3D"torch.geqrf"><code class=3D"xref py py-ob=
j docutils literal notranslate"><span class=3D"pre">geqrf</span></code></a>=
</p></td>
<td><p>This is a low-level function for calling LAPACK's geqrf directly.</p=
></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.ger"><a class=3D"reference =
internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch.ge=
r.html#torch.ger" title=3D"torch.ger"><code class=3D"xref py py-obj docutil=
s literal notranslate"><span class=3D"pre">ger</span></code></a></p></td>
<td><p>Alias of <a class=3D"reference internal has-code" href=3D"https://py=
torch.org/docs/1.13/generated/torch.outer.html#torch.outer" title=3D"torch.=
outer"><code class=3D"xref py py-func docutils literal notranslate"><span c=
lass=3D"pre">torch.outer()</span></code></a>.</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.inner"><a class=3D"referen=
ce internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch=
.inner.html#torch.inner" title=3D"torch.inner"><code class=3D"xref py py-ob=
j docutils literal notranslate"><span class=3D"pre">inner</span></code></a>=
</p></td>
<td><p>Computes the dot product for 1D tensors.</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.inverse"><a class=3D"refere=
nce internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torc=
h.inverse.html#torch.inverse" title=3D"torch.inverse"><code class=3D"xref p=
y py-obj docutils literal notranslate"><span class=3D"pre">inverse</span></=
code></a></p></td>
<td><p>Alias for <a class=3D"reference internal has-code" href=3D"https://p=
ytorch.org/docs/1.13/generated/torch.linalg.inv.html#torch.linalg.inv" titl=
e=3D"torch.linalg.inv"><code class=3D"xref py py-func docutils literal notr=
anslate"><span class=3D"pre">torch.linalg.inv()</span></code></a></p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.det"><a class=3D"reference=
 internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch.d=
et.html#torch.det" title=3D"torch.det"><code class=3D"xref py py-obj docuti=
ls literal notranslate"><span class=3D"pre">det</span></code></a></p></td>
<td><p>Alias for <a class=3D"reference internal has-code" href=3D"https://p=
ytorch.org/docs/1.13/generated/torch.linalg.det.html#torch.linalg.det" titl=
e=3D"torch.linalg.det"><code class=3D"xref py py-func docutils literal notr=
anslate"><span class=3D"pre">torch.linalg.det()</span></code></a></p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.logdet"><a class=3D"referen=
ce internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch=
.logdet.html#torch.logdet" title=3D"torch.logdet"><code class=3D"xref py py=
-obj docutils literal notranslate"><span class=3D"pre">logdet</span></code>=
</a></p></td>
<td><p>Calculates log determinant of a square matrix or batches of square m=
atrices.</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.slogdet"><a class=3D"refer=
ence internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/tor=
ch.slogdet.html#torch.slogdet" title=3D"torch.slogdet"><code class=3D"xref =
py py-obj docutils literal notranslate"><span class=3D"pre">slogdet</span><=
/code></a></p></td>
<td><p>Alias for <a class=3D"reference internal has-code" href=3D"https://p=
ytorch.org/docs/1.13/generated/torch.linalg.slogdet.html#torch.linalg.slogd=
et" title=3D"torch.linalg.slogdet"><code class=3D"xref py py-func docutils =
literal notranslate"><span class=3D"pre">torch.linalg.slogdet()</span></cod=
e></a></p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.lu"><a class=3D"reference i=
nternal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch.lu.=
html#torch.lu" title=3D"torch.lu"><code class=3D"xref py py-obj docutils li=
teral notranslate"><span class=3D"pre">lu</span></code></a></p></td>
<td><p>Computes the LU factorization of a matrix or batches of matrices <co=
de class=3D"xref py py-attr docutils literal notranslate"><span class=3D"pr=
e">A</span></code>.</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.lu_solve"><a class=3D"refe=
rence internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/to=
rch.lu_solve.html#torch.lu_solve" title=3D"torch.lu_solve"><code class=3D"x=
ref py py-obj docutils literal notranslate"><span class=3D"pre">lu_solve</s=
pan></code></a></p></td>
<td><p>Returns the LU solve of the linear system <span class=3D"math"><span=
 class=3D"katex"><span class=3D"katex-mathml"><math xmlns=3D"http://www.w3.=
org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mi>x</mi><mo>=3D</mo><mi>=
b</mi></mrow><annotation encoding=3D"application/x-tex">Ax =3D b</annotatio=
n></semantics></math></span><span class=3D"katex-html" aria-hidden=3D"true"=
><span class=3D"base"><span class=3D"strut" style=3D"height:0.6833em;"></sp=
an><span class=3D"mord mathnormal">A</span><span class=3D"mord mathnormal">=
x</span><span class=3D"mspace" style=3D"margin-right:0.2778em;"></span><spa=
n class=3D"mrel">=3D</span><span class=3D"mspace" style=3D"margin-right:0.2=
778em;"></span></span><span class=3D"base"><span class=3D"strut" style=3D"h=
eight:0.6944em;"></span><span class=3D"mord mathnormal">b</span></span></sp=
an></span></span> using the partially pivoted LU factorization of A from <a=
 class=3D"reference internal has-code" href=3D"https://pytorch.org/docs/1.1=
3/generated/torch.linalg.lu_factor.html#torch.linalg.lu_factor" title=3D"to=
rch.linalg.lu_factor"><code class=3D"xref py py-func docutils literal notra=
nslate"><span class=3D"pre">lu_factor()</span></code></a>.</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.lu_unpack"><a class=3D"refe=
rence internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/to=
rch.lu_unpack.html#torch.lu_unpack" title=3D"torch.lu_unpack"><code class=
=3D"xref py py-obj docutils literal notranslate"><span class=3D"pre">lu_unp=
ack</span></code></a></p></td>
<td><p>Unpacks the LU decomposition returned by <a class=3D"reference inter=
nal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch.linalg.=
lu_factor.html#torch.linalg.lu_factor" title=3D"torch.linalg.lu_factor"><co=
de class=3D"xref py py-func docutils literal notranslate"><span class=3D"pr=
e">lu_factor()</span></code></a> into the <cite>P, L, U</cite> matrices.</p=
></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.matmul"><a class=3D"refere=
nce internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torc=
h.matmul.html#torch.matmul" title=3D"torch.matmul"><code class=3D"xref py p=
y-obj docutils literal notranslate"><span class=3D"pre">matmul</span></code=
></a></p></td>
<td><p>Matrix product of two tensors.</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.matrix_power"><a class=3D"r=
eference internal has-code" href=3D"https://pytorch.org/docs/1.13/generated=
/torch.matrix_power.html#torch.matrix_power" title=3D"torch.matrix_power"><=
code class=3D"xref py py-obj docutils literal notranslate"><span class=3D"p=
re">matrix_power</span></code></a></p></td>
<td><p>Alias for <a class=3D"reference internal has-code" href=3D"https://p=
ytorch.org/docs/1.13/generated/torch.linalg.matrix_power.html#torch.linalg.=
matrix_power" title=3D"torch.linalg.matrix_power"><code class=3D"xref py py=
-func docutils literal notranslate"><span class=3D"pre">torch.linalg.matrix=
_power()</span></code></a></p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.matrix_exp"><a class=3D"re=
ference internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/=
torch.matrix_exp.html#torch.matrix_exp" title=3D"torch.matrix_exp"><code cl=
ass=3D"xref py py-obj docutils literal notranslate"><span class=3D"pre">mat=
rix_exp</span></code></a></p></td>
<td><p>Alias for <a class=3D"reference internal has-code" href=3D"https://p=
ytorch.org/docs/1.13/generated/torch.linalg.matrix_exp.html#torch.linalg.ma=
trix_exp" title=3D"torch.linalg.matrix_exp"><code class=3D"xref py py-func =
docutils literal notranslate"><span class=3D"pre">torch.linalg.matrix_exp()=
</span></code></a>.</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.mm"><a class=3D"reference i=
nternal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch.mm.=
html#torch.mm" title=3D"torch.mm"><code class=3D"xref py py-obj docutils li=
teral notranslate"><span class=3D"pre">mm</span></code></a></p></td>
<td><p>Performs a matrix multiplication of the matrices <code class=3D"xref=
 py py-attr docutils literal notranslate"><span class=3D"pre">input</span><=
/code> and <code class=3D"xref py py-attr docutils literal notranslate"><sp=
an class=3D"pre">mat2</span></code>.</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.mv"><a class=3D"reference =
internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch.mv=
.html#torch.mv" title=3D"torch.mv"><code class=3D"xref py py-obj docutils l=
iteral notranslate"><span class=3D"pre">mv</span></code></a></p></td>
<td><p>Performs a matrix-vector product of the matrix <code class=3D"xref p=
y py-attr docutils literal notranslate"><span class=3D"pre">input</span></c=
ode> and the vector <code class=3D"xref py py-attr docutils literal notrans=
late"><span class=3D"pre">vec</span></code>.</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.orgqr"><a class=3D"referenc=
e internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch.=
orgqr.html#torch.orgqr" title=3D"torch.orgqr"><code class=3D"xref py py-obj=
 docutils literal notranslate"><span class=3D"pre">orgqr</span></code></a><=
/p></td>
<td><p>Alias for <a class=3D"reference internal has-code" href=3D"https://p=
ytorch.org/docs/1.13/generated/torch.linalg.householder_product.html#torch.=
linalg.householder_product" title=3D"torch.linalg.householder_product"><cod=
e class=3D"xref py py-func docutils literal notranslate"><span class=3D"pre=
">torch.linalg.householder_product()</span></code></a>.</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.ormqr"><a class=3D"referen=
ce internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch=
.ormqr.html#torch.ormqr" title=3D"torch.ormqr"><code class=3D"xref py py-ob=
j docutils literal notranslate"><span class=3D"pre">ormqr</span></code></a>=
</p></td>
<td><p>Computes the matrix-matrix multiplication of a product of Householde=
r matrices with a general matrix.</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.outer"><a class=3D"referenc=
e internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch.=
outer.html#torch.outer" title=3D"torch.outer"><code class=3D"xref py py-obj=
 docutils literal notranslate"><span class=3D"pre">outer</span></code></a><=
/p></td>
<td><p>Outer product of <code class=3D"xref py py-attr docutils literal not=
ranslate"><span class=3D"pre">input</span></code> and <code class=3D"xref p=
y py-attr docutils literal notranslate"><span class=3D"pre">vec2</span></co=
de>.</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.pinverse"><a class=3D"refe=
rence internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/to=
rch.pinverse.html#torch.pinverse" title=3D"torch.pinverse"><code class=3D"x=
ref py py-obj docutils literal notranslate"><span class=3D"pre">pinverse</s=
pan></code></a></p></td>
<td><p>Alias for <a class=3D"reference internal has-code" href=3D"https://p=
ytorch.org/docs/1.13/generated/torch.linalg.pinv.html#torch.linalg.pinv" ti=
tle=3D"torch.linalg.pinv"><code class=3D"xref py py-func docutils literal n=
otranslate"><span class=3D"pre">torch.linalg.pinv()</span></code></a></p></=
td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.qr"><a class=3D"reference i=
nternal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch.qr.=
html#torch.qr" title=3D"torch.qr"><code class=3D"xref py py-obj docutils li=
teral notranslate"><span class=3D"pre">qr</span></code></a></p></td>
<td><p>Computes the QR decomposition of a matrix or a batch of matrices <co=
de class=3D"xref py py-attr docutils literal notranslate"><span class=3D"pr=
e">input</span></code>, and returns a namedtuple (Q, R) of tensors such tha=
t <span class=3D"math"><span class=3D"katex"><span class=3D"katex-mathml"><=
math xmlns=3D"http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>i=
nput</mtext><mo>=3D</mo><mi>Q</mi><mi>R</mi></mrow><annotation encoding=3D"=
application/x-tex">\text{input} =3D Q R</annotation></semantics></math></sp=
an><span class=3D"katex-html" aria-hidden=3D"true"><span class=3D"base"><sp=
an class=3D"strut" style=3D"height:0.8623em;vertical-align:-0.1944em;"></sp=
an><span class=3D"mord text"><span class=3D"mord">input</span></span><span =
class=3D"mspace" style=3D"margin-right:0.2778em;"></span><span class=3D"mre=
l">=3D</span><span class=3D"mspace" style=3D"margin-right:0.2778em;"></span=
></span><span class=3D"base"><span class=3D"strut" style=3D"height:0.8778em=
;vertical-align:-0.1944em;"></span><span class=3D"mord mathnormal" style=3D=
"margin-right:0.00773em;">QR</span></span></span></span></span> with <span =
class=3D"math"><span class=3D"katex"><span class=3D"katex-mathml"><math xml=
ns=3D"http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>Q</mi></mrow=
><annotation encoding=3D"application/x-tex">Q</annotation></semantics></mat=
h></span><span class=3D"katex-html" aria-hidden=3D"true"><span class=3D"bas=
e"><span class=3D"strut" style=3D"height:0.8778em;vertical-align:-0.1944em;=
"></span><span class=3D"mord mathnormal">Q</span></span></span></span></spa=
n> being an orthogonal matrix or batch of orthogonal matrices and <span cla=
ss=3D"math"><span class=3D"katex"><span class=3D"katex-mathml"><math xmlns=
=3D"http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>R</mi></mrow><=
annotation encoding=3D"application/x-tex">R</annotation></semantics></math>=
</span><span class=3D"katex-html" aria-hidden=3D"true"><span class=3D"base"=
><span class=3D"strut" style=3D"height:0.6833em;"></span><span class=3D"mor=
d mathnormal" style=3D"margin-right:0.00773em;">R</span></span></span></spa=
n></span> being an upper triangular matrix or batch of upper triangular mat=
rices.</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.svd"><a class=3D"reference=
 internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch.s=
vd.html#torch.svd" title=3D"torch.svd"><code class=3D"xref py py-obj docuti=
ls literal notranslate"><span class=3D"pre">svd</span></code></a></p></td>
<td><p>Computes the singular value decomposition of either a matrix or batc=
h of matrices <code class=3D"xref py py-attr docutils literal notranslate">=
<span class=3D"pre">input</span></code>.</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.svd_lowrank"><a class=3D"re=
ference internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/=
torch.svd_lowrank.html#torch.svd_lowrank" title=3D"torch.svd_lowrank"><code=
 class=3D"xref py py-obj docutils literal notranslate"><span class=3D"pre">=
svd_lowrank</span></code></a></p></td>
<td><p>Return the singular value decomposition <code class=3D"docutils lite=
ral notranslate"><span class=3D"pre">(U,</span> <span class=3D"pre">S,</spa=
n> <span class=3D"pre">V)</span></code> of a matrix, batches of matrices, o=
r a sparse matrix <span class=3D"math"><span class=3D"katex"><span class=3D=
"katex-mathml"><math xmlns=3D"http://www.w3.org/1998/Math/MathML"><semantic=
s><mrow><mi>A</mi></mrow><annotation encoding=3D"application/x-tex">A</anno=
tation></semantics></math></span><span class=3D"katex-html" aria-hidden=3D"=
true"><span class=3D"base"><span class=3D"strut" style=3D"height:0.6833em;"=
></span><span class=3D"mord mathnormal">A</span></span></span></span></span=
> such that <span class=3D"math"><span class=3D"katex"><span class=3D"katex=
-mathml"><math xmlns=3D"http://www.w3.org/1998/Math/MathML"><semantics><mro=
w><mi>A</mi><mo>=E2=89=88</mo><mi>U</mi><mi>d</mi><mi>i</mi><mi>a</mi><mi>g=
</mi><mo stretchy=3D"false">(</mo><mi>S</mi><mo stretchy=3D"false">)</mo><m=
sup><mi>V</mi><mi>T</mi></msup></mrow><annotation encoding=3D"application/x=
-tex">A \approx U diag(S) V^T</annotation></semantics></math></span><span c=
lass=3D"katex-html" aria-hidden=3D"true"><span class=3D"base"><span class=
=3D"strut" style=3D"height:0.6833em;"></span><span class=3D"mord mathnormal=
">A</span><span class=3D"mspace" style=3D"margin-right:0.2778em;"></span><s=
pan class=3D"mrel">=E2=89=88</span><span class=3D"mspace" style=3D"margin-r=
ight:0.2778em;"></span></span><span class=3D"base"><span class=3D"strut" st=
yle=3D"height:1.0913em;vertical-align:-0.25em;"></span><span class=3D"mord =
mathnormal" style=3D"margin-right:0.10903em;">U</span><span class=3D"mord m=
athnormal">d</span><span class=3D"mord mathnormal">ia</span><span class=3D"=
mord mathnormal" style=3D"margin-right:0.03588em;">g</span><span class=3D"m=
open">(</span><span class=3D"mord mathnormal" style=3D"margin-right:0.05764=
em;">S</span><span class=3D"mclose">)</span><span class=3D"mord"><span clas=
s=3D"mord mathnormal" style=3D"margin-right:0.22222em;">V</span><span class=
=3D"msupsub"><span class=3D"vlist-t"><span class=3D"vlist-r"><span class=3D=
"vlist" style=3D"height:0.8413em;"><span style=3D"top:-3.063em;margin-right=
:0.05em;"><span class=3D"pstrut" style=3D"height:2.7em;"></span><span class=
=3D"sizing reset-size6 size3 mtight"><span class=3D"mord mathnormal mtight"=
 style=3D"margin-right:0.13889em;">T</span></span></span></span></span></sp=
an></span></span></span></span></span></span>.</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.pca_lowrank"><a class=3D"r=
eference internal has-code" href=3D"https://pytorch.org/docs/1.13/generated=
/torch.pca_lowrank.html#torch.pca_lowrank" title=3D"torch.pca_lowrank"><cod=
e class=3D"xref py py-obj docutils literal notranslate"><span class=3D"pre"=
>pca_lowrank</span></code></a></p></td>
<td><p>Performs linear Principal Component Analysis (PCA) on a low-rank mat=
rix, batches of such matrices, or sparse matrix.</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.symeig"><a class=3D"referen=
ce internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch=
.symeig.html#torch.symeig" title=3D"torch.symeig"><code class=3D"xref py py=
-obj docutils literal notranslate"><span class=3D"pre">symeig</span></code>=
</a></p></td>
<td><p>This function returns eigenvalues and eigenvectors of a real symmetr=
ic or complex Hermitian matrix <code class=3D"xref py py-attr docutils lite=
ral notranslate"><span class=3D"pre">input</span></code> or a batch thereof=
, represented by a namedtuple (eigenvalues, eigenvectors).</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.lobpcg"><a class=3D"refere=
nce internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torc=
h.lobpcg.html#torch.lobpcg" title=3D"torch.lobpcg"><code class=3D"xref py p=
y-obj docutils literal notranslate"><span class=3D"pre">lobpcg</span></code=
></a></p></td>
<td><p>Find the k largest (or smallest) eigenvalues and the corresponding e=
igenvectors of a symmetric positive definite generalized eigenvalue problem=
 using matrix-free LOBPCG methods.</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.trapz"><a class=3D"referenc=
e internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch.=
trapz.html#torch.trapz" title=3D"torch.trapz"><code class=3D"xref py py-obj=
 docutils literal notranslate"><span class=3D"pre">trapz</span></code></a><=
/p></td>
<td><p>Alias for <a class=3D"reference internal has-code" href=3D"https://p=
ytorch.org/docs/1.13/generated/torch.trapezoid.html#torch.trapezoid" title=
=3D"torch.trapezoid"><code class=3D"xref py py-func docutils literal notran=
slate"><span class=3D"pre">torch.trapezoid()</span></code></a>.</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.trapezoid"><a class=3D"ref=
erence internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/t=
orch.trapezoid.html#torch.trapezoid" title=3D"torch.trapezoid"><code class=
=3D"xref py py-obj docutils literal notranslate"><span class=3D"pre">trapez=
oid</span></code></a></p></td>
<td><p>Computes the <a class=3D"reference external" href=3D"https://en.wiki=
pedia.org/wiki/Trapezoidal_rule">trapezoidal rule</a> along <code class=3D"=
xref py py-attr docutils literal notranslate"><span class=3D"pre">dim</span=
></code>.</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.cumulative_trapezoid"><a cl=
ass=3D"reference internal has-code" href=3D"https://pytorch.org/docs/1.13/g=
enerated/torch.cumulative_trapezoid.html#torch.cumulative_trapezoid" title=
=3D"torch.cumulative_trapezoid"><code class=3D"xref py py-obj docutils lite=
ral notranslate"><span class=3D"pre">cumulative_trapezoid</span></code></a>=
</p></td>
<td><p></p><p>Cumulatively computes the <a class=3D"reference external" hre=
f=3D"https://en.wikipedia.org/wiki/Trapezoidal_rule">trapezoidal rule</a> a=
long <code class=3D"xref py py-attr docutils literal notranslate"><span cla=
ss=3D"pre">dim</span></code>.</p>
<p></p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.triangular_solve"><a class=
=3D"reference internal has-code" href=3D"https://pytorch.org/docs/1.13/gene=
rated/torch.triangular_solve.html#torch.triangular_solve" title=3D"torch.tr=
iangular_solve"><code class=3D"xref py py-obj docutils literal notranslate"=
><span class=3D"pre">triangular_solve</span></code></a></p></td>
<td><p>Solves a system of equations with a square upper or lower triangular=
 invertible matrix <span class=3D"math"><span class=3D"katex"><span class=
=3D"katex-mathml"><math xmlns=3D"http://www.w3.org/1998/Math/MathML"><seman=
tics><mrow><mi>A</mi></mrow><annotation encoding=3D"application/x-tex">A</a=
nnotation></semantics></math></span><span class=3D"katex-html" aria-hidden=
=3D"true"><span class=3D"base"><span class=3D"strut" style=3D"height:0.6833=
em;"></span><span class=3D"mord mathnormal">A</span></span></span></span></=
span> and multiple right-hand sides <span class=3D"math"><span class=3D"kat=
ex"><span class=3D"katex-mathml"><math xmlns=3D"http://www.w3.org/1998/Math=
/MathML"><semantics><mrow><mi>b</mi></mrow><annotation encoding=3D"applicat=
ion/x-tex">b</annotation></semantics></math></span><span class=3D"katex-htm=
l" aria-hidden=3D"true"><span class=3D"base"><span class=3D"strut" style=3D=
"height:0.6944em;"></span><span class=3D"mord mathnormal">b</span></span></=
span></span></span>.</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.vdot"><a class=3D"reference=
 internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/torch.v=
dot.html#torch.vdot" title=3D"torch.vdot"><code class=3D"xref py py-obj doc=
utils literal notranslate"><span class=3D"pre">vdot</span></code></a></p></=
td>
<td><p>Computes the dot product of two 1D vectors along a dimension.</p></t=
d>
</tr>
</tbody>
</table></div>
</section>
</section>
<section id=3D"utilities">
<h2>Utilities<a class=3D"anchorjs-link " aria-label=3D"Anchor" data-anchorj=
s-icon=3D"=EE=A7=8B" href=3D"https://pytorch.org/docs/1.13/torch.html#utili=
ties" style=3D"font: 1em / 1 anchorjs-icons; padding-left: 0.375em;"></a></=
h2>
<div class=3D"wy-table-responsive"><table class=3D"autosummary longtable do=
cutils align-default">
<tbody>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.compiled_with_cxx11_abi"><a=
 class=3D"reference internal has-code" href=3D"https://pytorch.org/docs/1.1=
3/generated/torch.compiled_with_cxx11_abi.html#torch.compiled_with_cxx11_ab=
i" title=3D"torch.compiled_with_cxx11_abi"><code class=3D"xref py py-obj do=
cutils literal notranslate"><span class=3D"pre">compiled_with_cxx11_abi</sp=
an></code></a></p></td>
<td><p>Returns whether PyTorch was built with _GLIBCXX_USE_CXX11_ABI=3D1</p=
></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.result_type"><a class=3D"r=
eference internal has-code" href=3D"https://pytorch.org/docs/1.13/generated=
/torch.result_type.html#torch.result_type" title=3D"torch.result_type"><cod=
e class=3D"xref py py-obj docutils literal notranslate"><span class=3D"pre"=
>result_type</span></code></a></p></td>
<td><p>Returns the <a class=3D"reference internal has-code" href=3D"https:/=
/pytorch.org/docs/1.13/tensor_attributes.html#torch.dtype" title=3D"torch.d=
type"><code class=3D"xref py py-class docutils literal notranslate"><span c=
lass=3D"pre">torch.dtype</span></code></a> that would result from performin=
g an arithmetic operation on the provided input tensors.</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.can_cast"><a class=3D"refer=
ence internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/tor=
ch.can_cast.html#torch.can_cast" title=3D"torch.can_cast"><code class=3D"xr=
ef py py-obj docutils literal notranslate"><span class=3D"pre">can_cast</sp=
an></code></a></p></td>
<td><p>Determines if a type conversion is allowed under PyTorch casting rul=
es described in the type promotion <a class=3D"reference internal" href=3D"=
https://pytorch.org/docs/1.13/tensor_attributes.html#type-promotion-doc"><s=
pan class=3D"std std-ref">documentation</span></a>.</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.promote_types"><a class=3D=
"reference internal has-code" href=3D"https://pytorch.org/docs/1.13/generat=
ed/torch.promote_types.html#torch.promote_types" title=3D"torch.promote_typ=
es"><code class=3D"xref py py-obj docutils literal notranslate"><span class=
=3D"pre">promote_types</span></code></a></p></td>
<td><p>Returns the <a class=3D"reference internal has-code" href=3D"https:/=
/pytorch.org/docs/1.13/tensor_attributes.html#torch.dtype" title=3D"torch.d=
type"><code class=3D"xref py py-class docutils literal notranslate"><span c=
lass=3D"pre">torch.dtype</span></code></a> with the smallest size and scala=
r kind that is not smaller nor of lower kind than either <cite>type1</cite>=
 or <cite>type2</cite>.</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.use_deterministic_algorithm=
s"><a class=3D"reference internal has-code" href=3D"https://pytorch.org/doc=
s/1.13/generated/torch.use_deterministic_algorithms.html#torch.use_determin=
istic_algorithms" title=3D"torch.use_deterministic_algorithms"><code class=
=3D"xref py py-obj docutils literal notranslate"><span class=3D"pre">use_de=
terministic_algorithms</span></code></a></p></td>
<td><p>Sets whether PyTorch operations must use "deterministic" algorithms.=
</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.are_deterministic_algorith=
ms_enabled"><a class=3D"reference internal has-code" href=3D"https://pytorc=
h.org/docs/1.13/generated/torch.are_deterministic_algorithms_enabled.html#t=
orch.are_deterministic_algorithms_enabled" title=3D"torch.are_deterministic=
_algorithms_enabled"><code class=3D"xref py py-obj docutils literal notrans=
late"><span class=3D"pre">are_deterministic_algorithms_enabled</span></code=
></a></p></td>
<td><p>Returns True if the global deterministic flag is turned on.</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.is_deterministic_algorithms=
_warn_only_enabled"><a class=3D"reference internal has-code" href=3D"https:=
//pytorch.org/docs/1.13/generated/torch.is_deterministic_algorithms_warn_on=
ly_enabled.html#torch.is_deterministic_algorithms_warn_only_enabled" title=
=3D"torch.is_deterministic_algorithms_warn_only_enabled"><code class=3D"xre=
f py py-obj docutils literal notranslate"><span class=3D"pre">is_determinis=
tic_algorithms_warn_only_enabled</span></code></a></p></td>
<td><p>Returns True if the global deterministic flag is set to warn only.</=
p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.set_deterministic_debug_mo=
de"><a class=3D"reference internal has-code" href=3D"https://pytorch.org/do=
cs/1.13/generated/torch.set_deterministic_debug_mode.html#torch.set_determi=
nistic_debug_mode" title=3D"torch.set_deterministic_debug_mode"><code class=
=3D"xref py py-obj docutils literal notranslate"><span class=3D"pre">set_de=
terministic_debug_mode</span></code></a></p></td>
<td><p>Sets the debug mode for deterministic operations.</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.get_deterministic_debug_mod=
e"><a class=3D"reference internal has-code" href=3D"https://pytorch.org/doc=
s/1.13/generated/torch.get_deterministic_debug_mode.html#torch.get_determin=
istic_debug_mode" title=3D"torch.get_deterministic_debug_mode"><code class=
=3D"xref py py-obj docutils literal notranslate"><span class=3D"pre">get_de=
terministic_debug_mode</span></code></a></p></td>
<td><p>Returns the current value of the debug mode for deterministic operat=
ions.</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.set_float32_matmul_precisi=
on"><a class=3D"reference internal has-code" href=3D"https://pytorch.org/do=
cs/1.13/generated/torch.set_float32_matmul_precision.html#torch.set_float32=
_matmul_precision" title=3D"torch.set_float32_matmul_precision"><code class=
=3D"xref py py-obj docutils literal notranslate"><span class=3D"pre">set_fl=
oat32_matmul_precision</span></code></a></p></td>
<td><p>Sets the internal precision of float32 matrix multiplications.</p></=
td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.get_float32_matmul_precisio=
n"><a class=3D"reference internal has-code" href=3D"https://pytorch.org/doc=
s/1.13/generated/torch.get_float32_matmul_precision.html#torch.get_float32_=
matmul_precision" title=3D"torch.get_float32_matmul_precision"><code class=
=3D"xref py py-obj docutils literal notranslate"><span class=3D"pre">get_fl=
oat32_matmul_precision</span></code></a></p></td>
<td><p>Returns the current value of float32 matrix multiplication precision=
.</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch.set_warn_always"><a class=
=3D"reference internal has-code" href=3D"https://pytorch.org/docs/1.13/gene=
rated/torch.set_warn_always.html#torch.set_warn_always" title=3D"torch.set_=
warn_always"><code class=3D"xref py py-obj docutils literal notranslate"><s=
pan class=3D"pre">set_warn_always</span></code></a></p></td>
<td><p>When this flag is False (default) then some PyTorch warnings may onl=
y appear once per process.</p></td>
</tr>
<tr class=3D"row-odd"><td><p></p><p id=3D"torch.is_warn_always_enabled"><a =
class=3D"reference internal has-code" href=3D"https://pytorch.org/docs/1.13=
/generated/torch.is_warn_always_enabled.html#torch.is_warn_always_enabled" =
title=3D"torch.is_warn_always_enabled"><code class=3D"xref py py-obj docuti=
ls literal notranslate"><span class=3D"pre">is_warn_always_enabled</span></=
code></a></p></td>
<td><p>Returns True if the global warn_always flag is turned on.</p></td>
</tr>
<tr class=3D"row-even"><td><p></p><p id=3D"torch._assert"><a class=3D"refer=
ence internal has-code" href=3D"https://pytorch.org/docs/1.13/generated/tor=
ch._assert.html#torch._assert" title=3D"torch._assert"><code class=3D"xref =
py py-obj docutils literal notranslate"><span class=3D"pre">_assert</span><=
/code></a></p></td>
<td><p>A wrapper around Python's assert which is symbolically traceable.</p=
></td>
</tr>
</tbody>
</table></div>
</section>
<section id=3D"operator-tags">
<h2>Operator Tags<a class=3D"anchorjs-link " aria-label=3D"Anchor" data-anc=
horjs-icon=3D"=EE=A7=8B" href=3D"https://pytorch.org/docs/1.13/torch.html#o=
perator-tags" style=3D"font: 1em / 1 anchorjs-icons; padding-left: 0.375em;=
"></a></h2>
<dl class=3D"py class">
<dt class=3D"sig sig-object py" id=3D"torch.Tag">
<em class=3D"property"><span class=3D"pre">class</span><span class=3D"w"> <=
/span></em><span class=3D"sig-prename descclassname"><span class=3D"pre">to=
rch.</span></span><span class=3D"sig-name descname"><span class=3D"pre">Tag=
</span></span><a class=3D"anchorjs-link " aria-label=3D"Anchor" data-anchor=
js-icon=3D"=EE=A7=8B" href=3D"https://pytorch.org/docs/1.13/torch.html#torc=
h.Tag" style=3D"font: 1em / 1 anchorjs-icons; padding-left: 0.375em;"></a><=
/dt>
<dd><p>Members:</p>
<p>inplace_view</p>
<p>nondeterministic_seeded</p>
<p>dynamic_output_shape</p>
<p>data_dependent_output</p>
<p>view_copy</p>
<p>generated</p>
<p>nondeterministic_bitwise</p>
<dl class=3D"py property">
<dt class=3D"sig sig-object py" id=3D"torch.Tag.name">
<em class=3D"property"><span class=3D"pre">property</span><span class=3D"w"=
> </span></em><span class=3D"sig-name descname"><span class=3D"pre">name</s=
pan></span><a class=3D"anchorjs-link " aria-label=3D"Anchor" data-anchorjs-=
icon=3D"=EE=A7=8B" href=3D"https://pytorch.org/docs/1.13/torch.html#torch.T=
ag.name" style=3D"font: 1em / 1 anchorjs-icons; padding-left: 0.375em;"></a=
></dt>
<dd></dd></dl>

</dd></dl>

<span class=3D"target" id=3D"module-torch.contrib"></span><span class=3D"ta=
rget" id=3D"module-torch.utils.backcompat"></span><span class=3D"target" id=
=3D"module-torch.utils"></span><span class=3D"target" id=3D"module-torch.ut=
ils.hipify"></span><span class=3D"target" id=3D"module-torch.utils.model_du=
mp"></span></section>
</section>


             </article>
            =20
            </div>
            <footer>
 =20
    <div class=3D"rst-footer-buttons" role=3D"navigation" aria-label=3D"foo=
ter navigation">
     =20
        <a href=3D"https://pytorch.org/docs/1.13/generated/torch.is_tensor.=
html" class=3D"btn btn-neutral float-right" title=3D"torch.is_tensor" acces=
skey=3D"n" rel=3D"next">Next <img src=3D"https://pytorch.org/docs/1.13/_sta=
tic/images/chevron-right-orange.svg" class=3D"next-page"></a>
     =20
     =20
        <a href=3D"https://pytorch.org/docs/1.13/deploy.html" class=3D"btn =
btn-neutral" title=3D"torch::deploy has been moved to pytorch/multipy" acce=
sskey=3D"p" rel=3D"prev"><img src=3D"https://pytorch.org/docs/1.13/_static/=
images/chevron-right-orange.svg" class=3D"previous-page"> Previous</a>
     =20
    </div>
 =20

 =20

    <hr>

 =20

  <div role=3D"contentinfo">
    <p>
        =C2=A9 Copyright 2022, PyTorch Contributors.

    </p>
  </div>
   =20
      <div>
        Built with <a href=3D"http://sphinx-doc.org/">Sphinx</a> using a <a=
 href=3D"https://github.com/rtfd/sphinx_rtd_theme">theme</a> provided by <a=
 href=3D"https://readthedocs.org/">Read the Docs</a>.
      </div>
    =20

</footer>

          </div>
        </div>

        <div class=3D"pytorch-content-right" id=3D"pytorch-content-right" s=
tyle=3D"height: 100%;">
          <div class=3D"pytorch-right-menu" id=3D"pytorch-right-menu" style=
=3D"top: 0px;">
            <div class=3D"pytorch-side-scroll" id=3D"pytorch-side-scroll-ri=
ght" style=3D"height: 548px;">
              <ul>
<li><a class=3D"reference internal title-link has-children" href=3D"https:/=
/pytorch.org/docs/1.13/torch.html#">torch</a><ul>
<li><a class=3D"reference internal not-expanded" href=3D"https://pytorch.or=
g/docs/1.13/torch.html#tensors">Tensors</a><ul>
<li><a class=3D"reference internal" href=3D"https://pytorch.org/docs/1.13/t=
orch.html#creation-ops">Creation Ops</a></li>
<li><a class=3D"reference internal" href=3D"https://pytorch.org/docs/1.13/t=
orch.html#indexing-slicing-joining-mutating-ops">Indexing, Slicing, Joining=
, Mutating Ops</a></li>
</ul>
</li>
<li><a class=3D"reference internal" href=3D"https://pytorch.org/docs/1.13/t=
orch.html#generators">Generators</a></li>
<li><a class=3D"reference internal not-expanded" href=3D"https://pytorch.or=
g/docs/1.13/torch.html#random-sampling">Random sampling</a><ul>
<li><a class=3D"reference internal" href=3D"https://pytorch.org/docs/1.13/t=
orch.html#in-place-random-sampling">In-place random sampling</a></li>
<li><a class=3D"reference internal" href=3D"https://pytorch.org/docs/1.13/t=
orch.html#quasi-random-sampling">Quasi-random sampling</a></li>
</ul>
</li>
<li><a class=3D"reference internal" href=3D"https://pytorch.org/docs/1.13/t=
orch.html#serialization">Serialization</a></li>
<li><a class=3D"reference internal" href=3D"https://pytorch.org/docs/1.13/t=
orch.html#parallelism">Parallelism</a></li>
<li><a class=3D"reference internal" href=3D"https://pytorch.org/docs/1.13/t=
orch.html#locally-disabling-gradient-computation">Locally disabling gradien=
t computation</a></li>
<li><a class=3D"reference internal not-expanded" href=3D"https://pytorch.or=
g/docs/1.13/torch.html#math-operations">Math operations</a><ul>
<li><a class=3D"reference internal" href=3D"https://pytorch.org/docs/1.13/t=
orch.html#pointwise-ops">Pointwise Ops</a></li>
<li><a class=3D"reference internal" href=3D"https://pytorch.org/docs/1.13/t=
orch.html#reduction-ops">Reduction Ops</a></li>
<li><a class=3D"reference internal" href=3D"https://pytorch.org/docs/1.13/t=
orch.html#comparison-ops">Comparison Ops</a></li>
<li><a class=3D"reference internal" href=3D"https://pytorch.org/docs/1.13/t=
orch.html#spectral-ops">Spectral Ops</a></li>
<li><a class=3D"reference internal" href=3D"https://pytorch.org/docs/1.13/t=
orch.html#other-operations">Other Operations</a></li>
<li><a class=3D"reference internal" href=3D"https://pytorch.org/docs/1.13/t=
orch.html#blas-and-lapack-operations">BLAS and LAPACK Operations</a></li>
</ul>
</li>
<li><a class=3D"reference internal" href=3D"https://pytorch.org/docs/1.13/t=
orch.html#utilities">Utilities</a></li>
<li><a class=3D"reference internal" href=3D"https://pytorch.org/docs/1.13/t=
orch.html#operator-tags">Operator Tags</a></li>
</ul>
</li>
</ul>

            </div>
          </div>
        </div>
      </section>
    </div>

 =20


 =20

    =20
      =20
        =20
        =20
        =20
        =20
        =20
        =20
        =20
    =20

 =20

 =20
 =20
 =20
 =20

 =20
=20


<img height=3D"1" width=3D"1" style=3D"border-style:none;" alt=3D"" src=3D"=
https://www.googleadservices.com/pagead/conversion/795629140/?label=3DtxkmC=
PmdtosBENSssfsC&amp;guid=3DON&amp;script=3D0">


  <!-- Begin Footer -->

  <div class=3D"container-fluid docs-tutorials-resources" id=3D"docs-tutori=
als-resources">
    <div class=3D"container">
      <div class=3D"row">
        <div class=3D"col-md-4 text-center">
          <h2>Docs</h2>
          <p>Access comprehensive developer documentation for PyTorch</p>
          <a class=3D"with-right-arrow" href=3D"https://pytorch.org/docs/st=
able/index.html">View Docs</a>
        </div>

        <div class=3D"col-md-4 text-center">
          <h2>Tutorials</h2>
          <p>Get in-depth tutorials for beginners and advanced developers</=
p>
          <a class=3D"with-right-arrow" href=3D"https://pytorch.org/tutoria=
ls">View Tutorials</a>
        </div>

        <div class=3D"col-md-4 text-center">
          <h2>Resources</h2>
          <p>Find development resources and get your questions answered</p>
          <a class=3D"with-right-arrow" href=3D"https://pytorch.org/resourc=
es">View Resources</a>
        </div>
      </div>
    </div>
  </div>

  <footer class=3D"site-footer">
    <div class=3D"container footer-container">
      <div class=3D"footer-logo-wrapper">
        <a href=3D"https://pytorch.org/" class=3D"footer-logo"></a>
      </div>

      <div class=3D"footer-links-wrapper">
        <div class=3D"footer-links-col">
          <ul>
            <li class=3D"list-title"><a href=3D"https://pytorch.org/">PyTor=
ch</a></li>
            <li><a href=3D"https://pytorch.org/get-started">Get Started</a>=
</li>
            <li><a href=3D"https://pytorch.org/features">Features</a></li>
            <li><a href=3D"https://pytorch.org/ecosystem">Ecosystem</a></li=
>
            <li><a href=3D"https://pytorch.org/blog/">Blog</a></li>
            <li><a href=3D"https://github.com/pytorch/pytorch/blob/master/C=
ONTRIBUTING.md">Contributing</a></li>
          </ul>
        </div>

        <div class=3D"footer-links-col">
          <ul>
            <li class=3D"list-title"><a href=3D"https://pytorch.org/resourc=
es">Resources</a></li>
            <li><a href=3D"https://pytorch.org/tutorials">Tutorials</a></li=
>
            <li><a href=3D"https://pytorch.org/docs/stable/index.html">Docs=
</a></li>
            <li><a href=3D"https://discuss.pytorch.org/" target=3D"_blank">=
Discuss</a></li>
            <li><a href=3D"https://github.com/pytorch/pytorch/issues" targe=
t=3D"_blank">Github Issues</a></li>
            <li><a href=3D"https://pytorch.org/assets/brand-guidelines/PyTo=
rch-Brand-Guidelines.pdf" target=3D"_blank">Brand Guidelines</a></li>
          </ul>
        </div>

        <div class=3D"footer-links-col">
          <ul>
            <li class=3D"list-title">Stay up to date</li>
            <li><a href=3D"https://www.facebook.com/pytorch" target=3D"_bla=
nk">Facebook</a></li>
            <li><a href=3D"https://twitter.com/pytorch" target=3D"_blank">T=
witter</a></li>
            <li><a href=3D"https://www.youtube.com/pytorch" target=3D"_blan=
k">YouTube</a></li>
            <li><a href=3D"https://www.linkedin.com/company/pytorch" target=
=3D"_blank">LinkedIn</a></li>
          </ul> =20
          </div>

        <div class=3D"footer-links-col">
          <ul>
            <li class=3D"list-title">PyTorch Podcasts</li>
            <li><a href=3D"https://open.spotify.com/show/6UzHKeiy368jKfQMKK=
vJY5" target=3D"_blank">Spotify</a></li>
            <li><a href=3D"https://podcasts.apple.com/us/podcast/pytorch-de=
veloper-podcast/id1566080008" target=3D"_blank">Apple</a></li>
            <li><a href=3D"https://www.google.com/podcasts?feed=3DaHR0cHM6L=
y9mZWVkcy5zaW1wbGVjYXN0LmNvbS9PQjVGa0lsOA%3D%3D" target=3D"_blank">Google</=
a></li>
            <li><a href=3D"https://music.amazon.com/podcasts/7a4e6f0e-26c2-=
49e9-a478-41bd244197d0/PyTorch-Developer-Podcast?" target=3D"_blank">Amazon=
</a></li>
          </ul>
         </div>
        </div>
       =20
        <div class=3D"privacy-policy">
          <ul>
            <li class=3D"privacy-policy-links"><a href=3D"https://www.linux=
foundation.org/terms/" target=3D"_blank">Terms</a></li>
            <li class=3D"privacy-policy-links">|</li>
            <li class=3D"privacy-policy-links"><a href=3D"https://www.linux=
foundation.org/privacy-policy/" target=3D"_blank">Privacy</a></li>
          </ul>
        </div>
        <div class=3D"copyright">
        <p>=C2=A9 Copyright The Linux Foundation. The PyTorch Foundation is=
 a project of The Linux Foundation.
          For web site terms of use, trademark policy and other policies ap=
plicable to The PyTorch Foundation please see
          <a href=3D"https://pytorch.org/docs/1.13/www.linuxfoundation.org/=
policies/">www.linuxfoundation.org/policies/</a>. The PyTorch Foundation su=
pports the PyTorch open source
          project, which has been established as PyTorch Project a Series o=
f LF Projects, LLC. For policies applicable to the PyTorch Project a Series=
 of LF Projects, LLC,
          please see <a href=3D"https://pytorch.org/docs/1.13/www.lfproject=
s.org/policies/">www.lfprojects.org/policies/</a>.</p>
      </div>
     </div>

  </footer>

  <div class=3D"cookie-banner-wrapper">
  <div class=3D"container">
    <p class=3D"gdpr-notice">To analyze traffic and optimize your experienc=
e, we serve cookies on this site. By clicking or navigating, you agree to a=
llow our usage of cookies. As the current maintainers of this site, Faceboo=
k=E2=80=99s Cookies Policy applies. Learn more, including about available c=
ontrols: <a href=3D"https://www.facebook.com/policies/cookies/">Cookies Pol=
icy</a>.</p>
    <img class=3D"close-button" src=3D"https://pytorch.org/docs/1.13/_stati=
c/images/pytorch-x.svg">
  </div>
</div>

  <!-- End Footer -->

  <!-- Begin Mobile Menu -->

  <div class=3D"mobile-main-menu">
    <div class=3D"container-fluid">
      <div class=3D"container">
        <div class=3D"mobile-main-menu-header-container">
          <a class=3D"header-logo" href=3D"https://pytorch.org/" aria-label=
=3D"PyTorch"></a>
          <a class=3D"main-menu-close-button" href=3D"https://pytorch.org/d=
ocs/1.13/torch.html#" data-behavior=3D"close-mobile-menu"></a>
        </div>
      </div>
    </div>

    <div class=3D"mobile-main-menu-links-container">
      <div class=3D"main-menu">
        <ul>
          <li>
            <a href=3D"https://pytorch.org/get-started">Get Started</a>
          </li>

          <li>
            <a href=3D"https://pytorch.org/ecosystem">Ecosystem</a>
          </li>
           =20
          <li>
            <a href=3D"https://pytorch.org/mobile">Mobile</a>
          </li>

          <li>
            <a href=3D"https://pytorch.org/blog/">Blog</a>
          </li>

          <li>
            <a href=3D"https://pytorch.org/tutorials">Tutorials</a>
          </li>

          <li class=3D"resources-mobile-menu-title">
            Docs
          </li>

          <ul class=3D"resources-mobile-menu-items">
            <li>
              <a href=3D"https://pytorch.org/docs/stable/index.html">PyTorc=
h</a>
            </li>

            <li>
              <a href=3D"https://pytorch.org/audio/stable/index.html">torch=
audio</a>
            </li>

            <li>
              <a href=3D"https://pytorch.org/text/stable/index.html">torcht=
ext</a>
            </li>

            <li>
              <a href=3D"https://pytorch.org/vision/stable/index.html">torc=
hvision</a>
            </li>

            <li>
              <a href=3D"https://pytorch.org/torcharrow">torcharrow</a>
            </li>

            <li>
              <a href=3D"https://pytorch.org/data">TorchData</a>
            </li>

            <li>
              <a href=3D"https://pytorch.org/torchrec">TorchRec</a>
            </li>

            <li>
              <a href=3D"https://pytorch.org/serve/">TorchServe</a>
            </li>

            <li>
              <a href=3D"https://pytorch.org/torchx/">TorchX</a>
            </li>

            <li>
              <a href=3D"https://pytorch.org/xla">PyTorch on XLA Devices</a=
>
            </li>
          </ul>

          <li class=3D"resources-mobile-menu-title">
            Resources
          </li>
           =20
           <ul class=3D"resources-mobile-menu-items">

            <li>
              <a href=3D"https://pytorch.org/features">About</a>
            </li>

            <li>
              <a href=3D"https://pytorch.org/foundation">PyTorch Foundation=
</a>
            </li>

            <li>
              <a href=3D"https://pytorch.org/#community-module">Community</=
a>
            </li>

            <li>
              <a href=3D"https://pytorch.org/community-stories">Community S=
tories</a>
            </li>

            <li>
              <a href=3D"https://pytorch.org/resources">Developer Resources=
</a>
            </li>

            <li>
              <a href=3D"https://pytorch.org/events">Events</a>
            </li>

            <li>
              <a href=3D"https://discuss.pytorch.org/">Forums</a>
            </li>

            <li>
              <a href=3D"https://pytorch.org/hub">Models (Beta)</a>
            </li>
          </ul>

          <li>
            <a href=3D"https://github.com/pytorch/pytorch">Github</a>
          </li>
        </ul>
      </div>
    </div>
  </div>

  <!-- End Mobile Menu -->

 =20

 =20

</body></html>
------MultipartBoundary--p77pSlE97gVxA9vHZ3llR7beGEIQoxVXk04dgXijz8----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-ce3b60a4-a9b0-4129-bc7d-6162983fff0f@mhtml.blink

@charset "utf-8";

.anchorjs-link { opacity: 0; text-decoration: none; -webkit-font-smoothing:=
 antialiased; }

:hover > .anchorjs-link, .anchorjs-link:focus { opacity: 1; }

[data-anchorjs-icon]::after { content: attr(data-anchorjs-icon); }

@font-face { font-family: anchorjs-icons; src: url("data:n/a;base64,AAEAAAA=
LAIAAAwAwT1MvMg8yG2cAAAE4AAAAYGNtYXDp3gC3AAABpAAAAExnYXNwAAAAEAAAA9wAAAAIZ2=
x5ZlQCcfwAAAH4AAABCGhlYWQHFvHyAAAAvAAAADZoaGVhBnACFwAAAPQAAAAkaG10eASAADEAA=
AGYAAAADGxvY2EACACEAAAB8AAAAAhtYXhwAAYAVwAAARgAAAAgbmFtZQGOH9cAAAMAAAAAunBv=
c3QAAwAAAAADvAAAACAAAQAAAAEAAHzE2p9fDzz1AAkEAAAAAADRecUWAAAAANQA6R8AAAAAAoA=
CwAAAAAgAAgAAAAAAAAABAAADwP/AAAACgAAA/9MCrQABAAAAAAAAAAAAAAAAAAAAAwABAAAAAw=
BVAAIAAAAAAAIAAAAAAAAAAAAAAAAAAAAAAAMCQAGQAAUAAAKZAswAAACPApkCzAAAAesAMwEJA=
AAAAAAAAAAAAAAAAAAAARAAAAAAAAAAAAAAAAAAAAAAQAAg//0DwP/AAEADwABAAAAAAQAAAAAA=
AAAAAAAAIAAAAAAAAAIAAAACgAAxAAAAAwAAAAMAAAAcAAEAAwAAABwAAwABAAAAHAAEADAAAAA=
IAAgAAgAAACDpy//9//8AAAAg6cv//f///+EWNwADAAEAAAAAAAAAAAAAAAAACACEAAEAAAAAAA=
AAAAAAAAAxAAACAAQARAKAAsAAKwBUAAABIiYnJjQ3NzY2MzIWFxYUBwcGIicmNDc3NjQnJiYjI=
gYHBwYUFxYUBwYGIwciJicmNDc3NjIXFhQHBwYUFxYWMzI2Nzc2NCcmNDc2MhcWFAcHBgYjARQG=
DAUtLXoWOR8fORYtLTgKGwoKCjgaGg0gEhIgDXoaGgkJBQwHdR85Fi0tOAobCgoKOBoaDSASEiA=
NehoaCQkKGwotLXoWOR8BMwUFLYEuehYXFxYugC44CQkKGwo4GkoaDQ0NDXoaShoKGwoFBe8XFi=
6ALjgJCQobCjgaShoNDQ0NehpKGgobCgoKLYEuehYXAAAADACWAAEAAAAAAAEACAAAAAEAAAAAA=
AIAAwAIAAEAAAAAAAMACAAAAAEAAAAAAAQACAAAAAEAAAAAAAUAAQALAAEAAAAAAAYACAAAAAMA=
AQQJAAEAEAAMAAMAAQQJAAIABgAcAAMAAQQJAAMAEAAMAAMAAQQJAAQAEAAMAAMAAQQJAAUAAgA=
iAAMAAQQJAAYAEAAMYW5jaG9yanM0MDBAAGEAbgBjAGgAbwByAGoAcwA0ADAAMABAAAAAAwAAAA=
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAH//wAP") format("truetype"); }
------MultipartBoundary--p77pSlE97gVxA9vHZ3llR7beGEIQoxVXk04dgXijz8----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-797454bc-79b1-4a2a-9a2c-0e49c3371ff7@mhtml.blink

@charset "utf-8";

@keyframes caretBlink {=20
  0% { opacity: 1; }
  100% { opacity: 0; }
}

@keyframes rotateSpinner {=20
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

#text-tool-caret { animation-name: caretBlink; animation-iteration-count: i=
nfinite; animation-timing-function: cubic-bezier(1, 0, 0, 1); animation-dur=
ation: 1s; }

#en-markup-loading-spinner { position: absolute; top: calc(50% - 16px); lef=
t: calc(50% - 16px); width: 32px; height: 32px; }

#en-markup-loading-spinner img { position: relative; top: 0px; left: 0px; a=
nimation-name: rotateSpinner; animation-duration: 0.6s; animation-iteration=
-count: infinite; animation-timing-function: linear; }
------MultipartBoundary--p77pSlE97gVxA9vHZ3llR7beGEIQoxVXk04dgXijz8----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-a89aacc6-b923-4468-bf2b-473f52ae9dca@mhtml.blink

@charset "utf-8";

.skitchToastBoxContainer { position: absolute; width: 100%; text-align: cen=
ter; top: 30px; user-select: none; pointer-events: none; }

.skitchToastBox { width: 200px; height: 16px; padding: 12px; background-col=
or: rgba(47, 55, 61, 0.95); border-radius: 4px; color: white; cursor: defau=
lt; font-size: 10pt; text-shadow: rgba(0, 0, 0, 0.32) 1px 1px 2px; font-fam=
ily: Soleil, Helvetica, Arial, sans-serif; border: 2px solid rgba(255, 255,=
 255, 0.38); }

.lang-zh-cn .skitchToastBox { font-family: =E5=BE=AE=E8=BD=AF=E9=9B=85=E9=
=BB=91, "Microsoft YaHei", SimSun, "&#x30E1;&#x30A4;&#x30EA;&#x30AA;", Meir=
yo, "MS PGothic", Soleil, Helvetica, Arial, sans-serif; }

.lang-ja-jp .skitchToastBox { font-family: "&#x30E1;&#x30A4;&#x30EA;&#x30AA=
;", Meiryo, "MS PGothic", =E5=BE=AE=E8=BD=AF=E9=9B=85=E9=BB=91, "Microsoft =
YaHei", SimSun, Soleil, Helvetica, Arial, sans-serif; }

.skitchToast { padding-left: 20px; padding-right: 20px; display: inline-blo=
ck; height: 10px; color: rgb(241, 245, 248); text-align: center; }

.skitchVisible { }
------MultipartBoundary--p77pSlE97gVxA9vHZ3llR7beGEIQoxVXk04dgXijz8----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-0be40455-f0ba-470e-9f9f-450660ad106a@mhtml.blink

@charset "utf-8";

@font-face { font-family: Soleil; src: url("data:application/font-woff2;bas=
e64,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"); font-weight: =
normal; font-style: normal; }
------MultipartBoundary--p77pSlE97gVxA9vHZ3llR7beGEIQoxVXk04dgXijz8----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-927782e6-f929-4008-b2f7-bd5128fa9ad4@mhtml.blink

@charset "utf-8";

#en-markup-disabled { position: fixed; z-index: 9999; width: 100%; height: =
100%; top: 0px; left: 0px; cursor: default; user-select: none; }

#en-markup-alert-container { position: absolute; z-index: 9999; width: 450p=
x; left: calc(50% - 225px); top: calc(50% - 85px); background-color: white;=
 box-shadow: rgba(0, 0, 0, 0.35) 0px 2px 7px 1px; user-select: none; }

#en-markup-alert-container .cell-1 { position: relative; height: 110px; wid=
th: 105px; float: left; text-align: center; background-image: url("data:ima=
ge/png;base64,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
dBimpOTk/8GkPkddVxNk+cAAAAASUVORK5CYII=3D"); background-position: 65% 50%; =
background-repeat: no-repeat; }

#en-markup-alert-container .cell-2 { position: relative; float: left; width=
: 345px; margin-top: 29px; margin-bottom: 20px; }

#en-markup-alert-container .cell-2 .cell-2-title { margin-bottom: 5px; padd=
ing-right: 30px; font-size: 12pt; font-family: Tahoma, Arial; }

#en-markup-alert-container .cell-2 .cell-2-message { padding-right: 30px; f=
ont-size: 9.5pt; font-family: Tahoma, Arial; }

#en-markup-alert-container .cell-3 { position: relative; width: 450px; heig=
ht: 60px; float: left; background-color: rgb(240, 240, 240); }

#en-markup-alert-container .cell-3 button { position: absolute; top: 12px; =
right: 15px; width: 110px; height: 36px; }

#en-markup-alert-container .cell-3 button.alt-button { position: absolute; =
top: 12px; right: 140px; width: 110px; height: 36px; }
------MultipartBoundary--p77pSlE97gVxA9vHZ3llR7beGEIQoxVXk04dgXijz8----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://pytorch.org/docs/1.13/_static/css/theme.css

@charset "utf-8";

:root { --blue: #007bff; --indigo: #6610f2; --purple: #6f42c1; --pink: #e83=
e8c; --red: #dc3545; --orange: #fd7e14; --yellow: #ffc107; --green: #28a745=
; --teal: #20c997; --cyan: #17a2b8; --white: #fff; --gray: #6c757d; --gray-=
dark: #343a40; --primary: #007bff; --secondary: #6c757d; --success: #28a745=
; --info: #17a2b8; --warning: #ffc107; --danger: #dc3545; --light: #f8f9fa;=
 --dark: #343a40; --breakpoint-xs: 0; --breakpoint-sm: 576px; --breakpoint-=
md: 768px; --breakpoint-lg: 992px; --breakpoint-xl: 1200px; --font-family-s=
ans-serif: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetic=
a Neue", Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe U=
I Symbol"; --font-family-monospace: SFMono-Regular, Menlo, Monaco, Consolas=
, "Liberation Mono", "Courier New", monospace; }

*, ::before, ::after { box-sizing: border-box; }

html { font-family: sans-serif; line-height: 1.15; text-size-adjust: 100%; =
-webkit-tap-highlight-color: rgba(0, 0, 0, 0); }

article, aside, dialog, figcaption, figure, footer, header, hgroup, main, n=
av, section { display: block; }

body { margin: 0px; font-family: -apple-system, BlinkMacSystemFont, "Segoe =
UI", Roboto, "Helvetica Neue", Arial, sans-serif, "Apple Color Emoji", "Seg=
oe UI Emoji", "Segoe UI Symbol"; font-size: 1rem; font-weight: 400; line-he=
ight: 1.5; color: rgb(33, 37, 41); text-align: left; background-color: rgb(=
255, 255, 255); }

[tabindex=3D"-1"]:focus { outline: 0px !important; }

hr { box-sizing: content-box; height: 0px; overflow: visible; }

h1, h2, h3, h4, h5, h6 { margin-top: 0px; margin-bottom: 0.5rem; }

p { margin-top: 0px; margin-bottom: 1rem; }

abbr[title], abbr[data-original-title] { text-decoration: underline dotted;=
 cursor: help; border-bottom: 0px; }

address { margin-bottom: 1rem; font-style: normal; line-height: inherit; }

ol, ul, dl { margin-top: 0px; margin-bottom: 1rem; }

ol ol, ul ul, ol ul, ul ol { margin-bottom: 0px; }

dt { font-weight: 700; }

dd { margin-bottom: 0.5rem; margin-left: 0px; }

blockquote { margin: 0px 0px 1rem; }

dfn { font-style: italic; }

b, strong { font-weight: bolder; }

small { font-size: 80%; }

sub, sup { position: relative; font-size: 75%; line-height: 0; vertical-ali=
gn: baseline; }

sub { bottom: -0.25em; }

sup { top: -0.5em; }

a { color: rgb(0, 123, 255); text-decoration: none; background-color: trans=
parent; }

a:hover { color: rgb(0, 86, 179); text-decoration: underline; }

a:not([href]):not([tabindex]) { color: inherit; text-decoration: none; }

a:not([href]):not([tabindex]):hover, a:not([href]):not([tabindex]):focus { =
color: inherit; text-decoration: none; }

a:not([href]):not([tabindex]):focus { outline: 0px; }

pre, code, kbd, samp { font-family: monospace, monospace; font-size: 1em; }

pre { margin-top: 0px; margin-bottom: 1rem; overflow: auto; }

figure { margin: 0px 0px 1rem; }

img { vertical-align: middle; border-style: none; }

svg:not(:root) { overflow: hidden; }

table { border-collapse: collapse; }

caption { padding-top: 0.75rem; padding-bottom: 0.75rem; color: rgb(108, 11=
7, 125); text-align: left; caption-side: bottom; }

th { text-align: inherit; }

label { display: inline-block; margin-bottom: 0.5rem; }

button { border-radius: 0px; }

button:focus { outline: -webkit-focus-ring-color auto 5px; }

input, button, select, optgroup, textarea { margin: 0px; font-family: inher=
it; font-size: inherit; line-height: inherit; }

button, input { overflow: visible; }

button, select { text-transform: none; }

button, html [type=3D"button"], [type=3D"reset"], [type=3D"submit"] { appea=
rance: button; }

input[type=3D"radio"], input[type=3D"checkbox"] { box-sizing: border-box; p=
adding: 0px; }

input[type=3D"date"], input[type=3D"time"], input[type=3D"datetime-local"],=
 input[type=3D"month"] { appearance: listbox; }

textarea { overflow: auto; resize: vertical; }

fieldset { min-width: 0px; padding: 0px; margin: 0px; border: 0px; }

legend { display: block; width: 100%; max-width: 100%; padding: 0px; margin=
-bottom: 0.5rem; font-size: 1.5rem; line-height: inherit; color: inherit; w=
hite-space: normal; }

progress { vertical-align: baseline; }

[type=3D"number"]::-webkit-inner-spin-button, [type=3D"number"]::-webkit-ou=
ter-spin-button { height: auto; }

[type=3D"search"] { outline-offset: -2px; appearance: none; }

[type=3D"search"]::-webkit-search-cancel-button, [type=3D"search"]::-webkit=
-search-decoration { appearance: none; }

::-webkit-file-upload-button { font: inherit; appearance: button; }

output { display: inline-block; }

summary { display: list-item; cursor: pointer; }

template { display: none; }

[hidden] { display: none !important; }

h1, h2, h3, h4, h5, h6, .h1, .h2, .h3, .h4, .h5, .h6 { margin-bottom: 0.5re=
m; font-family: inherit; font-weight: 500; line-height: 1.2; color: inherit=
; }

h1, .h1 { font-size: 2.5rem; }

h2, .h2 { font-size: 2rem; }

h3, .h3 { font-size: 1.75rem; }

h4, .h4 { font-size: 1.5rem; }

h5, .h5 { font-size: 1.25rem; }

h6, .h6 { font-size: 1rem; }

.lead { font-size: 1.25rem; font-weight: 300; }

.display-1 { font-size: 6rem; font-weight: 300; line-height: 1.2; }

.display-2 { font-size: 5.5rem; font-weight: 300; line-height: 1.2; }

.display-3 { font-size: 4.5rem; font-weight: 300; line-height: 1.2; }

.display-4 { font-size: 3.5rem; font-weight: 300; line-height: 1.2; }

hr { margin-top: 1rem; margin-bottom: 1rem; border-width: 1px 0px 0px; bord=
er-right-style: initial; border-bottom-style: initial; border-left-style: i=
nitial; border-right-color: initial; border-bottom-color: initial; border-l=
eft-color: initial; border-image: initial; border-top-style: solid; border-=
top-color: rgba(0, 0, 0, 0.1); }

small, .small { font-size: 80%; font-weight: 400; }

mark, .mark { padding: 0.2em; background-color: rgb(252, 248, 227); }

.list-unstyled { padding-left: 0px; list-style: none; }

.list-inline { padding-left: 0px; list-style: none; }

.list-inline-item { display: inline-block; }

.list-inline-item:not(:last-child) { margin-right: 0.5rem; }

.initialism { font-size: 90%; text-transform: uppercase; }

.blockquote { margin-bottom: 1rem; font-size: 1.25rem; }

.blockquote-footer { display: block; font-size: 80%; color: rgb(108, 117, 1=
25); }

.blockquote-footer::before { content: "=E2=80=94=C2=A0"; }

.img-fluid { max-width: 100%; height: auto; }

.img-thumbnail { padding: 0.25rem; background-color: rgb(255, 255, 255); bo=
rder: 1px solid rgb(222, 226, 230); border-radius: 0.25rem; max-width: 100%=
; height: auto; }

.figure { display: inline-block; }

.figure-img { margin-bottom: 0.5rem; line-height: 1; }

.figure-caption { font-size: 90%; color: rgb(108, 117, 125); }

code, kbd, pre, samp { font-family: SFMono-Regular, Menlo, Monaco, Consolas=
, "Liberation Mono", "Courier New", monospace; }

code { font-size: 87.5%; color: rgb(232, 62, 140); word-break: break-word; =
}

a > code { color: inherit; }

kbd { padding: 0.2rem 0.4rem; font-size: 87.5%; color: rgb(255, 255, 255); =
background-color: rgb(33, 37, 41); border-radius: 0.2rem; }

kbd kbd { padding: 0px; font-size: 100%; font-weight: 700; }

pre { display: block; font-size: 87.5%; color: rgb(33, 37, 41); }

pre code { font-size: inherit; color: inherit; word-break: normal; }

.pre-scrollable { max-height: 340px; overflow-y: scroll; }

.container { width: 100%; padding-right: 15px; padding-left: 15px; margin-r=
ight: auto; margin-left: auto; }

@media (min-width: 576px) {
  .container { max-width: 540px; }
}

@media (min-width: 768px) {
  .container { max-width: 720px; }
}

@media (min-width: 992px) {
  .container { max-width: 960px; }
}

@media (min-width: 1200px) {
  .container { max-width: 1140px; }
}

.container-fluid { width: 100%; padding-right: 15px; padding-left: 15px; ma=
rgin-right: auto; margin-left: auto; }

.row { display: flex; flex-wrap: wrap; margin-right: -15px; margin-left: -1=
5px; }

.no-gutters { margin-right: 0px; margin-left: 0px; }

.no-gutters > .col, .no-gutters > [class*=3D"col-"] { padding-right: 0px; p=
adding-left: 0px; }

.col-1, .col-2, .col-3, .col-4, .col-5, .col-6, .col-7, .col-8, .col-9, .co=
l-10, .col-11, .col-12, .col, .col-auto, .col-sm-1, .col-sm-2, .col-sm-3, .=
col-sm-4, .col-sm-5, .col-sm-6, .col-sm-7, .col-sm-8, .col-sm-9, .col-sm-10=
, .col-sm-11, .col-sm-12, .col-sm, .col-sm-auto, .col-md-1, .col-md-2, .col=
-md-3, .col-md-4, .col-md-5, .col-md-6, .col-md-7, .col-md-8, .col-md-9, .c=
ol-md-10, .col-md-11, .col-md-12, .col-md, .col-md-auto, .col-lg-1, .col-lg=
-2, .col-lg-3, .col-lg-4, .col-lg-5, .col-lg-6, .col-lg-7, .col-lg-8, .col-=
lg-9, .col-lg-10, .col-lg-11, .col-lg-12, .col-lg, .col-lg-auto, .col-xl-1,=
 .col-xl-2, .col-xl-3, .col-xl-4, .col-xl-5, .col-xl-6, .col-xl-7, .col-xl-=
8, .col-xl-9, .col-xl-10, .col-xl-11, .col-xl-12, .col-xl, .col-xl-auto { p=
osition: relative; width: 100%; min-height: 1px; padding-right: 15px; paddi=
ng-left: 15px; }

.col { flex-basis: 0px; flex-grow: 1; max-width: 100%; }

.col-auto { flex: 0 0 auto; width: auto; max-width: none; }

.col-1 { flex: 0 0 8.33333%; max-width: 8.33333%; }

.col-2 { flex: 0 0 16.6667%; max-width: 16.6667%; }

.col-3 { flex: 0 0 25%; max-width: 25%; }

.col-4 { flex: 0 0 33.3333%; max-width: 33.3333%; }

.col-5 { flex: 0 0 41.6667%; max-width: 41.6667%; }

.col-6 { flex: 0 0 50%; max-width: 50%; }

.col-7 { flex: 0 0 58.3333%; max-width: 58.3333%; }

.col-8 { flex: 0 0 66.6667%; max-width: 66.6667%; }

.col-9 { flex: 0 0 75%; max-width: 75%; }

.col-10 { flex: 0 0 83.3333%; max-width: 83.3333%; }

.col-11 { flex: 0 0 91.6667%; max-width: 91.6667%; }

.col-12 { flex: 0 0 100%; max-width: 100%; }

.order-first { order: -1; }

.order-last { order: 13; }

.order-0 { order: 0; }

.order-1 { order: 1; }

.order-2 { order: 2; }

.order-3 { order: 3; }

.order-4 { order: 4; }

.order-5 { order: 5; }

.order-6 { order: 6; }

.order-7 { order: 7; }

.order-8 { order: 8; }

.order-9 { order: 9; }

.order-10 { order: 10; }

.order-11 { order: 11; }

.order-12 { order: 12; }

.offset-1 { margin-left: 8.33333%; }

.offset-2 { margin-left: 16.6667%; }

.offset-3 { margin-left: 25%; }

.offset-4 { margin-left: 33.3333%; }

.offset-5 { margin-left: 41.6667%; }

.offset-6 { margin-left: 50%; }

.offset-7 { margin-left: 58.3333%; }

.offset-8 { margin-left: 66.6667%; }

.offset-9 { margin-left: 75%; }

.offset-10 { margin-left: 83.3333%; }

.offset-11 { margin-left: 91.6667%; }

@media (min-width: 576px) {
  .col-sm { flex-basis: 0px; flex-grow: 1; max-width: 100%; }
  .col-sm-auto { flex: 0 0 auto; width: auto; max-width: none; }
  .col-sm-1 { flex: 0 0 8.33333%; max-width: 8.33333%; }
  .col-sm-2 { flex: 0 0 16.6667%; max-width: 16.6667%; }
  .col-sm-3 { flex: 0 0 25%; max-width: 25%; }
  .col-sm-4 { flex: 0 0 33.3333%; max-width: 33.3333%; }
  .col-sm-5 { flex: 0 0 41.6667%; max-width: 41.6667%; }
  .col-sm-6 { flex: 0 0 50%; max-width: 50%; }
  .col-sm-7 { flex: 0 0 58.3333%; max-width: 58.3333%; }
  .col-sm-8 { flex: 0 0 66.6667%; max-width: 66.6667%; }
  .col-sm-9 { flex: 0 0 75%; max-width: 75%; }
  .col-sm-10 { flex: 0 0 83.3333%; max-width: 83.3333%; }
  .col-sm-11 { flex: 0 0 91.6667%; max-width: 91.6667%; }
  .col-sm-12 { flex: 0 0 100%; max-width: 100%; }
  .order-sm-first { order: -1; }
  .order-sm-last { order: 13; }
  .order-sm-0 { order: 0; }
  .order-sm-1 { order: 1; }
  .order-sm-2 { order: 2; }
  .order-sm-3 { order: 3; }
  .order-sm-4 { order: 4; }
  .order-sm-5 { order: 5; }
  .order-sm-6 { order: 6; }
  .order-sm-7 { order: 7; }
  .order-sm-8 { order: 8; }
  .order-sm-9 { order: 9; }
  .order-sm-10 { order: 10; }
  .order-sm-11 { order: 11; }
  .order-sm-12 { order: 12; }
  .offset-sm-0 { margin-left: 0px; }
  .offset-sm-1 { margin-left: 8.33333%; }
  .offset-sm-2 { margin-left: 16.6667%; }
  .offset-sm-3 { margin-left: 25%; }
  .offset-sm-4 { margin-left: 33.3333%; }
  .offset-sm-5 { margin-left: 41.6667%; }
  .offset-sm-6 { margin-left: 50%; }
  .offset-sm-7 { margin-left: 58.3333%; }
  .offset-sm-8 { margin-left: 66.6667%; }
  .offset-sm-9 { margin-left: 75%; }
  .offset-sm-10 { margin-left: 83.3333%; }
  .offset-sm-11 { margin-left: 91.6667%; }
}

@media (min-width: 768px) {
  .col-md { flex-basis: 0px; flex-grow: 1; max-width: 100%; }
  .col-md-auto { flex: 0 0 auto; width: auto; max-width: none; }
  .col-md-1 { flex: 0 0 8.33333%; max-width: 8.33333%; }
  .col-md-2 { flex: 0 0 16.6667%; max-width: 16.6667%; }
  .col-md-3 { flex: 0 0 25%; max-width: 25%; }
  .col-md-4 { flex: 0 0 33.3333%; max-width: 33.3333%; }
  .col-md-5 { flex: 0 0 41.6667%; max-width: 41.6667%; }
  .col-md-6 { flex: 0 0 50%; max-width: 50%; }
  .col-md-7 { flex: 0 0 58.3333%; max-width: 58.3333%; }
  .col-md-8 { flex: 0 0 66.6667%; max-width: 66.6667%; }
  .col-md-9 { flex: 0 0 75%; max-width: 75%; }
  .col-md-10 { flex: 0 0 83.3333%; max-width: 83.3333%; }
  .col-md-11 { flex: 0 0 91.6667%; max-width: 91.6667%; }
  .col-md-12 { flex: 0 0 100%; max-width: 100%; }
  .order-md-first { order: -1; }
  .order-md-last { order: 13; }
  .order-md-0 { order: 0; }
  .order-md-1 { order: 1; }
  .order-md-2 { order: 2; }
  .order-md-3 { order: 3; }
  .order-md-4 { order: 4; }
  .order-md-5 { order: 5; }
  .order-md-6 { order: 6; }
  .order-md-7 { order: 7; }
  .order-md-8 { order: 8; }
  .order-md-9 { order: 9; }
  .order-md-10 { order: 10; }
  .order-md-11 { order: 11; }
  .order-md-12 { order: 12; }
  .offset-md-0 { margin-left: 0px; }
  .offset-md-1 { margin-left: 8.33333%; }
  .offset-md-2 { margin-left: 16.6667%; }
  .offset-md-3 { margin-left: 25%; }
  .offset-md-4 { margin-left: 33.3333%; }
  .offset-md-5 { margin-left: 41.6667%; }
  .offset-md-6 { margin-left: 50%; }
  .offset-md-7 { margin-left: 58.3333%; }
  .offset-md-8 { margin-left: 66.6667%; }
  .offset-md-9 { margin-left: 75%; }
  .offset-md-10 { margin-left: 83.3333%; }
  .offset-md-11 { margin-left: 91.6667%; }
}

@media (min-width: 992px) {
  .col-lg { flex-basis: 0px; flex-grow: 1; max-width: 100%; }
  .col-lg-auto { flex: 0 0 auto; width: auto; max-width: none; }
  .col-lg-1 { flex: 0 0 8.33333%; max-width: 8.33333%; }
  .col-lg-2 { flex: 0 0 16.6667%; max-width: 16.6667%; }
  .col-lg-3 { flex: 0 0 25%; max-width: 25%; }
  .col-lg-4 { flex: 0 0 33.3333%; max-width: 33.3333%; }
  .col-lg-5 { flex: 0 0 41.6667%; max-width: 41.6667%; }
  .col-lg-6 { flex: 0 0 50%; max-width: 50%; }
  .col-lg-7 { flex: 0 0 58.3333%; max-width: 58.3333%; }
  .col-lg-8 { flex: 0 0 66.6667%; max-width: 66.6667%; }
  .col-lg-9 { flex: 0 0 75%; max-width: 75%; }
  .col-lg-10 { flex: 0 0 83.3333%; max-width: 83.3333%; }
  .col-lg-11 { flex: 0 0 91.6667%; max-width: 91.6667%; }
  .col-lg-12 { flex: 0 0 100%; max-width: 100%; }
  .order-lg-first { order: -1; }
  .order-lg-last { order: 13; }
  .order-lg-0 { order: 0; }
  .order-lg-1 { order: 1; }
  .order-lg-2 { order: 2; }
  .order-lg-3 { order: 3; }
  .order-lg-4 { order: 4; }
  .order-lg-5 { order: 5; }
  .order-lg-6 { order: 6; }
  .order-lg-7 { order: 7; }
  .order-lg-8 { order: 8; }
  .order-lg-9 { order: 9; }
  .order-lg-10 { order: 10; }
  .order-lg-11 { order: 11; }
  .order-lg-12 { order: 12; }
  .offset-lg-0 { margin-left: 0px; }
  .offset-lg-1 { margin-left: 8.33333%; }
  .offset-lg-2 { margin-left: 16.6667%; }
  .offset-lg-3 { margin-left: 25%; }
  .offset-lg-4 { margin-left: 33.3333%; }
  .offset-lg-5 { margin-left: 41.6667%; }
  .offset-lg-6 { margin-left: 50%; }
  .offset-lg-7 { margin-left: 58.3333%; }
  .offset-lg-8 { margin-left: 66.6667%; }
  .offset-lg-9 { margin-left: 75%; }
  .offset-lg-10 { margin-left: 83.3333%; }
  .offset-lg-11 { margin-left: 91.6667%; }
}

@media (min-width: 1200px) {
  .col-xl { flex-basis: 0px; flex-grow: 1; max-width: 100%; }
  .col-xl-auto { flex: 0 0 auto; width: auto; max-width: none; }
  .col-xl-1 { flex: 0 0 8.33333%; max-width: 8.33333%; }
  .col-xl-2 { flex: 0 0 16.6667%; max-width: 16.6667%; }
  .col-xl-3 { flex: 0 0 25%; max-width: 25%; }
  .col-xl-4 { flex: 0 0 33.3333%; max-width: 33.3333%; }
  .col-xl-5 { flex: 0 0 41.6667%; max-width: 41.6667%; }
  .col-xl-6 { flex: 0 0 50%; max-width: 50%; }
  .col-xl-7 { flex: 0 0 58.3333%; max-width: 58.3333%; }
  .col-xl-8 { flex: 0 0 66.6667%; max-width: 66.6667%; }
  .col-xl-9 { flex: 0 0 75%; max-width: 75%; }
  .col-xl-10 { flex: 0 0 83.3333%; max-width: 83.3333%; }
  .col-xl-11 { flex: 0 0 91.6667%; max-width: 91.6667%; }
  .col-xl-12 { flex: 0 0 100%; max-width: 100%; }
  .order-xl-first { order: -1; }
  .order-xl-last { order: 13; }
  .order-xl-0 { order: 0; }
  .order-xl-1 { order: 1; }
  .order-xl-2 { order: 2; }
  .order-xl-3 { order: 3; }
  .order-xl-4 { order: 4; }
  .order-xl-5 { order: 5; }
  .order-xl-6 { order: 6; }
  .order-xl-7 { order: 7; }
  .order-xl-8 { order: 8; }
  .order-xl-9 { order: 9; }
  .order-xl-10 { order: 10; }
  .order-xl-11 { order: 11; }
  .order-xl-12 { order: 12; }
  .offset-xl-0 { margin-left: 0px; }
  .offset-xl-1 { margin-left: 8.33333%; }
  .offset-xl-2 { margin-left: 16.6667%; }
  .offset-xl-3 { margin-left: 25%; }
  .offset-xl-4 { margin-left: 33.3333%; }
  .offset-xl-5 { margin-left: 41.6667%; }
  .offset-xl-6 { margin-left: 50%; }
  .offset-xl-7 { margin-left: 58.3333%; }
  .offset-xl-8 { margin-left: 66.6667%; }
  .offset-xl-9 { margin-left: 75%; }
  .offset-xl-10 { margin-left: 83.3333%; }
  .offset-xl-11 { margin-left: 91.6667%; }
}

.table { width: 100%; max-width: 100%; margin-bottom: 1rem; background-colo=
r: transparent; }

.table th, .table td { padding: 0.75rem; vertical-align: top; border-top: 1=
px solid rgb(222, 226, 230); }

.table thead th { vertical-align: bottom; border-bottom: 2px solid rgb(222,=
 226, 230); }

.table tbody + tbody { border-top: 2px solid rgb(222, 226, 230); }

.table .table { background-color: rgb(255, 255, 255); }

.table-sm th, .table-sm td { padding: 0.3rem; }

.table-bordered { border: 1px solid rgb(222, 226, 230); }

.table-bordered th, .table-bordered td { border: 1px solid rgb(222, 226, 23=
0); }

.table-bordered thead th, .table-bordered thead td { border-bottom-width: 2=
px; }

.table-striped tbody tr:nth-of-type(2n+1) { background-color: rgba(0, 0, 0,=
 0.05); }

.table-hover tbody tr:hover { background-color: rgba(0, 0, 0, 0.075); }

.table-primary, .table-primary > th, .table-primary > td { background-color=
: rgb(184, 218, 255); }

.table-hover .table-primary:hover { background-color: rgb(159, 205, 255); }

.table-hover .table-primary:hover > td, .table-hover .table-primary:hover >=
 th { background-color: rgb(159, 205, 255); }

.table-secondary, .table-secondary > th, .table-secondary > td { background=
-color: rgb(214, 216, 219); }

.table-hover .table-secondary:hover { background-color: rgb(200, 203, 207);=
 }

.table-hover .table-secondary:hover > td, .table-hover .table-secondary:hov=
er > th { background-color: rgb(200, 203, 207); }

.table-success, .table-success > th, .table-success > td { background-color=
: rgb(195, 230, 203); }

.table-hover .table-success:hover { background-color: rgb(177, 223, 187); }

.table-hover .table-success:hover > td, .table-hover .table-success:hover >=
 th { background-color: rgb(177, 223, 187); }

.table-info, .table-info > th, .table-info > td { background-color: rgb(190=
, 229, 235); }

.table-hover .table-info:hover { background-color: rgb(171, 221, 229); }

.table-hover .table-info:hover > td, .table-hover .table-info:hover > th { =
background-color: rgb(171, 221, 229); }

.table-warning, .table-warning > th, .table-warning > td { background-color=
: rgb(255, 238, 186); }

.table-hover .table-warning:hover { background-color: rgb(255, 232, 161); }

.table-hover .table-warning:hover > td, .table-hover .table-warning:hover >=
 th { background-color: rgb(255, 232, 161); }

.table-danger, .table-danger > th, .table-danger > td { background-color: r=
gb(245, 198, 203); }

.table-hover .table-danger:hover { background-color: rgb(241, 176, 183); }

.table-hover .table-danger:hover > td, .table-hover .table-danger:hover > t=
h { background-color: rgb(241, 176, 183); }

.table-light, .table-light > th, .table-light > td { background-color: rgb(=
253, 253, 254); }

.table-hover .table-light:hover { background-color: rgb(236, 236, 246); }

.table-hover .table-light:hover > td, .table-hover .table-light:hover > th =
{ background-color: rgb(236, 236, 246); }

.table-dark, .table-dark > th, .table-dark > td { background-color: rgb(198=
, 200, 202); }

.table-hover .table-dark:hover { background-color: rgb(185, 187, 190); }

.table-hover .table-dark:hover > td, .table-hover .table-dark:hover > th { =
background-color: rgb(185, 187, 190); }

.table-active, .table-active > th, .table-active > td { background-color: r=
gba(0, 0, 0, 0.075); }

.table-hover .table-active:hover { background-color: rgba(0, 0, 0, 0.075); =
}

.table-hover .table-active:hover > td, .table-hover .table-active:hover > t=
h { background-color: rgba(0, 0, 0, 0.075); }

.table .thead-dark th { color: rgb(255, 255, 255); background-color: rgb(33=
, 37, 41); border-color: rgb(50, 56, 62); }

.table .thead-light th { color: rgb(73, 80, 87); background-color: rgb(233,=
 236, 239); border-color: rgb(222, 226, 230); }

.table-dark { color: rgb(255, 255, 255); background-color: rgb(33, 37, 41);=
 }

.table-dark th, .table-dark td, .table-dark thead th { border-color: rgb(50=
, 56, 62); }

.table-dark.table-bordered { border: 0px; }

.table-dark.table-striped tbody tr:nth-of-type(2n+1) { background-color: rg=
ba(255, 255, 255, 0.05); }

.table-dark.table-hover tbody tr:hover { background-color: rgba(255, 255, 2=
55, 0.075); }

@media (max-width: 575.98px) {
  .table-responsive-sm { display: block; width: 100%; overflow-x: auto; }
  .table-responsive-sm > .table-bordered { border: 0px; }
}

@media (max-width: 767.98px) {
  .table-responsive-md { display: block; width: 100%; overflow-x: auto; }
  .table-responsive-md > .table-bordered { border: 0px; }
}

@media (max-width: 991.98px) {
  .table-responsive-lg { display: block; width: 100%; overflow-x: auto; }
  .table-responsive-lg > .table-bordered { border: 0px; }
}

@media (max-width: 1199.98px) {
  .table-responsive-xl { display: block; width: 100%; overflow-x: auto; }
  .table-responsive-xl > .table-bordered { border: 0px; }
}

.table-responsive { display: block; width: 100%; overflow-x: auto; }

.table-responsive > .table-bordered { border: 0px; }

.form-control { display: block; width: 100%; padding: 0.375rem 0.75rem; fon=
t-size: 1rem; line-height: 1.5; color: rgb(73, 80, 87); background-color: r=
gb(255, 255, 255); background-clip: padding-box; border: 1px solid rgb(206,=
 212, 218); border-radius: 0.25rem; transition: border-color 0.15s ease-in-=
out 0s, box-shadow 0.15s ease-in-out 0s; }

.form-control:focus { color: rgb(73, 80, 87); background-color: rgb(255, 25=
5, 255); border-color: rgb(128, 189, 255); outline: 0px; box-shadow: rgba(0=
, 123, 255, 0.25) 0px 0px 0px 0.2rem; }

.form-control::placeholder { color: rgb(108, 117, 125); opacity: 1; }

.form-control:disabled, .form-control[readonly] { background-color: rgb(233=
, 236, 239); opacity: 1; }

select.form-control:not([size]):not([multiple]) { height: calc(2.25rem + 2p=
x); }

.form-control-file, .form-control-range { display: block; width: 100%; }

.col-form-label { padding-top: calc(0.375rem + 1px); padding-bottom: calc(0=
.375rem + 1px); margin-bottom: 0px; font-size: inherit; line-height: 1.5; }

.col-form-label-lg { padding-top: calc(0.5rem + 1px); padding-bottom: calc(=
0.5rem + 1px); font-size: 1.25rem; line-height: 1.5; }

.col-form-label-sm { padding-top: calc(0.25rem + 1px); padding-bottom: calc=
(0.25rem + 1px); font-size: 0.875rem; line-height: 1.5; }

.form-control-plaintext { display: block; width: 100%; padding-top: 0.375re=
m; padding-bottom: 0.375rem; margin-bottom: 0px; line-height: 1.5; backgrou=
nd-color: transparent; border-style: solid; border-color: transparent; bord=
er-image: initial; border-width: 1px 0px; }

.form-control-plaintext.form-control-sm, .input-group-sm > .form-control-pl=
aintext.form-control, .input-group-sm > .input-group-prepend > .form-contro=
l-plaintext.input-group-text, .input-group-sm > .input-group-append > .form=
-control-plaintext.input-group-text, .input-group-sm > .input-group-prepend=
 > .form-control-plaintext.btn, .input-group-sm > .input-group-append > .fo=
rm-control-plaintext.btn, .form-control-plaintext.form-control-lg, .input-g=
roup-lg > .form-control-plaintext.form-control, .input-group-lg > .input-gr=
oup-prepend > .form-control-plaintext.input-group-text, .input-group-lg > .=
input-group-append > .form-control-plaintext.input-group-text, .input-group=
-lg > .input-group-prepend > .form-control-plaintext.btn, .input-group-lg >=
 .input-group-append > .form-control-plaintext.btn { padding-right: 0px; pa=
dding-left: 0px; }

.form-control-sm, .input-group-sm > .form-control, .input-group-sm > .input=
-group-prepend > .input-group-text, .input-group-sm > .input-group-append >=
 .input-group-text, .input-group-sm > .input-group-prepend > .btn, .input-g=
roup-sm > .input-group-append > .btn { padding: 0.25rem 0.5rem; font-size: =
0.875rem; line-height: 1.5; border-radius: 0.2rem; }

select.form-control-sm:not([size]):not([multiple]), .input-group-sm > selec=
t.form-control:not([size]):not([multiple]), .input-group-sm > .input-group-=
prepend > select.input-group-text:not([size]):not([multiple]), .input-group=
-sm > .input-group-append > select.input-group-text:not([size]):not([multip=
le]), .input-group-sm > .input-group-prepend > select.btn:not([size]):not([=
multiple]), .input-group-sm > .input-group-append > select.btn:not([size]):=
not([multiple]) { height: calc(1.8125rem + 2px); }

.form-control-lg, .input-group-lg > .form-control, .input-group-lg > .input=
-group-prepend > .input-group-text, .input-group-lg > .input-group-append >=
 .input-group-text, .input-group-lg > .input-group-prepend > .btn, .input-g=
roup-lg > .input-group-append > .btn { padding: 0.5rem 1rem; font-size: 1.2=
5rem; line-height: 1.5; border-radius: 0.3rem; }

select.form-control-lg:not([size]):not([multiple]), .input-group-lg > selec=
t.form-control:not([size]):not([multiple]), .input-group-lg > .input-group-=
prepend > select.input-group-text:not([size]):not([multiple]), .input-group=
-lg > .input-group-append > select.input-group-text:not([size]):not([multip=
le]), .input-group-lg > .input-group-prepend > select.btn:not([size]):not([=
multiple]), .input-group-lg > .input-group-append > select.btn:not([size]):=
not([multiple]) { height: calc(2.875rem + 2px); }

.form-group { margin-bottom: 1rem; }

.form-text { display: block; margin-top: 0.25rem; }

.form-row { display: flex; flex-wrap: wrap; margin-right: -5px; margin-left=
: -5px; }

.form-row > .col, .form-row > [class*=3D"col-"] { padding-right: 5px; paddi=
ng-left: 5px; }

.form-check { position: relative; display: block; padding-left: 1.25rem; }

.form-check-input { position: absolute; margin-top: 0.3rem; margin-left: -1=
.25rem; }

.form-check-input:disabled ~ .form-check-label { color: rgb(108, 117, 125);=
 }

.form-check-label { margin-bottom: 0px; }

.form-check-inline { display: inline-flex; align-items: center; padding-lef=
t: 0px; margin-right: 0.75rem; }

.form-check-inline .form-check-input { position: static; margin-top: 0px; m=
argin-right: 0.3125rem; margin-left: 0px; }

.valid-feedback { display: none; width: 100%; margin-top: 0.25rem; font-siz=
e: 80%; color: rgb(40, 167, 69); }

.valid-tooltip { position: absolute; top: 100%; z-index: 5; display: none; =
max-width: 100%; padding: 0.5rem; margin-top: 0.1rem; font-size: 0.875rem; =
line-height: 1; color: rgb(255, 255, 255); background-color: rgba(40, 167, =
69, 0.8); border-radius: 0.2rem; }

.was-validated .form-control:valid, .form-control.is-valid, .was-validated =
.custom-select:valid, .custom-select.is-valid { border-color: rgb(40, 167, =
69); }

.was-validated .form-control:valid:focus, .form-control.is-valid:focus, .wa=
s-validated .custom-select:valid:focus, .custom-select.is-valid:focus { bor=
der-color: rgb(40, 167, 69); box-shadow: rgba(40, 167, 69, 0.25) 0px 0px 0p=
x 0.2rem; }

.was-validated .form-control:valid ~ .valid-feedback, .was-validated .form-=
control:valid ~ .valid-tooltip, .form-control.is-valid ~ .valid-feedback, .=
form-control.is-valid ~ .valid-tooltip, .was-validated .custom-select:valid=
 ~ .valid-feedback, .was-validated .custom-select:valid ~ .valid-tooltip, .=
custom-select.is-valid ~ .valid-feedback, .custom-select.is-valid ~ .valid-=
tooltip { display: block; }

.was-validated .form-check-input:valid ~ .form-check-label, .form-check-inp=
ut.is-valid ~ .form-check-label { color: rgb(40, 167, 69); }

.was-validated .form-check-input:valid ~ .valid-feedback, .was-validated .f=
orm-check-input:valid ~ .valid-tooltip, .form-check-input.is-valid ~ .valid=
-feedback, .form-check-input.is-valid ~ .valid-tooltip { display: block; }

.was-validated .custom-control-input:valid ~ .custom-control-label, .custom=
-control-input.is-valid ~ .custom-control-label { color: rgb(40, 167, 69); =
}

.was-validated .custom-control-input:valid ~ .custom-control-label::before,=
 .custom-control-input.is-valid ~ .custom-control-label::before { backgroun=
d-color: rgb(113, 221, 138); }

.was-validated .custom-control-input:valid ~ .valid-feedback, .was-validate=
d .custom-control-input:valid ~ .valid-tooltip, .custom-control-input.is-va=
lid ~ .valid-feedback, .custom-control-input.is-valid ~ .valid-tooltip { di=
splay: block; }

.was-validated .custom-control-input:valid:checked ~ .custom-control-label:=
:before, .custom-control-input.is-valid:checked ~ .custom-control-label::be=
fore { background-color: rgb(52, 206, 87); }

.was-validated .custom-control-input:valid:focus ~ .custom-control-label::b=
efore, .custom-control-input.is-valid:focus ~ .custom-control-label::before=
 { box-shadow: rgb(255, 255, 255) 0px 0px 0px 1px, rgba(40, 167, 69, 0.25) =
0px 0px 0px 0.2rem; }

.was-validated .custom-file-input:valid ~ .custom-file-label, .custom-file-=
input.is-valid ~ .custom-file-label { border-color: rgb(40, 167, 69); }

.was-validated .custom-file-input:valid ~ .custom-file-label::before, .cust=
om-file-input.is-valid ~ .custom-file-label::before { border-color: inherit=
; }

.was-validated .custom-file-input:valid ~ .valid-feedback, .was-validated .=
custom-file-input:valid ~ .valid-tooltip, .custom-file-input.is-valid ~ .va=
lid-feedback, .custom-file-input.is-valid ~ .valid-tooltip { display: block=
; }

.was-validated .custom-file-input:valid:focus ~ .custom-file-label, .custom=
-file-input.is-valid:focus ~ .custom-file-label { box-shadow: rgba(40, 167,=
 69, 0.25) 0px 0px 0px 0.2rem; }

.invalid-feedback { display: none; width: 100%; margin-top: 0.25rem; font-s=
ize: 80%; color: rgb(220, 53, 69); }

.invalid-tooltip { position: absolute; top: 100%; z-index: 5; display: none=
; max-width: 100%; padding: 0.5rem; margin-top: 0.1rem; font-size: 0.875rem=
; line-height: 1; color: rgb(255, 255, 255); background-color: rgba(220, 53=
, 69, 0.8); border-radius: 0.2rem; }

.was-validated .form-control:invalid, .form-control.is-invalid, .was-valida=
ted .custom-select:invalid, .custom-select.is-invalid { border-color: rgb(2=
20, 53, 69); }

.was-validated .form-control:invalid:focus, .form-control.is-invalid:focus,=
 .was-validated .custom-select:invalid:focus, .custom-select.is-invalid:foc=
us { border-color: rgb(220, 53, 69); box-shadow: rgba(220, 53, 69, 0.25) 0p=
x 0px 0px 0.2rem; }

.was-validated .form-control:invalid ~ .invalid-feedback, .was-validated .f=
orm-control:invalid ~ .invalid-tooltip, .form-control.is-invalid ~ .invalid=
-feedback, .form-control.is-invalid ~ .invalid-tooltip, .was-validated .cus=
tom-select:invalid ~ .invalid-feedback, .was-validated .custom-select:inval=
id ~ .invalid-tooltip, .custom-select.is-invalid ~ .invalid-feedback, .cust=
om-select.is-invalid ~ .invalid-tooltip { display: block; }

.was-validated .form-check-input:invalid ~ .form-check-label, .form-check-i=
nput.is-invalid ~ .form-check-label { color: rgb(220, 53, 69); }

.was-validated .form-check-input:invalid ~ .invalid-feedback, .was-validate=
d .form-check-input:invalid ~ .invalid-tooltip, .form-check-input.is-invali=
d ~ .invalid-feedback, .form-check-input.is-invalid ~ .invalid-tooltip { di=
splay: block; }

.was-validated .custom-control-input:invalid ~ .custom-control-label, .cust=
om-control-input.is-invalid ~ .custom-control-label { color: rgb(220, 53, 6=
9); }

.was-validated .custom-control-input:invalid ~ .custom-control-label::befor=
e, .custom-control-input.is-invalid ~ .custom-control-label::before { backg=
round-color: rgb(239, 162, 169); }

.was-validated .custom-control-input:invalid ~ .invalid-feedback, .was-vali=
dated .custom-control-input:invalid ~ .invalid-tooltip, .custom-control-inp=
ut.is-invalid ~ .invalid-feedback, .custom-control-input.is-invalid ~ .inva=
lid-tooltip { display: block; }

.was-validated .custom-control-input:invalid:checked ~ .custom-control-labe=
l::before, .custom-control-input.is-invalid:checked ~ .custom-control-label=
::before { background-color: rgb(228, 96, 109); }

.was-validated .custom-control-input:invalid:focus ~ .custom-control-label:=
:before, .custom-control-input.is-invalid:focus ~ .custom-control-label::be=
fore { box-shadow: rgb(255, 255, 255) 0px 0px 0px 1px, rgba(220, 53, 69, 0.=
25) 0px 0px 0px 0.2rem; }

.was-validated .custom-file-input:invalid ~ .custom-file-label, .custom-fil=
e-input.is-invalid ~ .custom-file-label { border-color: rgb(220, 53, 69); }

.was-validated .custom-file-input:invalid ~ .custom-file-label::before, .cu=
stom-file-input.is-invalid ~ .custom-file-label::before { border-color: inh=
erit; }

.was-validated .custom-file-input:invalid ~ .invalid-feedback, .was-validat=
ed .custom-file-input:invalid ~ .invalid-tooltip, .custom-file-input.is-inv=
alid ~ .invalid-feedback, .custom-file-input.is-invalid ~ .invalid-tooltip =
{ display: block; }

.was-validated .custom-file-input:invalid:focus ~ .custom-file-label, .cust=
om-file-input.is-invalid:focus ~ .custom-file-label { box-shadow: rgba(220,=
 53, 69, 0.25) 0px 0px 0px 0.2rem; }

.form-inline { display: flex; flex-flow: row wrap; align-items: center; }

.form-inline .form-check { width: 100%; }

@media (min-width: 576px) {
  .form-inline label { display: flex; align-items: center; justify-content:=
 center; margin-bottom: 0px; }
  .form-inline .form-group { display: flex; flex: 0 0 auto; flex-flow: row =
wrap; align-items: center; margin-bottom: 0px; }
  .form-inline .form-control { display: inline-block; width: auto; vertical=
-align: middle; }
  .form-inline .form-control-plaintext { display: inline-block; }
  .form-inline .input-group { width: auto; }
  .form-inline .form-check { display: flex; align-items: center; justify-co=
ntent: center; width: auto; padding-left: 0px; }
  .form-inline .form-check-input { position: relative; margin-top: 0px; mar=
gin-right: 0.25rem; margin-left: 0px; }
  .form-inline .custom-control { align-items: center; justify-content: cent=
er; }
  .form-inline .custom-control-label { margin-bottom: 0px; }
}

.btn { display: inline-block; font-weight: 400; text-align: center; white-s=
pace: nowrap; vertical-align: middle; user-select: none; border: 1px solid =
transparent; padding: 0.375rem 0.75rem; font-size: 1rem; line-height: 1.5; =
border-radius: 0.25rem; transition: color 0.15s ease-in-out 0s, background-=
color 0.15s ease-in-out 0s, border-color 0.15s ease-in-out 0s, box-shadow 0=
.15s ease-in-out 0s; }

.btn:hover, .btn:focus { text-decoration: none; }

.btn:focus, .btn.focus { outline: 0px; box-shadow: rgba(0, 123, 255, 0.25) =
0px 0px 0px 0.2rem; }

.btn.disabled, .btn:disabled { opacity: 0.65; }

.btn:not(:disabled):not(.disabled) { cursor: pointer; }

.btn:not(:disabled):not(.disabled):active, .btn:not(:disabled):not(.disable=
d).active { background-image: none; }

a.btn.disabled, fieldset:disabled a.btn { pointer-events: none; }

.btn-primary { color: rgb(255, 255, 255); background-color: rgb(0, 123, 255=
); border-color: rgb(0, 123, 255); }

.btn-primary:hover { color: rgb(255, 255, 255); background-color: rgb(0, 10=
5, 217); border-color: rgb(0, 98, 204); }

.btn-primary:focus, .btn-primary.focus { box-shadow: rgba(0, 123, 255, 0.5)=
 0px 0px 0px 0.2rem; }

.btn-primary.disabled, .btn-primary:disabled { color: rgb(255, 255, 255); b=
ackground-color: rgb(0, 123, 255); border-color: rgb(0, 123, 255); }

.btn-primary:not(:disabled):not(.disabled):active, .btn-primary:not(:disabl=
ed):not(.disabled).active, .show > .btn-primary.dropdown-toggle { color: rg=
b(255, 255, 255); background-color: rgb(0, 98, 204); border-color: rgb(0, 9=
2, 191); }

.btn-primary:not(:disabled):not(.disabled):active:focus, .btn-primary:not(:=
disabled):not(.disabled).active:focus, .show > .btn-primary.dropdown-toggle=
:focus { box-shadow: rgba(0, 123, 255, 0.5) 0px 0px 0px 0.2rem; }

.btn-secondary { color: rgb(255, 255, 255); background-color: rgb(108, 117,=
 125); border-color: rgb(108, 117, 125); }

.btn-secondary:hover { color: rgb(255, 255, 255); background-color: rgb(90,=
 98, 104); border-color: rgb(84, 91, 98); }

.btn-secondary:focus, .btn-secondary.focus { box-shadow: rgba(108, 117, 125=
, 0.5) 0px 0px 0px 0.2rem; }

.btn-secondary.disabled, .btn-secondary:disabled { color: rgb(255, 255, 255=
); background-color: rgb(108, 117, 125); border-color: rgb(108, 117, 125); =
}

.btn-secondary:not(:disabled):not(.disabled):active, .btn-secondary:not(:di=
sabled):not(.disabled).active, .show > .btn-secondary.dropdown-toggle { col=
or: rgb(255, 255, 255); background-color: rgb(84, 91, 98); border-color: rg=
b(78, 85, 91); }

.btn-secondary:not(:disabled):not(.disabled):active:focus, .btn-secondary:n=
ot(:disabled):not(.disabled).active:focus, .show > .btn-secondary.dropdown-=
toggle:focus { box-shadow: rgba(108, 117, 125, 0.5) 0px 0px 0px 0.2rem; }

.btn-success { color: rgb(255, 255, 255); background-color: rgb(40, 167, 69=
); border-color: rgb(40, 167, 69); }

.btn-success:hover { color: rgb(255, 255, 255); background-color: rgb(33, 1=
36, 56); border-color: rgb(30, 126, 52); }

.btn-success:focus, .btn-success.focus { box-shadow: rgba(40, 167, 69, 0.5)=
 0px 0px 0px 0.2rem; }

.btn-success.disabled, .btn-success:disabled { color: rgb(255, 255, 255); b=
ackground-color: rgb(40, 167, 69); border-color: rgb(40, 167, 69); }

.btn-success:not(:disabled):not(.disabled):active, .btn-success:not(:disabl=
ed):not(.disabled).active, .show > .btn-success.dropdown-toggle { color: rg=
b(255, 255, 255); background-color: rgb(30, 126, 52); border-color: rgb(28,=
 116, 48); }

.btn-success:not(:disabled):not(.disabled):active:focus, .btn-success:not(:=
disabled):not(.disabled).active:focus, .show > .btn-success.dropdown-toggle=
:focus { box-shadow: rgba(40, 167, 69, 0.5) 0px 0px 0px 0.2rem; }

.btn-info { color: rgb(255, 255, 255); background-color: rgb(23, 162, 184);=
 border-color: rgb(23, 162, 184); }

.btn-info:hover { color: rgb(255, 255, 255); background-color: rgb(19, 132,=
 150); border-color: rgb(17, 122, 139); }

.btn-info:focus, .btn-info.focus { box-shadow: rgba(23, 162, 184, 0.5) 0px =
0px 0px 0.2rem; }

.btn-info.disabled, .btn-info:disabled { color: rgb(255, 255, 255); backgro=
und-color: rgb(23, 162, 184); border-color: rgb(23, 162, 184); }

.btn-info:not(:disabled):not(.disabled):active, .btn-info:not(:disabled):no=
t(.disabled).active, .show > .btn-info.dropdown-toggle { color: rgb(255, 25=
5, 255); background-color: rgb(17, 122, 139); border-color: rgb(16, 112, 12=
7); }

.btn-info:not(:disabled):not(.disabled):active:focus, .btn-info:not(:disabl=
ed):not(.disabled).active:focus, .show > .btn-info.dropdown-toggle:focus { =
box-shadow: rgba(23, 162, 184, 0.5) 0px 0px 0px 0.2rem; }

.btn-warning { color: rgb(33, 37, 41); background-color: rgb(255, 193, 7); =
border-color: rgb(255, 193, 7); }

.btn-warning:hover { color: rgb(33, 37, 41); background-color: rgb(224, 168=
, 0); border-color: rgb(211, 158, 0); }

.btn-warning:focus, .btn-warning.focus { box-shadow: rgba(255, 193, 7, 0.5)=
 0px 0px 0px 0.2rem; }

.btn-warning.disabled, .btn-warning:disabled { color: rgb(33, 37, 41); back=
ground-color: rgb(255, 193, 7); border-color: rgb(255, 193, 7); }

.btn-warning:not(:disabled):not(.disabled):active, .btn-warning:not(:disabl=
ed):not(.disabled).active, .show > .btn-warning.dropdown-toggle { color: rg=
b(33, 37, 41); background-color: rgb(211, 158, 0); border-color: rgb(198, 1=
49, 0); }

.btn-warning:not(:disabled):not(.disabled):active:focus, .btn-warning:not(:=
disabled):not(.disabled).active:focus, .show > .btn-warning.dropdown-toggle=
:focus { box-shadow: rgba(255, 193, 7, 0.5) 0px 0px 0px 0.2rem; }

.btn-danger { color: rgb(255, 255, 255); background-color: rgb(220, 53, 69)=
; border-color: rgb(220, 53, 69); }

.btn-danger:hover { color: rgb(255, 255, 255); background-color: rgb(200, 3=
5, 51); border-color: rgb(189, 33, 48); }

.btn-danger:focus, .btn-danger.focus { box-shadow: rgba(220, 53, 69, 0.5) 0=
px 0px 0px 0.2rem; }

.btn-danger.disabled, .btn-danger:disabled { color: rgb(255, 255, 255); bac=
kground-color: rgb(220, 53, 69); border-color: rgb(220, 53, 69); }

.btn-danger:not(:disabled):not(.disabled):active, .btn-danger:not(:disabled=
):not(.disabled).active, .show > .btn-danger.dropdown-toggle { color: rgb(2=
55, 255, 255); background-color: rgb(189, 33, 48); border-color: rgb(178, 3=
1, 45); }

.btn-danger:not(:disabled):not(.disabled):active:focus, .btn-danger:not(:di=
sabled):not(.disabled).active:focus, .show > .btn-danger.dropdown-toggle:fo=
cus { box-shadow: rgba(220, 53, 69, 0.5) 0px 0px 0px 0.2rem; }

.btn-light { color: rgb(33, 37, 41); background-color: rgb(248, 249, 250); =
border-color: rgb(248, 249, 250); }

.btn-light:hover { color: rgb(33, 37, 41); background-color: rgb(226, 230, =
234); border-color: rgb(218, 224, 229); }

.btn-light:focus, .btn-light.focus { box-shadow: rgba(248, 249, 250, 0.5) 0=
px 0px 0px 0.2rem; }

.btn-light.disabled, .btn-light:disabled { color: rgb(33, 37, 41); backgrou=
nd-color: rgb(248, 249, 250); border-color: rgb(248, 249, 250); }

.btn-light:not(:disabled):not(.disabled):active, .btn-light:not(:disabled):=
not(.disabled).active, .show > .btn-light.dropdown-toggle { color: rgb(33, =
37, 41); background-color: rgb(218, 224, 229); border-color: rgb(211, 217, =
223); }

.btn-light:not(:disabled):not(.disabled):active:focus, .btn-light:not(:disa=
bled):not(.disabled).active:focus, .show > .btn-light.dropdown-toggle:focus=
 { box-shadow: rgba(248, 249, 250, 0.5) 0px 0px 0px 0.2rem; }

.btn-dark { color: rgb(255, 255, 255); background-color: rgb(52, 58, 64); b=
order-color: rgb(52, 58, 64); }

.btn-dark:hover { color: rgb(255, 255, 255); background-color: rgb(35, 39, =
43); border-color: rgb(29, 33, 36); }

.btn-dark:focus, .btn-dark.focus { box-shadow: rgba(52, 58, 64, 0.5) 0px 0p=
x 0px 0.2rem; }

.btn-dark.disabled, .btn-dark:disabled { color: rgb(255, 255, 255); backgro=
und-color: rgb(52, 58, 64); border-color: rgb(52, 58, 64); }

.btn-dark:not(:disabled):not(.disabled):active, .btn-dark:not(:disabled):no=
t(.disabled).active, .show > .btn-dark.dropdown-toggle { color: rgb(255, 25=
5, 255); background-color: rgb(29, 33, 36); border-color: rgb(23, 26, 29); =
}

.btn-dark:not(:disabled):not(.disabled):active:focus, .btn-dark:not(:disabl=
ed):not(.disabled).active:focus, .show > .btn-dark.dropdown-toggle:focus { =
box-shadow: rgba(52, 58, 64, 0.5) 0px 0px 0px 0.2rem; }

.btn-outline-primary { color: rgb(0, 123, 255); background-color: transpare=
nt; background-image: none; border-color: rgb(0, 123, 255); }

.btn-outline-primary:hover { color: rgb(255, 255, 255); background-color: r=
gb(0, 123, 255); border-color: rgb(0, 123, 255); }

.btn-outline-primary:focus, .btn-outline-primary.focus { box-shadow: rgba(0=
, 123, 255, 0.5) 0px 0px 0px 0.2rem; }

.btn-outline-primary.disabled, .btn-outline-primary:disabled { color: rgb(0=
, 123, 255); background-color: transparent; }

.btn-outline-primary:not(:disabled):not(.disabled):active, .btn-outline-pri=
mary:not(:disabled):not(.disabled).active, .show > .btn-outline-primary.dro=
pdown-toggle { color: rgb(255, 255, 255); background-color: rgb(0, 123, 255=
); border-color: rgb(0, 123, 255); }

.btn-outline-primary:not(:disabled):not(.disabled):active:focus, .btn-outli=
ne-primary:not(:disabled):not(.disabled).active:focus, .show > .btn-outline=
-primary.dropdown-toggle:focus { box-shadow: rgba(0, 123, 255, 0.5) 0px 0px=
 0px 0.2rem; }

.btn-outline-secondary { color: rgb(108, 117, 125); background-color: trans=
parent; background-image: none; border-color: rgb(108, 117, 125); }

.btn-outline-secondary:hover { color: rgb(255, 255, 255); background-color:=
 rgb(108, 117, 125); border-color: rgb(108, 117, 125); }

.btn-outline-secondary:focus, .btn-outline-secondary.focus { box-shadow: rg=
ba(108, 117, 125, 0.5) 0px 0px 0px 0.2rem; }

.btn-outline-secondary.disabled, .btn-outline-secondary:disabled { color: r=
gb(108, 117, 125); background-color: transparent; }

.btn-outline-secondary:not(:disabled):not(.disabled):active, .btn-outline-s=
econdary:not(:disabled):not(.disabled).active, .show > .btn-outline-seconda=
ry.dropdown-toggle { color: rgb(255, 255, 255); background-color: rgb(108, =
117, 125); border-color: rgb(108, 117, 125); }

.btn-outline-secondary:not(:disabled):not(.disabled):active:focus, .btn-out=
line-secondary:not(:disabled):not(.disabled).active:focus, .show > .btn-out=
line-secondary.dropdown-toggle:focus { box-shadow: rgba(108, 117, 125, 0.5)=
 0px 0px 0px 0.2rem; }

.btn-outline-success { color: rgb(40, 167, 69); background-color: transpare=
nt; background-image: none; border-color: rgb(40, 167, 69); }

.btn-outline-success:hover { color: rgb(255, 255, 255); background-color: r=
gb(40, 167, 69); border-color: rgb(40, 167, 69); }

.btn-outline-success:focus, .btn-outline-success.focus { box-shadow: rgba(4=
0, 167, 69, 0.5) 0px 0px 0px 0.2rem; }

.btn-outline-success.disabled, .btn-outline-success:disabled { color: rgb(4=
0, 167, 69); background-color: transparent; }

.btn-outline-success:not(:disabled):not(.disabled):active, .btn-outline-suc=
cess:not(:disabled):not(.disabled).active, .show > .btn-outline-success.dro=
pdown-toggle { color: rgb(255, 255, 255); background-color: rgb(40, 167, 69=
); border-color: rgb(40, 167, 69); }

.btn-outline-success:not(:disabled):not(.disabled):active:focus, .btn-outli=
ne-success:not(:disabled):not(.disabled).active:focus, .show > .btn-outline=
-success.dropdown-toggle:focus { box-shadow: rgba(40, 167, 69, 0.5) 0px 0px=
 0px 0.2rem; }

.btn-outline-info { color: rgb(23, 162, 184); background-color: transparent=
; background-image: none; border-color: rgb(23, 162, 184); }

.btn-outline-info:hover { color: rgb(255, 255, 255); background-color: rgb(=
23, 162, 184); border-color: rgb(23, 162, 184); }

.btn-outline-info:focus, .btn-outline-info.focus { box-shadow: rgba(23, 162=
, 184, 0.5) 0px 0px 0px 0.2rem; }

.btn-outline-info.disabled, .btn-outline-info:disabled { color: rgb(23, 162=
, 184); background-color: transparent; }

.btn-outline-info:not(:disabled):not(.disabled):active, .btn-outline-info:n=
ot(:disabled):not(.disabled).active, .show > .btn-outline-info.dropdown-tog=
gle { color: rgb(255, 255, 255); background-color: rgb(23, 162, 184); borde=
r-color: rgb(23, 162, 184); }

.btn-outline-info:not(:disabled):not(.disabled):active:focus, .btn-outline-=
info:not(:disabled):not(.disabled).active:focus, .show > .btn-outline-info.=
dropdown-toggle:focus { box-shadow: rgba(23, 162, 184, 0.5) 0px 0px 0px 0.2=
rem; }

.btn-outline-warning { color: rgb(255, 193, 7); background-color: transpare=
nt; background-image: none; border-color: rgb(255, 193, 7); }

.btn-outline-warning:hover { color: rgb(33, 37, 41); background-color: rgb(=
255, 193, 7); border-color: rgb(255, 193, 7); }

.btn-outline-warning:focus, .btn-outline-warning.focus { box-shadow: rgba(2=
55, 193, 7, 0.5) 0px 0px 0px 0.2rem; }

.btn-outline-warning.disabled, .btn-outline-warning:disabled { color: rgb(2=
55, 193, 7); background-color: transparent; }

.btn-outline-warning:not(:disabled):not(.disabled):active, .btn-outline-war=
ning:not(:disabled):not(.disabled).active, .show > .btn-outline-warning.dro=
pdown-toggle { color: rgb(33, 37, 41); background-color: rgb(255, 193, 7); =
border-color: rgb(255, 193, 7); }

.btn-outline-warning:not(:disabled):not(.disabled):active:focus, .btn-outli=
ne-warning:not(:disabled):not(.disabled).active:focus, .show > .btn-outline=
-warning.dropdown-toggle:focus { box-shadow: rgba(255, 193, 7, 0.5) 0px 0px=
 0px 0.2rem; }

.btn-outline-danger { color: rgb(220, 53, 69); background-color: transparen=
t; background-image: none; border-color: rgb(220, 53, 69); }

.btn-outline-danger:hover { color: rgb(255, 255, 255); background-color: rg=
b(220, 53, 69); border-color: rgb(220, 53, 69); }

.btn-outline-danger:focus, .btn-outline-danger.focus { box-shadow: rgba(220=
, 53, 69, 0.5) 0px 0px 0px 0.2rem; }

.btn-outline-danger.disabled, .btn-outline-danger:disabled { color: rgb(220=
, 53, 69); background-color: transparent; }

.btn-outline-danger:not(:disabled):not(.disabled):active, .btn-outline-dang=
er:not(:disabled):not(.disabled).active, .show > .btn-outline-danger.dropdo=
wn-toggle { color: rgb(255, 255, 255); background-color: rgb(220, 53, 69); =
border-color: rgb(220, 53, 69); }

.btn-outline-danger:not(:disabled):not(.disabled):active:focus, .btn-outlin=
e-danger:not(:disabled):not(.disabled).active:focus, .show > .btn-outline-d=
anger.dropdown-toggle:focus { box-shadow: rgba(220, 53, 69, 0.5) 0px 0px 0p=
x 0.2rem; }

.btn-outline-light { color: rgb(248, 249, 250); background-color: transpare=
nt; background-image: none; border-color: rgb(248, 249, 250); }

.btn-outline-light:hover { color: rgb(33, 37, 41); background-color: rgb(24=
8, 249, 250); border-color: rgb(248, 249, 250); }

.btn-outline-light:focus, .btn-outline-light.focus { box-shadow: rgba(248, =
249, 250, 0.5) 0px 0px 0px 0.2rem; }

.btn-outline-light.disabled, .btn-outline-light:disabled { color: rgb(248, =
249, 250); background-color: transparent; }

.btn-outline-light:not(:disabled):not(.disabled):active, .btn-outline-light=
:not(:disabled):not(.disabled).active, .show > .btn-outline-light.dropdown-=
toggle { color: rgb(33, 37, 41); background-color: rgb(248, 249, 250); bord=
er-color: rgb(248, 249, 250); }

.btn-outline-light:not(:disabled):not(.disabled):active:focus, .btn-outline=
-light:not(:disabled):not(.disabled).active:focus, .show > .btn-outline-lig=
ht.dropdown-toggle:focus { box-shadow: rgba(248, 249, 250, 0.5) 0px 0px 0px=
 0.2rem; }

.btn-outline-dark { color: rgb(52, 58, 64); background-color: transparent; =
background-image: none; border-color: rgb(52, 58, 64); }

.btn-outline-dark:hover { color: rgb(255, 255, 255); background-color: rgb(=
52, 58, 64); border-color: rgb(52, 58, 64); }

.btn-outline-dark:focus, .btn-outline-dark.focus { box-shadow: rgba(52, 58,=
 64, 0.5) 0px 0px 0px 0.2rem; }

.btn-outline-dark.disabled, .btn-outline-dark:disabled { color: rgb(52, 58,=
 64); background-color: transparent; }

.btn-outline-dark:not(:disabled):not(.disabled):active, .btn-outline-dark:n=
ot(:disabled):not(.disabled).active, .show > .btn-outline-dark.dropdown-tog=
gle { color: rgb(255, 255, 255); background-color: rgb(52, 58, 64); border-=
color: rgb(52, 58, 64); }

.btn-outline-dark:not(:disabled):not(.disabled):active:focus, .btn-outline-=
dark:not(:disabled):not(.disabled).active:focus, .show > .btn-outline-dark.=
dropdown-toggle:focus { box-shadow: rgba(52, 58, 64, 0.5) 0px 0px 0px 0.2re=
m; }

.btn-link { font-weight: 400; color: rgb(0, 123, 255); background-color: tr=
ansparent; }

.btn-link:hover { color: rgb(0, 86, 179); text-decoration: underline; backg=
round-color: transparent; border-color: transparent; }

.btn-link:focus, .btn-link.focus { text-decoration: underline; border-color=
: transparent; box-shadow: none; }

.btn-link:disabled, .btn-link.disabled { color: rgb(108, 117, 125); }

.btn-lg, .btn-group-lg > .btn { padding: 0.5rem 1rem; font-size: 1.25rem; l=
ine-height: 1.5; border-radius: 0.3rem; }

.btn-sm, .btn-group-sm > .btn { padding: 0.25rem 0.5rem; font-size: 0.875re=
m; line-height: 1.5; border-radius: 0.2rem; }

.btn-block { display: block; width: 100%; }

.btn-block + .btn-block { margin-top: 0.5rem; }

input[type=3D"submit"].btn-block, input[type=3D"reset"].btn-block, input[ty=
pe=3D"button"].btn-block { width: 100%; }

.fade { opacity: 0; transition: opacity 0.15s linear 0s; }

.fade.show { opacity: 1; }

.collapse { display: none; }

.collapse.show { display: block; }

tr.collapse.show { display: table-row; }

tbody.collapse.show { display: table-row-group; }

.collapsing { position: relative; height: 0px; overflow: hidden; transition=
: height 0.35s ease 0s; }

.dropup, .dropdown { position: relative; }

.dropdown-toggle::after { display: inline-block; width: 0px; height: 0px; m=
argin-left: 0.255em; vertical-align: 0.255em; content: ""; border-width: 0.=
3em 0.3em 0px; border-top-style: solid; border-top-color: initial; border-r=
ight-style: solid; border-right-color: transparent; border-bottom-style: in=
itial; border-bottom-color: initial; border-left-style: solid; border-left-=
color: transparent; }

.dropdown-toggle:empty::after { margin-left: 0px; }

.dropdown-menu { position: absolute; top: 100%; left: 0px; z-index: 1000; d=
isplay: none; float: left; min-width: 10rem; padding: 0.5rem 0px; margin: 0=
.125rem 0px 0px; font-size: 1rem; color: rgb(33, 37, 41); text-align: left;=
 list-style: none; background-color: rgb(255, 255, 255); background-clip: p=
adding-box; border: 1px solid rgba(0, 0, 0, 0.15); border-radius: 0.25rem; =
}

.dropup .dropdown-menu { margin-top: 0px; margin-bottom: 0.125rem; }

.dropup .dropdown-toggle::after { display: inline-block; width: 0px; height=
: 0px; margin-left: 0.255em; vertical-align: 0.255em; content: ""; border-w=
idth: 0px 0.3em 0.3em; border-top-style: initial; border-top-color: initial=
; border-right-style: solid; border-right-color: transparent; border-bottom=
-style: solid; border-bottom-color: initial; border-left-style: solid; bord=
er-left-color: transparent; }

.dropup .dropdown-toggle:empty::after { margin-left: 0px; }

.dropright .dropdown-menu { margin-top: 0px; margin-left: 0.125rem; }

.dropright .dropdown-toggle::after { display: inline-block; width: 0px; hei=
ght: 0px; margin-left: 0.255em; vertical-align: 0.255em; content: ""; borde=
r-top: 0.3em solid transparent; border-bottom: 0.3em solid transparent; bor=
der-left: 0.3em solid; }

.dropright .dropdown-toggle:empty::after { margin-left: 0px; }

.dropright .dropdown-toggle::after { vertical-align: 0px; }

.dropleft .dropdown-menu { margin-top: 0px; margin-right: 0.125rem; }

.dropleft .dropdown-toggle::after { display: inline-block; width: 0px; heig=
ht: 0px; margin-left: 0.255em; vertical-align: 0.255em; content: ""; }

.dropleft .dropdown-toggle::after { display: none; }

.dropleft .dropdown-toggle::before { display: inline-block; width: 0px; hei=
ght: 0px; margin-right: 0.255em; vertical-align: 0.255em; content: ""; bord=
er-top: 0.3em solid transparent; border-right: 0.3em solid; border-bottom: =
0.3em solid transparent; }

.dropleft .dropdown-toggle:empty::after { margin-left: 0px; }

.dropleft .dropdown-toggle::before { vertical-align: 0px; }

.dropdown-divider { height: 0px; margin: 0.5rem 0px; overflow: hidden; bord=
er-top: 1px solid rgb(233, 236, 239); }

.dropdown-item { display: block; width: 100%; padding: 0.25rem 1.5rem; clea=
r: both; font-weight: 400; color: rgb(33, 37, 41); text-align: inherit; whi=
te-space: nowrap; background-color: transparent; border: 0px; }

.dropdown-item:hover, .dropdown-item:focus { color: rgb(22, 24, 27); text-d=
ecoration: none; background-color: rgb(248, 249, 250); }

.dropdown-item.active, .dropdown-item:active { color: rgb(255, 255, 255); t=
ext-decoration: none; background-color: rgb(0, 123, 255); }

.dropdown-item.disabled, .dropdown-item:disabled { color: rgb(108, 117, 125=
); background-color: transparent; }

.dropdown-menu.show { display: block; }

.dropdown-header { display: block; padding: 0.5rem 1.5rem; margin-bottom: 0=
px; font-size: 0.875rem; color: rgb(108, 117, 125); white-space: nowrap; }

.btn-group, .btn-group-vertical { position: relative; display: inline-flex;=
 vertical-align: middle; }

.btn-group > .btn, .btn-group-vertical > .btn { position: relative; flex: 0=
 1 auto; }

.btn-group > .btn:hover, .btn-group-vertical > .btn:hover { z-index: 1; }

.btn-group > .btn:focus, .btn-group > .btn:active, .btn-group > .btn.active=
, .btn-group-vertical > .btn:focus, .btn-group-vertical > .btn:active, .btn=
-group-vertical > .btn.active { z-index: 1; }

.btn-group .btn + .btn, .btn-group .btn + .btn-group, .btn-group .btn-group=
 + .btn, .btn-group .btn-group + .btn-group, .btn-group-vertical .btn + .bt=
n, .btn-group-vertical .btn + .btn-group, .btn-group-vertical .btn-group + =
.btn, .btn-group-vertical .btn-group + .btn-group { margin-left: -1px; }

.btn-toolbar { display: flex; flex-wrap: wrap; justify-content: flex-start;=
 }

.btn-toolbar .input-group { width: auto; }

.btn-group > .btn:first-child { margin-left: 0px; }

.btn-group > .btn:not(:last-child):not(.dropdown-toggle), .btn-group > .btn=
-group:not(:last-child) > .btn { border-top-right-radius: 0px; border-botto=
m-right-radius: 0px; }

.btn-group > .btn:not(:first-child), .btn-group > .btn-group:not(:first-chi=
ld) > .btn { border-top-left-radius: 0px; border-bottom-left-radius: 0px; }

.dropdown-toggle-split { padding-right: 0.5625rem; padding-left: 0.5625rem;=
 }

.dropdown-toggle-split::after { margin-left: 0px; }

.btn-sm + .dropdown-toggle-split, .btn-group-sm > .btn + .dropdown-toggle-s=
plit { padding-right: 0.375rem; padding-left: 0.375rem; }

.btn-lg + .dropdown-toggle-split, .btn-group-lg > .btn + .dropdown-toggle-s=
plit { padding-right: 0.75rem; padding-left: 0.75rem; }

.btn-group-vertical { flex-direction: column; align-items: flex-start; just=
ify-content: center; }

.btn-group-vertical .btn, .btn-group-vertical .btn-group { width: 100%; }

.btn-group-vertical > .btn + .btn, .btn-group-vertical > .btn + .btn-group,=
 .btn-group-vertical > .btn-group + .btn, .btn-group-vertical > .btn-group =
+ .btn-group { margin-top: -1px; margin-left: 0px; }

.btn-group-vertical > .btn:not(:last-child):not(.dropdown-toggle), .btn-gro=
up-vertical > .btn-group:not(:last-child) > .btn { border-bottom-right-radi=
us: 0px; border-bottom-left-radius: 0px; }

.btn-group-vertical > .btn:not(:first-child), .btn-group-vertical > .btn-gr=
oup:not(:first-child) > .btn { border-top-left-radius: 0px; border-top-righ=
t-radius: 0px; }

.btn-group-toggle > .btn, .btn-group-toggle > .btn-group > .btn { margin-bo=
ttom: 0px; }

.btn-group-toggle > .btn input[type=3D"radio"], .btn-group-toggle > .btn in=
put[type=3D"checkbox"], .btn-group-toggle > .btn-group > .btn input[type=3D=
"radio"], .btn-group-toggle > .btn-group > .btn input[type=3D"checkbox"] { =
position: absolute; clip: rect(0px, 0px, 0px, 0px); pointer-events: none; }

.input-group { position: relative; display: flex; flex-wrap: wrap; align-it=
ems: stretch; width: 100%; }

.input-group > .form-control, .input-group > .custom-select, .input-group >=
 .custom-file { position: relative; flex: 1 1 auto; width: 1%; margin-botto=
m: 0px; }

.input-group > .form-control:focus, .input-group > .custom-select:focus, .i=
nput-group > .custom-file:focus { z-index: 3; }

.input-group > .form-control + .form-control, .input-group > .form-control =
+ .custom-select, .input-group > .form-control + .custom-file, .input-group=
 > .custom-select + .form-control, .input-group > .custom-select + .custom-=
select, .input-group > .custom-select + .custom-file, .input-group > .custo=
m-file + .form-control, .input-group > .custom-file + .custom-select, .inpu=
t-group > .custom-file + .custom-file { margin-left: -1px; }

.input-group > .form-control:not(:last-child), .input-group > .custom-selec=
t:not(:last-child) { border-top-right-radius: 0px; border-bottom-right-radi=
us: 0px; }

.input-group > .form-control:not(:first-child), .input-group > .custom-sele=
ct:not(:first-child) { border-top-left-radius: 0px; border-bottom-left-radi=
us: 0px; }

.input-group > .custom-file { display: flex; align-items: center; }

.input-group > .custom-file:not(:last-child) .custom-file-label, .input-gro=
up > .custom-file:not(:last-child) .custom-file-label::before { border-top-=
right-radius: 0px; border-bottom-right-radius: 0px; }

.input-group > .custom-file:not(:first-child) .custom-file-label, .input-gr=
oup > .custom-file:not(:first-child) .custom-file-label::before { border-to=
p-left-radius: 0px; border-bottom-left-radius: 0px; }

.input-group-prepend, .input-group-append { display: flex; }

.input-group-prepend .btn, .input-group-append .btn { position: relative; z=
-index: 2; }

.input-group-prepend .btn + .btn, .input-group-prepend .btn + .input-group-=
text, .input-group-prepend .input-group-text + .input-group-text, .input-gr=
oup-prepend .input-group-text + .btn, .input-group-append .btn + .btn, .inp=
ut-group-append .btn + .input-group-text, .input-group-append .input-group-=
text + .input-group-text, .input-group-append .input-group-text + .btn { ma=
rgin-left: -1px; }

.input-group-prepend { margin-right: -1px; }

.input-group-append { margin-left: -1px; }

.input-group-text { display: flex; align-items: center; padding: 0.375rem 0=
.75rem; margin-bottom: 0px; font-size: 1rem; font-weight: 400; line-height:=
 1.5; color: rgb(73, 80, 87); text-align: center; white-space: nowrap; back=
ground-color: rgb(233, 236, 239); border: 1px solid rgb(206, 212, 218); bor=
der-radius: 0.25rem; }

.input-group-text input[type=3D"radio"], .input-group-text input[type=3D"ch=
eckbox"] { margin-top: 0px; }

.input-group > .input-group-prepend > .btn, .input-group > .input-group-pre=
pend > .input-group-text, .input-group > .input-group-append:not(:last-chil=
d) > .btn, .input-group > .input-group-append:not(:last-child) > .input-gro=
up-text, .input-group > .input-group-append:last-child > .btn:not(:last-chi=
ld):not(.dropdown-toggle), .input-group > .input-group-append:last-child > =
.input-group-text:not(:last-child) { border-top-right-radius: 0px; border-b=
ottom-right-radius: 0px; }

.input-group > .input-group-append > .btn, .input-group > .input-group-appe=
nd > .input-group-text, .input-group > .input-group-prepend:not(:first-chil=
d) > .btn, .input-group > .input-group-prepend:not(:first-child) > .input-g=
roup-text, .input-group > .input-group-prepend:first-child > .btn:not(:firs=
t-child), .input-group > .input-group-prepend:first-child > .input-group-te=
xt:not(:first-child) { border-top-left-radius: 0px; border-bottom-left-radi=
us: 0px; }

.custom-control { position: relative; display: block; min-height: 1.5rem; p=
adding-left: 1.5rem; }

.custom-control-inline { display: inline-flex; margin-right: 1rem; }

.custom-control-input { position: absolute; z-index: -1; opacity: 0; }

.custom-control-input:checked ~ .custom-control-label::before { color: rgb(=
255, 255, 255); background-color: rgb(0, 123, 255); }

.custom-control-input:focus ~ .custom-control-label::before { box-shadow: r=
gb(255, 255, 255) 0px 0px 0px 1px, rgba(0, 123, 255, 0.25) 0px 0px 0px 0.2r=
em; }

.custom-control-input:active ~ .custom-control-label::before { color: rgb(2=
55, 255, 255); background-color: rgb(179, 215, 255); }

.custom-control-input:disabled ~ .custom-control-label { color: rgb(108, 11=
7, 125); }

.custom-control-input:disabled ~ .custom-control-label::before { background=
-color: rgb(233, 236, 239); }

.custom-control-label { margin-bottom: 0px; }

.custom-control-label::before { position: absolute; top: 0.25rem; left: 0px=
; display: block; width: 1rem; height: 1rem; pointer-events: none; content:=
 ""; user-select: none; background-color: rgb(222, 226, 230); }

.custom-control-label::after { position: absolute; top: 0.25rem; left: 0px;=
 display: block; width: 1rem; height: 1rem; content: ""; background-repeat:=
 no-repeat; background-position: center center; background-size: 50% 50%; }

.custom-checkbox .custom-control-label::before { border-radius: 0.25rem; }

.custom-checkbox .custom-control-input:checked ~ .custom-control-label::bef=
ore { background-color: rgb(0, 123, 255); }

.custom-checkbox .custom-control-input:checked ~ .custom-control-label::aft=
er { background-image: url("data:image/svg+xml;charset=3Dutf8,%3Csvg xmlns=
=3D'http://www.w3.org/2000/svg' viewBox=3D'0 0 8 8'%3E%3Cpath fill=3D'%23ff=
f' d=3D'M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z'/%3E%3C=
/svg%3E"); }

.custom-checkbox .custom-control-input:indeterminate ~ .custom-control-labe=
l::before { background-color: rgb(0, 123, 255); }

.custom-checkbox .custom-control-input:indeterminate ~ .custom-control-labe=
l::after { background-image: url("data:image/svg+xml;charset=3Dutf8,%3Csvg =
xmlns=3D'http://www.w3.org/2000/svg' viewBox=3D'0 0 4 4'%3E%3Cpath stroke=
=3D'%23fff' d=3D'M0 2h4'/%3E%3C/svg%3E"); }

.custom-checkbox .custom-control-input:disabled:checked ~ .custom-control-l=
abel::before { background-color: rgba(0, 123, 255, 0.5); }

.custom-checkbox .custom-control-input:disabled:indeterminate ~ .custom-con=
trol-label::before { background-color: rgba(0, 123, 255, 0.5); }

.custom-radio .custom-control-label::before { border-radius: 50%; }

.custom-radio .custom-control-input:checked ~ .custom-control-label::before=
 { background-color: rgb(0, 123, 255); }

.custom-radio .custom-control-input:checked ~ .custom-control-label::after =
{ background-image: url("data:image/svg+xml;charset=3Dutf8,%3Csvg xmlns=3D'=
http://www.w3.org/2000/svg' viewBox=3D'-4 -4 8 8'%3E%3Ccircle r=3D'3' fill=
=3D'%23fff'/%3E%3C/svg%3E"); }

.custom-radio .custom-control-input:disabled:checked ~ .custom-control-labe=
l::before { background-color: rgba(0, 123, 255, 0.5); }

.custom-select { display: inline-block; width: 100%; height: calc(2.25rem +=
 2px); padding: 0.375rem 1.75rem 0.375rem 0.75rem; line-height: 1.5; color:=
 rgb(73, 80, 87); vertical-align: middle; background: url("data:image/svg+x=
ml;charset=3Dutf8,%3Csvg xmlns=3D'http://www.w3.org/2000/svg' viewBox=3D'0 =
0 4 5'%3E%3Cpath fill=3D'%23343a40' d=3D'M2 0L0 2h4zm0 5L0 3h4z'/%3E%3C/svg=
%3E") right 0.75rem center / 8px 10px no-repeat rgb(255, 255, 255); border:=
 1px solid rgb(206, 212, 218); border-radius: 0.25rem; appearance: none; }

.custom-select:focus { border-color: rgb(128, 189, 255); outline: 0px; box-=
shadow: rgba(0, 0, 0, 0.075) 0px 1px 2px inset, rgba(128, 189, 255, 0.5) 0p=
x 0px 5px; }

.custom-select[multiple], .custom-select[size]:not([size=3D"1"]) { height: =
auto; padding-right: 0.75rem; background-image: none; }

.custom-select:disabled { color: rgb(108, 117, 125); background-color: rgb(=
233, 236, 239); }

.custom-select-sm { height: calc(1.8125rem + 2px); padding-top: 0.375rem; p=
adding-bottom: 0.375rem; font-size: 75%; }

.custom-select-lg { height: calc(2.875rem + 2px); padding-top: 0.375rem; pa=
dding-bottom: 0.375rem; font-size: 125%; }

.custom-file { position: relative; display: inline-block; width: 100%; heig=
ht: calc(2.25rem + 2px); margin-bottom: 0px; }

.custom-file-input { position: relative; z-index: 2; width: 100%; height: c=
alc(2.25rem + 2px); margin: 0px; opacity: 0; }

.custom-file-input:focus ~ .custom-file-control { border-color: rgb(128, 18=
9, 255); box-shadow: rgba(0, 123, 255, 0.25) 0px 0px 0px 0.2rem; }

.custom-file-input:focus ~ .custom-file-control::before { border-color: rgb=
(128, 189, 255); }

.custom-file-input:lang(en) ~ .custom-file-label::after { content: "Browse"=
; }

.custom-file-label { position: absolute; top: 0px; right: 0px; left: 0px; z=
-index: 1; height: calc(2.25rem + 2px); padding: 0.375rem 0.75rem; line-hei=
ght: 1.5; color: rgb(73, 80, 87); background-color: rgb(255, 255, 255); bor=
der: 1px solid rgb(206, 212, 218); border-radius: 0.25rem; }

.custom-file-label::after { position: absolute; top: 0px; right: 0px; botto=
m: 0px; z-index: 3; display: block; height: calc((2.25rem + 2px) - 2px); pa=
dding: 0.375rem 0.75rem; line-height: 1.5; color: rgb(73, 80, 87); content:=
 "Browse"; background-color: rgb(233, 236, 239); border-left: 1px solid rgb=
(206, 212, 218); border-radius: 0px 0.25rem 0.25rem 0px; }

.nav { display: flex; flex-wrap: wrap; padding-left: 0px; margin-bottom: 0p=
x; list-style: none; }

.nav-link { display: block; padding: 0.5rem 1rem; }

.nav-link:hover, .nav-link:focus { text-decoration: none; }

.nav-link.disabled { color: rgb(108, 117, 125); }

.nav-tabs { border-bottom: 1px solid rgb(222, 226, 230); }

.nav-tabs .nav-item { margin-bottom: -1px; }

.nav-tabs .nav-link { border: 1px solid transparent; border-top-left-radius=
: 0.25rem; border-top-right-radius: 0.25rem; }

.nav-tabs .nav-link:hover, .nav-tabs .nav-link:focus { border-color: rgb(23=
3, 236, 239) rgb(233, 236, 239) rgb(222, 226, 230); }

.nav-tabs .nav-link.disabled { color: rgb(108, 117, 125); background-color:=
 transparent; border-color: transparent; }

.nav-tabs .nav-link.active, .nav-tabs .nav-item.show .nav-link { color: rgb=
(73, 80, 87); background-color: rgb(255, 255, 255); border-color: rgb(222, =
226, 230) rgb(222, 226, 230) rgb(255, 255, 255); }

.nav-tabs .dropdown-menu { margin-top: -1px; border-top-left-radius: 0px; b=
order-top-right-radius: 0px; }

.nav-pills .nav-link { border-radius: 0.25rem; }

.nav-pills .nav-link.active, .nav-pills .show > .nav-link { color: rgb(255,=
 255, 255); background-color: rgb(0, 123, 255); }

.nav-fill .nav-item { flex: 1 1 auto; text-align: center; }

.nav-justified .nav-item { flex-basis: 0px; flex-grow: 1; text-align: cente=
r; }

.tab-content > .tab-pane { display: none; }

.tab-content > .active { display: block; }

.navbar { position: relative; display: flex; flex-wrap: wrap; align-items: =
center; justify-content: space-between; padding: 0.5rem 1rem; }

.navbar > .container, .navbar > .container-fluid { display: flex; flex-wrap=
: wrap; align-items: center; justify-content: space-between; }

.navbar-brand { display: inline-block; padding-top: 0.3125rem; padding-bott=
om: 0.3125rem; margin-right: 1rem; font-size: 1.25rem; line-height: inherit=
; white-space: nowrap; }

.navbar-brand:hover, .navbar-brand:focus { text-decoration: none; }

.navbar-nav { display: flex; flex-direction: column; padding-left: 0px; mar=
gin-bottom: 0px; list-style: none; }

.navbar-nav .nav-link { padding-right: 0px; padding-left: 0px; }

.navbar-nav .dropdown-menu { position: static; float: none; }

.navbar-text { display: inline-block; padding-top: 0.5rem; padding-bottom: =
0.5rem; }

.navbar-collapse { flex-basis: 100%; flex-grow: 1; align-items: center; }

.navbar-toggler { padding: 0.25rem 0.75rem; font-size: 1.25rem; line-height=
: 1; background-color: transparent; border: 1px solid transparent; border-r=
adius: 0.25rem; }

.navbar-toggler:hover, .navbar-toggler:focus { text-decoration: none; }

.navbar-toggler:not(:disabled):not(.disabled) { cursor: pointer; }

.navbar-toggler-icon { display: inline-block; width: 1.5em; height: 1.5em; =
vertical-align: middle; content: ""; background: center center / 100% 100% =
no-repeat; }

@media (max-width: 575.98px) {
  .navbar-expand-sm > .container, .navbar-expand-sm > .container-fluid { pa=
dding-right: 0px; padding-left: 0px; }
}

@media (min-width: 576px) {
  .navbar-expand-sm { flex-flow: row nowrap; justify-content: flex-start; }
  .navbar-expand-sm .navbar-nav { flex-direction: row; }
  .navbar-expand-sm .navbar-nav .dropdown-menu { position: absolute; }
  .navbar-expand-sm .navbar-nav .dropdown-menu-right { right: 0px; left: au=
to; }
  .navbar-expand-sm .navbar-nav .nav-link { padding-right: 0.5rem; padding-=
left: 0.5rem; }
  .navbar-expand-sm > .container, .navbar-expand-sm > .container-fluid { fl=
ex-wrap: nowrap; }
  .navbar-expand-sm .navbar-collapse { flex-basis: auto; display: flex !imp=
ortant; }
  .navbar-expand-sm .navbar-toggler { display: none; }
  .navbar-expand-sm .dropup .dropdown-menu { top: auto; bottom: 100%; }
}

@media (max-width: 767.98px) {
  .navbar-expand-md > .container, .navbar-expand-md > .container-fluid { pa=
dding-right: 0px; padding-left: 0px; }
}

@media (min-width: 768px) {
  .navbar-expand-md { flex-flow: row nowrap; justify-content: flex-start; }
  .navbar-expand-md .navbar-nav { flex-direction: row; }
  .navbar-expand-md .navbar-nav .dropdown-menu { position: absolute; }
  .navbar-expand-md .navbar-nav .dropdown-menu-right { right: 0px; left: au=
to; }
  .navbar-expand-md .navbar-nav .nav-link { padding-right: 0.5rem; padding-=
left: 0.5rem; }
  .navbar-expand-md > .container, .navbar-expand-md > .container-fluid { fl=
ex-wrap: nowrap; }
  .navbar-expand-md .navbar-collapse { flex-basis: auto; display: flex !imp=
ortant; }
  .navbar-expand-md .navbar-toggler { display: none; }
  .navbar-expand-md .dropup .dropdown-menu { top: auto; bottom: 100%; }
}

@media (max-width: 991.98px) {
  .navbar-expand-lg > .container, .navbar-expand-lg > .container-fluid { pa=
dding-right: 0px; padding-left: 0px; }
}

@media (min-width: 992px) {
  .navbar-expand-lg { flex-flow: row nowrap; justify-content: flex-start; }
  .navbar-expand-lg .navbar-nav { flex-direction: row; }
  .navbar-expand-lg .navbar-nav .dropdown-menu { position: absolute; }
  .navbar-expand-lg .navbar-nav .dropdown-menu-right { right: 0px; left: au=
to; }
  .navbar-expand-lg .navbar-nav .nav-link { padding-right: 0.5rem; padding-=
left: 0.5rem; }
  .navbar-expand-lg > .container, .navbar-expand-lg > .container-fluid { fl=
ex-wrap: nowrap; }
  .navbar-expand-lg .navbar-collapse { flex-basis: auto; display: flex !imp=
ortant; }
  .navbar-expand-lg .navbar-toggler { display: none; }
  .navbar-expand-lg .dropup .dropdown-menu { top: auto; bottom: 100%; }
}

@media (max-width: 1199.98px) {
  .navbar-expand-xl > .container, .navbar-expand-xl > .container-fluid { pa=
dding-right: 0px; padding-left: 0px; }
}

@media (min-width: 1200px) {
  .navbar-expand-xl { flex-flow: row nowrap; justify-content: flex-start; }
  .navbar-expand-xl .navbar-nav { flex-direction: row; }
  .navbar-expand-xl .navbar-nav .dropdown-menu { position: absolute; }
  .navbar-expand-xl .navbar-nav .dropdown-menu-right { right: 0px; left: au=
to; }
  .navbar-expand-xl .navbar-nav .nav-link { padding-right: 0.5rem; padding-=
left: 0.5rem; }
  .navbar-expand-xl > .container, .navbar-expand-xl > .container-fluid { fl=
ex-wrap: nowrap; }
  .navbar-expand-xl .navbar-collapse { flex-basis: auto; display: flex !imp=
ortant; }
  .navbar-expand-xl .navbar-toggler { display: none; }
  .navbar-expand-xl .dropup .dropdown-menu { top: auto; bottom: 100%; }
}

.navbar-expand { flex-flow: row nowrap; justify-content: flex-start; }

.navbar-expand > .container, .navbar-expand > .container-fluid { padding-ri=
ght: 0px; padding-left: 0px; }

.navbar-expand .navbar-nav { flex-direction: row; }

.navbar-expand .navbar-nav .dropdown-menu { position: absolute; }

.navbar-expand .navbar-nav .dropdown-menu-right { right: 0px; left: auto; }

.navbar-expand .navbar-nav .nav-link { padding-right: 0.5rem; padding-left:=
 0.5rem; }

.navbar-expand > .container, .navbar-expand > .container-fluid { flex-wrap:=
 nowrap; }

.navbar-expand .navbar-collapse { flex-basis: auto; display: flex !importan=
t; }

.navbar-expand .navbar-toggler { display: none; }

.navbar-expand .dropup .dropdown-menu { top: auto; bottom: 100%; }

.navbar-light .navbar-brand { color: rgba(0, 0, 0, 0.9); }

.navbar-light .navbar-brand:hover, .navbar-light .navbar-brand:focus { colo=
r: rgba(0, 0, 0, 0.9); }

.navbar-light .navbar-nav .nav-link { color: rgba(0, 0, 0, 0.5); }

.navbar-light .navbar-nav .nav-link:hover, .navbar-light .navbar-nav .nav-l=
ink:focus { color: rgba(0, 0, 0, 0.7); }

.navbar-light .navbar-nav .nav-link.disabled { color: rgba(0, 0, 0, 0.3); }

.navbar-light .navbar-nav .show > .nav-link, .navbar-light .navbar-nav .act=
ive > .nav-link, .navbar-light .navbar-nav .nav-link.show, .navbar-light .n=
avbar-nav .nav-link.active { color: rgba(0, 0, 0, 0.9); }

.navbar-light .navbar-toggler { color: rgba(0, 0, 0, 0.5); border-color: rg=
ba(0, 0, 0, 0.1); }

.navbar-light .navbar-toggler-icon { background-image: url("data:image/svg+=
xml;charset=3Dutf8,%3Csvg viewBox=3D'0 0 30 30' xmlns=3D'http://www.w3.org/=
2000/svg'%3E%3Cpath stroke=3D'rgba(0, 0, 0, 0.5)' stroke-width=3D'2' stroke=
-linecap=3D'round' stroke-miterlimit=3D'10' d=3D'M4 7h22M4 15h22M4 23h22'/%=
3E%3C/svg%3E"); }

.navbar-light .navbar-text { color: rgba(0, 0, 0, 0.5); }

.navbar-light .navbar-text a { color: rgba(0, 0, 0, 0.9); }

.navbar-light .navbar-text a:hover, .navbar-light .navbar-text a:focus { co=
lor: rgba(0, 0, 0, 0.9); }

.navbar-dark .navbar-brand { color: rgb(255, 255, 255); }

.navbar-dark .navbar-brand:hover, .navbar-dark .navbar-brand:focus { color:=
 rgb(255, 255, 255); }

.navbar-dark .navbar-nav .nav-link { color: rgba(255, 255, 255, 0.5); }

.navbar-dark .navbar-nav .nav-link:hover, .navbar-dark .navbar-nav .nav-lin=
k:focus { color: rgba(255, 255, 255, 0.75); }

.navbar-dark .navbar-nav .nav-link.disabled { color: rgba(255, 255, 255, 0.=
25); }

.navbar-dark .navbar-nav .show > .nav-link, .navbar-dark .navbar-nav .activ=
e > .nav-link, .navbar-dark .navbar-nav .nav-link.show, .navbar-dark .navba=
r-nav .nav-link.active { color: rgb(255, 255, 255); }

.navbar-dark .navbar-toggler { color: rgba(255, 255, 255, 0.5); border-colo=
r: rgba(255, 255, 255, 0.1); }

.navbar-dark .navbar-toggler-icon { background-image: url("data:image/svg+x=
ml;charset=3Dutf8,%3Csvg viewBox=3D'0 0 30 30' xmlns=3D'http://www.w3.org/2=
000/svg'%3E%3Cpath stroke=3D'rgba(255, 255, 255, 0.5)' stroke-width=3D'2' s=
troke-linecap=3D'round' stroke-miterlimit=3D'10' d=3D'M4 7h22M4 15h22M4 23h=
22'/%3E%3C/svg%3E"); }

.navbar-dark .navbar-text { color: rgba(255, 255, 255, 0.5); }

.navbar-dark .navbar-text a { color: rgb(255, 255, 255); }

.navbar-dark .navbar-text a:hover, .navbar-dark .navbar-text a:focus { colo=
r: rgb(255, 255, 255); }

.card { position: relative; display: flex; flex-direction: column; min-widt=
h: 0px; overflow-wrap: break-word; background-color: rgb(255, 255, 255); ba=
ckground-clip: border-box; border: 1px solid rgba(0, 0, 0, 0.125); border-r=
adius: 0.25rem; }

.card > hr { margin-right: 0px; margin-left: 0px; }

.card > .list-group:first-child .list-group-item:first-child { border-top-l=
eft-radius: 0.25rem; border-top-right-radius: 0.25rem; }

.card > .list-group:last-child .list-group-item:last-child { border-bottom-=
right-radius: 0.25rem; border-bottom-left-radius: 0.25rem; }

.card-body { flex: 1 1 auto; padding: 1.25rem; }

.card-title { margin-bottom: 0.75rem; }

.card-subtitle { margin-top: -0.375rem; margin-bottom: 0px; }

.card-text:last-child { margin-bottom: 0px; }

.card-link:hover { text-decoration: none; }

.card-link + .card-link { margin-left: 1.25rem; }

.card-header { padding: 0.75rem 1.25rem; margin-bottom: 0px; background-col=
or: rgba(0, 0, 0, 0.03); border-bottom: 1px solid rgba(0, 0, 0, 0.125); }

.card-header:first-child { border-radius: calc(0.25rem - 1px) calc(0.25rem =
- 1px) 0px 0px; }

.card-header + .list-group .list-group-item:first-child { border-top: 0px; =
}

.card-footer { padding: 0.75rem 1.25rem; background-color: rgba(0, 0, 0, 0.=
03); border-top: 1px solid rgba(0, 0, 0, 0.125); }

.card-footer:last-child { border-radius: 0px 0px calc(0.25rem - 1px) calc(0=
.25rem - 1px); }

.card-header-tabs { margin-right: -0.625rem; margin-bottom: -0.75rem; margi=
n-left: -0.625rem; border-bottom: 0px; }

.card-header-pills { margin-right: -0.625rem; margin-left: -0.625rem; }

.card-img-overlay { position: absolute; inset: 0px; padding: 1.25rem; }

.card-img { width: 100%; border-radius: calc(0.25rem - 1px); }

.card-img-top { width: 100%; border-top-left-radius: calc(0.25rem - 1px); b=
order-top-right-radius: calc(0.25rem - 1px); }

.card-img-bottom { width: 100%; border-bottom-right-radius: calc(0.25rem - =
1px); border-bottom-left-radius: calc(0.25rem - 1px); }

.card-deck { display: flex; flex-direction: column; }

.card-deck .card { margin-bottom: 15px; }

@media (min-width: 576px) {
  .card-deck { flex-flow: row wrap; margin-right: -15px; margin-left: -15px=
; }
  .card-deck .card { display: flex; flex: 1 0 0%; flex-direction: column; m=
argin-right: 15px; margin-bottom: 0px; margin-left: 15px; }
}

.card-group { display: flex; flex-direction: column; }

.card-group > .card { margin-bottom: 15px; }

@media (min-width: 576px) {
  .card-group { flex-flow: row wrap; }
  .card-group > .card { flex: 1 0 0%; margin-bottom: 0px; }
  .card-group > .card + .card { margin-left: 0px; border-left: 0px; }
  .card-group > .card:first-child { border-top-right-radius: 0px; border-bo=
ttom-right-radius: 0px; }
  .card-group > .card:first-child .card-img-top, .card-group > .card:first-=
child .card-header { border-top-right-radius: 0px; }
  .card-group > .card:first-child .card-img-bottom, .card-group > .card:fir=
st-child .card-footer { border-bottom-right-radius: 0px; }
  .card-group > .card:last-child { border-top-left-radius: 0px; border-bott=
om-left-radius: 0px; }
  .card-group > .card:last-child .card-img-top, .card-group > .card:last-ch=
ild .card-header { border-top-left-radius: 0px; }
  .card-group > .card:last-child .card-img-bottom, .card-group > .card:last=
-child .card-footer { border-bottom-left-radius: 0px; }
  .card-group > .card:only-child { border-radius: 0.25rem; }
  .card-group > .card:only-child .card-img-top, .card-group > .card:only-ch=
ild .card-header { border-top-left-radius: 0.25rem; border-top-right-radius=
: 0.25rem; }
  .card-group > .card:only-child .card-img-bottom, .card-group > .card:only=
-child .card-footer { border-bottom-right-radius: 0.25rem; border-bottom-le=
ft-radius: 0.25rem; }
  .card-group > .card:not(:first-child):not(:last-child):not(:only-child) {=
 border-radius: 0px; }
  .card-group > .card:not(:first-child):not(:last-child):not(:only-child) .=
card-img-top, .card-group > .card:not(:first-child):not(:last-child):not(:o=
nly-child) .card-img-bottom, .card-group > .card:not(:first-child):not(:las=
t-child):not(:only-child) .card-header, .card-group > .card:not(:first-chil=
d):not(:last-child):not(:only-child) .card-footer { border-radius: 0px; }
}

.card-columns .card { margin-bottom: 0.75rem; }

@media (min-width: 576px) {
  .card-columns { column-count: 3; column-gap: 1.25rem; }
  .card-columns .card { display: inline-block; width: 100%; }
}

.breadcrumb { display: flex; flex-wrap: wrap; padding: 0.75rem 1rem; margin=
-bottom: 1rem; list-style: none; background-color: rgb(233, 236, 239); bord=
er-radius: 0.25rem; }

.breadcrumb-item + .breadcrumb-item::before { display: inline-block; paddin=
g-right: 0.5rem; padding-left: 0.5rem; color: rgb(108, 117, 125); content: =
"/"; }

.breadcrumb-item + .breadcrumb-item:hover::before { text-decoration: underl=
ine; }

.breadcrumb-item + .breadcrumb-item:hover::before { text-decoration: none; =
}

.breadcrumb-item.active { color: rgb(108, 117, 125); }

.pagination { display: flex; padding-left: 0px; list-style: none; border-ra=
dius: 0.25rem; }

.page-link { position: relative; display: block; padding: 0.5rem 0.75rem; m=
argin-left: -1px; line-height: 1.25; color: rgb(0, 123, 255); background-co=
lor: rgb(255, 255, 255); border: 1px solid rgb(222, 226, 230); }

.page-link:hover { color: rgb(0, 86, 179); text-decoration: none; backgroun=
d-color: rgb(233, 236, 239); border-color: rgb(222, 226, 230); }

.page-link:focus { z-index: 2; outline: 0px; box-shadow: rgba(0, 123, 255, =
0.25) 0px 0px 0px 0.2rem; }

.page-link:not(:disabled):not(.disabled) { cursor: pointer; }

.page-item:first-child .page-link { margin-left: 0px; border-top-left-radiu=
s: 0.25rem; border-bottom-left-radius: 0.25rem; }

.page-item:last-child .page-link { border-top-right-radius: 0.25rem; border=
-bottom-right-radius: 0.25rem; }

.page-item.active .page-link { z-index: 1; color: rgb(255, 255, 255); backg=
round-color: rgb(0, 123, 255); border-color: rgb(0, 123, 255); }

.page-item.disabled .page-link { color: rgb(108, 117, 125); pointer-events:=
 none; cursor: auto; background-color: rgb(255, 255, 255); border-color: rg=
b(222, 226, 230); }

.pagination-lg .page-link { padding: 0.75rem 1.5rem; font-size: 1.25rem; li=
ne-height: 1.5; }

.pagination-lg .page-item:first-child .page-link { border-top-left-radius: =
0.3rem; border-bottom-left-radius: 0.3rem; }

.pagination-lg .page-item:last-child .page-link { border-top-right-radius: =
0.3rem; border-bottom-right-radius: 0.3rem; }

.pagination-sm .page-link { padding: 0.25rem 0.5rem; font-size: 0.875rem; l=
ine-height: 1.5; }

.pagination-sm .page-item:first-child .page-link { border-top-left-radius: =
0.2rem; border-bottom-left-radius: 0.2rem; }

.pagination-sm .page-item:last-child .page-link { border-top-right-radius: =
0.2rem; border-bottom-right-radius: 0.2rem; }

.badge { display: inline-block; padding: 0.25em 0.4em; font-size: 75%; font=
-weight: 700; line-height: 1; text-align: center; white-space: nowrap; vert=
ical-align: baseline; border-radius: 0.25rem; }

.badge:empty { display: none; }

.btn .badge { position: relative; top: -1px; }

.badge-pill { padding-right: 0.6em; padding-left: 0.6em; border-radius: 10r=
em; }

.badge-primary { color: rgb(255, 255, 255); background-color: rgb(0, 123, 2=
55); }

.badge-primary[href]:hover, .badge-primary[href]:focus { color: rgb(255, 25=
5, 255); text-decoration: none; background-color: rgb(0, 98, 204); }

.badge-secondary { color: rgb(255, 255, 255); background-color: rgb(108, 11=
7, 125); }

.badge-secondary[href]:hover, .badge-secondary[href]:focus { color: rgb(255=
, 255, 255); text-decoration: none; background-color: rgb(84, 91, 98); }

.badge-success { color: rgb(255, 255, 255); background-color: rgb(40, 167, =
69); }

.badge-success[href]:hover, .badge-success[href]:focus { color: rgb(255, 25=
5, 255); text-decoration: none; background-color: rgb(30, 126, 52); }

.badge-info { color: rgb(255, 255, 255); background-color: rgb(23, 162, 184=
); }

.badge-info[href]:hover, .badge-info[href]:focus { color: rgb(255, 255, 255=
); text-decoration: none; background-color: rgb(17, 122, 139); }

.badge-warning { color: rgb(33, 37, 41); background-color: rgb(255, 193, 7)=
; }

.badge-warning[href]:hover, .badge-warning[href]:focus { color: rgb(33, 37,=
 41); text-decoration: none; background-color: rgb(211, 158, 0); }

.badge-danger { color: rgb(255, 255, 255); background-color: rgb(220, 53, 6=
9); }

.badge-danger[href]:hover, .badge-danger[href]:focus { color: rgb(255, 255,=
 255); text-decoration: none; background-color: rgb(189, 33, 48); }

.badge-light { color: rgb(33, 37, 41); background-color: rgb(248, 249, 250)=
; }

.badge-light[href]:hover, .badge-light[href]:focus { color: rgb(33, 37, 41)=
; text-decoration: none; background-color: rgb(218, 224, 229); }

.badge-dark { color: rgb(255, 255, 255); background-color: rgb(52, 58, 64);=
 }

.badge-dark[href]:hover, .badge-dark[href]:focus { color: rgb(255, 255, 255=
); text-decoration: none; background-color: rgb(29, 33, 36); }

.jumbotron { padding: 2rem 1rem; margin-bottom: 2rem; background-color: rgb=
(233, 236, 239); border-radius: 0.3rem; }

@media (min-width: 576px) {
  .jumbotron { padding: 4rem 2rem; }
}

.jumbotron-fluid { padding-right: 0px; padding-left: 0px; border-radius: 0p=
x; }

.alert { position: relative; padding: 0.75rem 1.25rem; margin-bottom: 1rem;=
 border: 1px solid transparent; border-radius: 0.25rem; }

.alert-heading { color: inherit; }

.alert-link { font-weight: 700; }

.alert-dismissible { padding-right: 4rem; }

.alert-dismissible .close { position: absolute; top: 0px; right: 0px; paddi=
ng: 0.75rem 1.25rem; color: inherit; }

.alert-primary { color: rgb(0, 64, 133); background-color: rgb(204, 229, 25=
5); border-color: rgb(184, 218, 255); }

.alert-primary hr { border-top-color: rgb(159, 205, 255); }

.alert-primary .alert-link { color: rgb(0, 39, 82); }

.alert-secondary { color: rgb(56, 61, 65); background-color: rgb(226, 227, =
229); border-color: rgb(214, 216, 219); }

.alert-secondary hr { border-top-color: rgb(200, 203, 207); }

.alert-secondary .alert-link { color: rgb(32, 35, 38); }

.alert-success { color: rgb(21, 87, 36); background-color: rgb(212, 237, 21=
8); border-color: rgb(195, 230, 203); }

.alert-success hr { border-top-color: rgb(177, 223, 187); }

.alert-success .alert-link { color: rgb(11, 46, 19); }

.alert-info { color: rgb(12, 84, 96); background-color: rgb(209, 236, 241);=
 border-color: rgb(190, 229, 235); }

.alert-info hr { border-top-color: rgb(171, 221, 229); }

.alert-info .alert-link { color: rgb(6, 44, 51); }

.alert-warning { color: rgb(133, 100, 4); background-color: rgb(255, 243, 2=
05); border-color: rgb(255, 238, 186); }

.alert-warning hr { border-top-color: rgb(255, 232, 161); }

.alert-warning .alert-link { color: rgb(83, 63, 3); }

.alert-danger { color: rgb(114, 28, 36); background-color: rgb(248, 215, 21=
8); border-color: rgb(245, 198, 203); }

.alert-danger hr { border-top-color: rgb(241, 176, 183); }

.alert-danger .alert-link { color: rgb(73, 18, 23); }

.alert-light { color: rgb(129, 129, 130); background-color: rgb(254, 254, 2=
54); border-color: rgb(253, 253, 254); }

.alert-light hr { border-top-color: rgb(236, 236, 246); }

.alert-light .alert-link { color: rgb(104, 104, 104); }

.alert-dark { color: rgb(27, 30, 33); background-color: rgb(214, 216, 217);=
 border-color: rgb(198, 200, 202); }

.alert-dark hr { border-top-color: rgb(185, 187, 190); }

.alert-dark .alert-link { color: rgb(4, 5, 5); }

@-webkit-keyframes progress-bar-stripes {=20
  0% { background-position: 1rem 0px; }
  100% { background-position: 0px 0px; }
}

@keyframes progress-bar-stripes {=20
  0% { background-position: 1rem 0px; }
  100% { background-position: 0px 0px; }
}

.progress { display: flex; height: 1rem; overflow: hidden; font-size: 0.75r=
em; background-color: rgb(233, 236, 239); border-radius: 0.25rem; }

.progress-bar { display: flex; flex-direction: column; justify-content: cen=
ter; color: rgb(255, 255, 255); text-align: center; background-color: rgb(0=
, 123, 255); transition: width 0.6s ease 0s; }

.progress-bar-striped { background-image: linear-gradient(45deg, rgba(255, =
255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, =
0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%, transparent); ba=
ckground-size: 1rem 1rem; }

.progress-bar-animated { animation: 1s linear 0s infinite normal none runni=
ng progress-bar-stripes; }

.media { display: flex; align-items: flex-start; }

.media-body { flex: 1 1 0%; }

.list-group { display: flex; flex-direction: column; padding-left: 0px; mar=
gin-bottom: 0px; }

.list-group-item-action { width: 100%; color: rgb(73, 80, 87); text-align: =
inherit; }

.list-group-item-action:hover, .list-group-item-action:focus { color: rgb(7=
3, 80, 87); text-decoration: none; background-color: rgb(248, 249, 250); }

.list-group-item-action:active { color: rgb(33, 37, 41); background-color: =
rgb(233, 236, 239); }

.list-group-item { position: relative; display: block; padding: 0.75rem 1.2=
5rem; margin-bottom: -1px; background-color: rgb(255, 255, 255); border: 1p=
x solid rgba(0, 0, 0, 0.125); }

.list-group-item:first-child { border-top-left-radius: 0.25rem; border-top-=
right-radius: 0.25rem; }

.list-group-item:last-child { margin-bottom: 0px; border-bottom-right-radiu=
s: 0.25rem; border-bottom-left-radius: 0.25rem; }

.list-group-item:hover, .list-group-item:focus { z-index: 1; text-decoratio=
n: none; }

.list-group-item.disabled, .list-group-item:disabled { color: rgb(108, 117,=
 125); background-color: rgb(255, 255, 255); }

.list-group-item.active { z-index: 2; color: rgb(255, 255, 255); background=
-color: rgb(0, 123, 255); border-color: rgb(0, 123, 255); }

.list-group-flush .list-group-item { border-right: 0px; border-left: 0px; b=
order-radius: 0px; }

.list-group-flush:first-child .list-group-item:first-child { border-top: 0p=
x; }

.list-group-flush:last-child .list-group-item:last-child { border-bottom: 0=
px; }

.list-group-item-primary { color: rgb(0, 64, 133); background-color: rgb(18=
4, 218, 255); }

.list-group-item-primary.list-group-item-action:hover, .list-group-item-pri=
mary.list-group-item-action:focus { color: rgb(0, 64, 133); background-colo=
r: rgb(159, 205, 255); }

.list-group-item-primary.list-group-item-action.active { color: rgb(255, 25=
5, 255); background-color: rgb(0, 64, 133); border-color: rgb(0, 64, 133); =
}

.list-group-item-secondary { color: rgb(56, 61, 65); background-color: rgb(=
214, 216, 219); }

.list-group-item-secondary.list-group-item-action:hover, .list-group-item-s=
econdary.list-group-item-action:focus { color: rgb(56, 61, 65); background-=
color: rgb(200, 203, 207); }

.list-group-item-secondary.list-group-item-action.active { color: rgb(255, =
255, 255); background-color: rgb(56, 61, 65); border-color: rgb(56, 61, 65)=
; }

.list-group-item-success { color: rgb(21, 87, 36); background-color: rgb(19=
5, 230, 203); }

.list-group-item-success.list-group-item-action:hover, .list-group-item-suc=
cess.list-group-item-action:focus { color: rgb(21, 87, 36); background-colo=
r: rgb(177, 223, 187); }

.list-group-item-success.list-group-item-action.active { color: rgb(255, 25=
5, 255); background-color: rgb(21, 87, 36); border-color: rgb(21, 87, 36); =
}

.list-group-item-info { color: rgb(12, 84, 96); background-color: rgb(190, =
229, 235); }

.list-group-item-info.list-group-item-action:hover, .list-group-item-info.l=
ist-group-item-action:focus { color: rgb(12, 84, 96); background-color: rgb=
(171, 221, 229); }

.list-group-item-info.list-group-item-action.active { color: rgb(255, 255, =
255); background-color: rgb(12, 84, 96); border-color: rgb(12, 84, 96); }

.list-group-item-warning { color: rgb(133, 100, 4); background-color: rgb(2=
55, 238, 186); }

.list-group-item-warning.list-group-item-action:hover, .list-group-item-war=
ning.list-group-item-action:focus { color: rgb(133, 100, 4); background-col=
or: rgb(255, 232, 161); }

.list-group-item-warning.list-group-item-action.active { color: rgb(255, 25=
5, 255); background-color: rgb(133, 100, 4); border-color: rgb(133, 100, 4)=
; }

.list-group-item-danger { color: rgb(114, 28, 36); background-color: rgb(24=
5, 198, 203); }

.list-group-item-danger.list-group-item-action:hover, .list-group-item-dang=
er.list-group-item-action:focus { color: rgb(114, 28, 36); background-color=
: rgb(241, 176, 183); }

.list-group-item-danger.list-group-item-action.active { color: rgb(255, 255=
, 255); background-color: rgb(114, 28, 36); border-color: rgb(114, 28, 36);=
 }

.list-group-item-light { color: rgb(129, 129, 130); background-color: rgb(2=
53, 253, 254); }

.list-group-item-light.list-group-item-action:hover, .list-group-item-light=
.list-group-item-action:focus { color: rgb(129, 129, 130); background-color=
: rgb(236, 236, 246); }

.list-group-item-light.list-group-item-action.active { color: rgb(255, 255,=
 255); background-color: rgb(129, 129, 130); border-color: rgb(129, 129, 13=
0); }

.list-group-item-dark { color: rgb(27, 30, 33); background-color: rgb(198, =
200, 202); }

.list-group-item-dark.list-group-item-action:hover, .list-group-item-dark.l=
ist-group-item-action:focus { color: rgb(27, 30, 33); background-color: rgb=
(185, 187, 190); }

.list-group-item-dark.list-group-item-action.active { color: rgb(255, 255, =
255); background-color: rgb(27, 30, 33); border-color: rgb(27, 30, 33); }

.close { float: right; font-size: 1.5rem; font-weight: 700; line-height: 1;=
 color: rgb(0, 0, 0); text-shadow: rgb(255, 255, 255) 0px 1px 0px; opacity:=
 0.5; }

.close:hover, .close:focus { color: rgb(0, 0, 0); text-decoration: none; op=
acity: 0.75; }

.close:not(:disabled):not(.disabled) { cursor: pointer; }

button.close { padding: 0px; background-color: transparent; border: 0px; ap=
pearance: none; }

.modal-open { overflow: hidden; }

.modal { position: fixed; inset: 0px; z-index: 1050; display: none; overflo=
w: hidden; outline: 0px; }

.modal-open .modal { overflow: hidden auto; }

.modal-dialog { position: relative; width: auto; margin: 0.5rem; pointer-ev=
ents: none; }

.modal.fade .modal-dialog { transition: transform 0.3s ease-out 0s; transfo=
rm: translate(0px, -25%); }

.modal.show .modal-dialog { transform: translate(0px, 0px); }

.modal-dialog-centered { display: flex; align-items: center; min-height: ca=
lc(100% - 1rem); }

.modal-content { position: relative; display: flex; flex-direction: column;=
 width: 100%; pointer-events: auto; background-color: rgb(255, 255, 255); b=
ackground-clip: padding-box; border: 1px solid rgba(0, 0, 0, 0.2); border-r=
adius: 0.3rem; outline: 0px; }

.modal-backdrop { position: fixed; inset: 0px; z-index: 1040; background-co=
lor: rgb(0, 0, 0); }

.modal-backdrop.fade { opacity: 0; }

.modal-backdrop.show { opacity: 0.5; }

.modal-header { display: flex; align-items: flex-start; justify-content: sp=
ace-between; padding: 1rem; border-bottom: 1px solid rgb(233, 236, 239); bo=
rder-top-left-radius: 0.3rem; border-top-right-radius: 0.3rem; }

.modal-header .close { padding: 1rem; margin: -1rem -1rem -1rem auto; }

.modal-title { margin-bottom: 0px; line-height: 1.5; }

.modal-body { position: relative; flex: 1 1 auto; padding: 1rem; }

.modal-footer { display: flex; align-items: center; justify-content: flex-e=
nd; padding: 1rem; border-top: 1px solid rgb(233, 236, 239); }

.modal-footer > :not(:first-child) { margin-left: 0.25rem; }

.modal-footer > :not(:last-child) { margin-right: 0.25rem; }

.modal-scrollbar-measure { position: absolute; top: -9999px; width: 50px; h=
eight: 50px; overflow: scroll; }

@media (min-width: 576px) {
  .modal-dialog { max-width: 500px; margin: 1.75rem auto; }
  .modal-dialog-centered { min-height: calc(100% - 3.5rem); }
  .modal-sm { max-width: 300px; }
}

@media (min-width: 992px) {
  .modal-lg { max-width: 800px; }
}

.tooltip { position: absolute; z-index: 1070; display: block; margin: 0px; =
font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvet=
ica Neue", Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe=
 UI Symbol"; font-style: normal; font-weight: 400; line-height: 1.5; text-a=
lign: start; text-decoration: none; text-shadow: none; text-transform: none=
; letter-spacing: normal; word-break: normal; word-spacing: normal; white-s=
pace: normal; line-break: auto; font-size: 0.875rem; overflow-wrap: break-w=
ord; opacity: 0; }

.tooltip.show { opacity: 0.9; }

.tooltip .arrow { position: absolute; display: block; width: 0.8rem; height=
: 0.4rem; }

.tooltip .arrow::before { position: absolute; content: ""; border-color: tr=
ansparent; border-style: solid; }

.bs-tooltip-top, .bs-tooltip-auto[x-placement^=3D"top"] { padding: 0.4rem 0=
px; }

.bs-tooltip-top .arrow, .bs-tooltip-auto[x-placement^=3D"top"] .arrow { bot=
tom: 0px; }

.bs-tooltip-top .arrow::before, .bs-tooltip-auto[x-placement^=3D"top"] .arr=
ow::before { top: 0px; border-width: 0.4rem 0.4rem 0px; border-top-color: r=
gb(0, 0, 0); }

.bs-tooltip-right, .bs-tooltip-auto[x-placement^=3D"right"] { padding: 0px =
0.4rem; }

.bs-tooltip-right .arrow, .bs-tooltip-auto[x-placement^=3D"right"] .arrow {=
 left: 0px; width: 0.4rem; height: 0.8rem; }

.bs-tooltip-right .arrow::before, .bs-tooltip-auto[x-placement^=3D"right"] =
.arrow::before { right: 0px; border-width: 0.4rem 0.4rem 0.4rem 0px; border=
-right-color: rgb(0, 0, 0); }

.bs-tooltip-bottom, .bs-tooltip-auto[x-placement^=3D"bottom"] { padding: 0.=
4rem 0px; }

.bs-tooltip-bottom .arrow, .bs-tooltip-auto[x-placement^=3D"bottom"] .arrow=
 { top: 0px; }

.bs-tooltip-bottom .arrow::before, .bs-tooltip-auto[x-placement^=3D"bottom"=
] .arrow::before { bottom: 0px; border-width: 0px 0.4rem 0.4rem; border-bot=
tom-color: rgb(0, 0, 0); }

.bs-tooltip-left, .bs-tooltip-auto[x-placement^=3D"left"] { padding: 0px 0.=
4rem; }

.bs-tooltip-left .arrow, .bs-tooltip-auto[x-placement^=3D"left"] .arrow { r=
ight: 0px; width: 0.4rem; height: 0.8rem; }

.bs-tooltip-left .arrow::before, .bs-tooltip-auto[x-placement^=3D"left"] .a=
rrow::before { left: 0px; border-width: 0.4rem 0px 0.4rem 0.4rem; border-le=
ft-color: rgb(0, 0, 0); }

.tooltip-inner { max-width: 200px; padding: 0.25rem 0.5rem; color: rgb(255,=
 255, 255); text-align: center; background-color: rgb(0, 0, 0); border-radi=
us: 0.25rem; }

.popover { position: absolute; top: 0px; left: 0px; z-index: 1060; display:=
 block; max-width: 276px; font-family: -apple-system, BlinkMacSystemFont, "=
Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif, "Apple Color Emoji"=
, "Segoe UI Emoji", "Segoe UI Symbol"; font-style: normal; font-weight: 400=
; line-height: 1.5; text-align: start; text-decoration: none; text-shadow: =
none; text-transform: none; letter-spacing: normal; word-break: normal; wor=
d-spacing: normal; white-space: normal; line-break: auto; font-size: 0.875r=
em; overflow-wrap: break-word; background-color: rgb(255, 255, 255); backgr=
ound-clip: padding-box; border: 1px solid rgba(0, 0, 0, 0.2); border-radius=
: 0.3rem; }

.popover .arrow { position: absolute; display: block; width: 1rem; height: =
0.5rem; margin: 0px 0.3rem; }

.popover .arrow::before, .popover .arrow::after { position: absolute; displ=
ay: block; content: ""; border-color: transparent; border-style: solid; }

.bs-popover-top, .bs-popover-auto[x-placement^=3D"top"] { margin-bottom: 0.=
5rem; }

.bs-popover-top .arrow, .bs-popover-auto[x-placement^=3D"top"] .arrow { bot=
tom: calc((0.5rem + 1px) * -1); }

.bs-popover-top .arrow::before, .bs-popover-auto[x-placement^=3D"top"] .arr=
ow::before, .bs-popover-top .arrow::after, .bs-popover-auto[x-placement^=3D=
"top"] .arrow::after { border-width: 0.5rem 0.5rem 0px; }

.bs-popover-top .arrow::before, .bs-popover-auto[x-placement^=3D"top"] .arr=
ow::before { bottom: 0px; border-top-color: rgba(0, 0, 0, 0.25); }

.bs-popover-top .arrow::after, .bs-popover-auto[x-placement^=3D"top"] .arro=
w::after { bottom: 1px; border-top-color: rgb(255, 255, 255); }

.bs-popover-right, .bs-popover-auto[x-placement^=3D"right"] { margin-left: =
0.5rem; }

.bs-popover-right .arrow, .bs-popover-auto[x-placement^=3D"right"] .arrow {=
 left: calc((0.5rem + 1px) * -1); width: 0.5rem; height: 1rem; margin: 0.3r=
em 0px; }

.bs-popover-right .arrow::before, .bs-popover-auto[x-placement^=3D"right"] =
.arrow::before, .bs-popover-right .arrow::after, .bs-popover-auto[x-placeme=
nt^=3D"right"] .arrow::after { border-width: 0.5rem 0.5rem 0.5rem 0px; }

.bs-popover-right .arrow::before, .bs-popover-auto[x-placement^=3D"right"] =
.arrow::before { left: 0px; border-right-color: rgba(0, 0, 0, 0.25); }

.bs-popover-right .arrow::after, .bs-popover-auto[x-placement^=3D"right"] .=
arrow::after { left: 1px; border-right-color: rgb(255, 255, 255); }

.bs-popover-bottom, .bs-popover-auto[x-placement^=3D"bottom"] { margin-top:=
 0.5rem; }

.bs-popover-bottom .arrow, .bs-popover-auto[x-placement^=3D"bottom"] .arrow=
 { top: calc((0.5rem + 1px) * -1); }

.bs-popover-bottom .arrow::before, .bs-popover-auto[x-placement^=3D"bottom"=
] .arrow::before, .bs-popover-bottom .arrow::after, .bs-popover-auto[x-plac=
ement^=3D"bottom"] .arrow::after { border-width: 0px 0.5rem 0.5rem; }

.bs-popover-bottom .arrow::before, .bs-popover-auto[x-placement^=3D"bottom"=
] .arrow::before { top: 0px; border-bottom-color: rgba(0, 0, 0, 0.25); }

.bs-popover-bottom .arrow::after, .bs-popover-auto[x-placement^=3D"bottom"]=
 .arrow::after { top: 1px; border-bottom-color: rgb(255, 255, 255); }

.bs-popover-bottom .popover-header::before, .bs-popover-auto[x-placement^=
=3D"bottom"] .popover-header::before { position: absolute; top: 0px; left: =
50%; display: block; width: 1rem; margin-left: -0.5rem; content: ""; border=
-bottom: 1px solid rgb(247, 247, 247); }

.bs-popover-left, .bs-popover-auto[x-placement^=3D"left"] { margin-right: 0=
.5rem; }

.bs-popover-left .arrow, .bs-popover-auto[x-placement^=3D"left"] .arrow { r=
ight: calc((0.5rem + 1px) * -1); width: 0.5rem; height: 1rem; margin: 0.3re=
m 0px; }

.bs-popover-left .arrow::before, .bs-popover-auto[x-placement^=3D"left"] .a=
rrow::before, .bs-popover-left .arrow::after, .bs-popover-auto[x-placement^=
=3D"left"] .arrow::after { border-width: 0.5rem 0px 0.5rem 0.5rem; }

.bs-popover-left .arrow::before, .bs-popover-auto[x-placement^=3D"left"] .a=
rrow::before { right: 0px; border-left-color: rgba(0, 0, 0, 0.25); }

.bs-popover-left .arrow::after, .bs-popover-auto[x-placement^=3D"left"] .ar=
row::after { right: 1px; border-left-color: rgb(255, 255, 255); }

.popover-header { padding: 0.5rem 0.75rem; margin-bottom: 0px; font-size: 1=
rem; color: inherit; background-color: rgb(247, 247, 247); border-bottom: 1=
px solid rgb(235, 235, 235); border-top-left-radius: calc(0.3rem - 1px); bo=
rder-top-right-radius: calc(0.3rem - 1px); }

.popover-header:empty { display: none; }

.popover-body { padding: 0.5rem 0.75rem; color: rgb(33, 37, 41); }

.carousel { position: relative; }

.carousel-inner { position: relative; width: 100%; overflow: hidden; }

.carousel-item { position: relative; display: none; align-items: center; wi=
dth: 100%; transition: transform 0.6s ease 0s; backface-visibility: hidden;=
 perspective: 1000px; }

.carousel-item.active, .carousel-item-next, .carousel-item-prev { display: =
block; }

.carousel-item-next, .carousel-item-prev { position: absolute; top: 0px; }

.carousel-item-next.carousel-item-left, .carousel-item-prev.carousel-item-r=
ight { transform: translateX(0px); }

@supports (transform-style: preserve-3d) {
  .carousel-item-next.carousel-item-left, .carousel-item-prev.carousel-item=
-right { transform: translate3d(0px, 0px, 0px); }
}

.carousel-item-next, .active.carousel-item-right { transform: translateX(10=
0%); }

@supports (transform-style: preserve-3d) {
  .carousel-item-next, .active.carousel-item-right { transform: translate3d=
(100%, 0px, 0px); }
}

.carousel-item-prev, .active.carousel-item-left { transform: translateX(-10=
0%); }

@supports (transform-style: preserve-3d) {
  .carousel-item-prev, .active.carousel-item-left { transform: translate3d(=
-100%, 0px, 0px); }
}

.carousel-control-prev, .carousel-control-next { position: absolute; top: 0=
px; bottom: 0px; display: flex; align-items: center; justify-content: cente=
r; width: 15%; color: rgb(255, 255, 255); text-align: center; opacity: 0.5;=
 }

.carousel-control-prev:hover, .carousel-control-prev:focus, .carousel-contr=
ol-next:hover, .carousel-control-next:focus { color: rgb(255, 255, 255); te=
xt-decoration: none; outline: 0px; opacity: 0.9; }

.carousel-control-prev { left: 0px; }

.carousel-control-next { right: 0px; }

.carousel-control-prev-icon, .carousel-control-next-icon { display: inline-=
block; width: 20px; height: 20px; background: center center / 100% 100% no-=
repeat transparent; }

.carousel-control-prev-icon { background-image: url("data:image/svg+xml;cha=
rset=3Dutf8,%3Csvg xmlns=3D'http://www.w3.org/2000/svg' fill=3D'%23fff' vie=
wBox=3D'0 0 8 8'%3E%3Cpath d=3D'M5.25 0l-4 4 4 4 1.5-1.5-2.5-2.5 2.5-2.5-1.=
5-1.5z'/%3E%3C/svg%3E"); }

.carousel-control-next-icon { background-image: url("data:image/svg+xml;cha=
rset=3Dutf8,%3Csvg xmlns=3D'http://www.w3.org/2000/svg' fill=3D'%23fff' vie=
wBox=3D'0 0 8 8'%3E%3Cpath d=3D'M2.75 0l-1.5 1.5 2.5 2.5-2.5 2.5 1.5 1.5 4-=
4-4-4z'/%3E%3C/svg%3E"); }

.carousel-indicators { position: absolute; right: 0px; bottom: 10px; left: =
0px; z-index: 15; display: flex; justify-content: center; padding-left: 0px=
; margin-right: 15%; margin-left: 15%; list-style: none; }

.carousel-indicators li { position: relative; flex: 0 1 auto; width: 30px; =
height: 3px; margin-right: 3px; margin-left: 3px; text-indent: -999px; back=
ground-color: rgba(255, 255, 255, 0.5); }

.carousel-indicators li::before { position: absolute; top: -10px; left: 0px=
; display: inline-block; width: 100%; height: 10px; content: ""; }

.carousel-indicators li::after { position: absolute; bottom: -10px; left: 0=
px; display: inline-block; width: 100%; height: 10px; content: ""; }

.carousel-indicators .active { background-color: rgb(255, 255, 255); }

.carousel-caption { position: absolute; right: 15%; bottom: 20px; left: 15%=
; z-index: 10; padding-top: 20px; padding-bottom: 20px; color: rgb(255, 255=
, 255); text-align: center; }

.align-baseline { vertical-align: baseline !important; }

.align-top { vertical-align: top !important; }

.align-middle { vertical-align: middle !important; }

.align-bottom { vertical-align: bottom !important; }

.align-text-bottom { vertical-align: text-bottom !important; }

.align-text-top { vertical-align: text-top !important; }

.bg-primary { background-color: rgb(0, 123, 255) !important; }

a.bg-primary:hover, a.bg-primary:focus, button.bg-primary:hover, button.bg-=
primary:focus { background-color: rgb(0, 98, 204) !important; }

.bg-secondary { background-color: rgb(108, 117, 125) !important; }

a.bg-secondary:hover, a.bg-secondary:focus, button.bg-secondary:hover, butt=
on.bg-secondary:focus { background-color: rgb(84, 91, 98) !important; }

.bg-success { background-color: rgb(40, 167, 69) !important; }

a.bg-success:hover, a.bg-success:focus, button.bg-success:hover, button.bg-=
success:focus { background-color: rgb(30, 126, 52) !important; }

.bg-info { background-color: rgb(23, 162, 184) !important; }

a.bg-info:hover, a.bg-info:focus, button.bg-info:hover, button.bg-info:focu=
s { background-color: rgb(17, 122, 139) !important; }

.bg-warning { background-color: rgb(255, 193, 7) !important; }

a.bg-warning:hover, a.bg-warning:focus, button.bg-warning:hover, button.bg-=
warning:focus { background-color: rgb(211, 158, 0) !important; }

.bg-danger { background-color: rgb(220, 53, 69) !important; }

a.bg-danger:hover, a.bg-danger:focus, button.bg-danger:hover, button.bg-dan=
ger:focus { background-color: rgb(189, 33, 48) !important; }

.bg-light { background-color: rgb(248, 249, 250) !important; }

a.bg-light:hover, a.bg-light:focus, button.bg-light:hover, button.bg-light:=
focus { background-color: rgb(218, 224, 229) !important; }

.bg-dark { background-color: rgb(52, 58, 64) !important; }

a.bg-dark:hover, a.bg-dark:focus, button.bg-dark:hover, button.bg-dark:focu=
s { background-color: rgb(29, 33, 36) !important; }

.bg-white { background-color: rgb(255, 255, 255) !important; }

.bg-transparent { background-color: transparent !important; }

.border { border: 1px solid rgb(222, 226, 230) !important; }

.border-top { border-top: 1px solid rgb(222, 226, 230) !important; }

.border-right { border-right: 1px solid rgb(222, 226, 230) !important; }

.border-bottom { border-bottom: 1px solid rgb(222, 226, 230) !important; }

.border-left { border-left: 1px solid rgb(222, 226, 230) !important; }

.border-0 { border: 0px !important; }

.border-top-0 { border-top: 0px !important; }

.border-right-0 { border-right: 0px !important; }

.border-bottom-0 { border-bottom: 0px !important; }

.border-left-0 { border-left: 0px !important; }

.border-primary { border-color: rgb(0, 123, 255) !important; }

.border-secondary { border-color: rgb(108, 117, 125) !important; }

.border-success { border-color: rgb(40, 167, 69) !important; }

.border-info { border-color: rgb(23, 162, 184) !important; }

.border-warning { border-color: rgb(255, 193, 7) !important; }

.border-danger { border-color: rgb(220, 53, 69) !important; }

.border-light { border-color: rgb(248, 249, 250) !important; }

.border-dark { border-color: rgb(52, 58, 64) !important; }

.border-white { border-color: rgb(255, 255, 255) !important; }

.rounded { border-radius: 0.25rem !important; }

.rounded-top { border-top-left-radius: 0.25rem !important; border-top-right=
-radius: 0.25rem !important; }

.rounded-right { border-top-right-radius: 0.25rem !important; border-bottom=
-right-radius: 0.25rem !important; }

.rounded-bottom { border-bottom-right-radius: 0.25rem !important; border-bo=
ttom-left-radius: 0.25rem !important; }

.rounded-left { border-top-left-radius: 0.25rem !important; border-bottom-l=
eft-radius: 0.25rem !important; }

.rounded-circle { border-radius: 50% !important; }

.rounded-0 { border-radius: 0px !important; }

.clearfix::after { display: block; clear: both; content: ""; }

.d-none { display: none !important; }

.d-inline { display: inline !important; }

.d-inline-block { display: inline-block !important; }

.d-block { display: block !important; }

.d-table { display: table !important; }

.d-table-row { display: table-row !important; }

.d-table-cell { display: table-cell !important; }

.d-flex { display: flex !important; }

.d-inline-flex { display: inline-flex !important; }

@media (min-width: 576px) {
  .d-sm-none { display: none !important; }
  .d-sm-inline { display: inline !important; }
  .d-sm-inline-block { display: inline-block !important; }
  .d-sm-block { display: block !important; }
  .d-sm-table { display: table !important; }
  .d-sm-table-row { display: table-row !important; }
  .d-sm-table-cell { display: table-cell !important; }
  .d-sm-flex { display: flex !important; }
  .d-sm-inline-flex { display: inline-flex !important; }
}

@media (min-width: 768px) {
  .d-md-none { display: none !important; }
  .d-md-inline { display: inline !important; }
  .d-md-inline-block { display: inline-block !important; }
  .d-md-block { display: block !important; }
  .d-md-table { display: table !important; }
  .d-md-table-row { display: table-row !important; }
  .d-md-table-cell { display: table-cell !important; }
  .d-md-flex { display: flex !important; }
  .d-md-inline-flex { display: inline-flex !important; }
}

@media (min-width: 992px) {
  .d-lg-none { display: none !important; }
  .d-lg-inline { display: inline !important; }
  .d-lg-inline-block { display: inline-block !important; }
  .d-lg-block { display: block !important; }
  .d-lg-table { display: table !important; }
  .d-lg-table-row { display: table-row !important; }
  .d-lg-table-cell { display: table-cell !important; }
  .d-lg-flex { display: flex !important; }
  .d-lg-inline-flex { display: inline-flex !important; }
}

@media (min-width: 1200px) {
  .d-xl-none { display: none !important; }
  .d-xl-inline { display: inline !important; }
  .d-xl-inline-block { display: inline-block !important; }
  .d-xl-block { display: block !important; }
  .d-xl-table { display: table !important; }
  .d-xl-table-row { display: table-row !important; }
  .d-xl-table-cell { display: table-cell !important; }
  .d-xl-flex { display: flex !important; }
  .d-xl-inline-flex { display: inline-flex !important; }
}

@media print {
  .d-print-none { display: none !important; }
  .d-print-inline { display: inline !important; }
  .d-print-inline-block { display: inline-block !important; }
  .d-print-block { display: block !important; }
  .d-print-table { display: table !important; }
  .d-print-table-row { display: table-row !important; }
  .d-print-table-cell { display: table-cell !important; }
  .d-print-flex { display: flex !important; }
  .d-print-inline-flex { display: inline-flex !important; }
}

.embed-responsive { position: relative; display: block; width: 100%; paddin=
g: 0px; overflow: hidden; }

.embed-responsive::before { display: block; content: ""; }

.embed-responsive .embed-responsive-item, .embed-responsive iframe, .embed-=
responsive embed, .embed-responsive object, .embed-responsive video { posit=
ion: absolute; top: 0px; bottom: 0px; left: 0px; width: 100%; height: 100%;=
 border: 0px; }

.embed-responsive-21by9::before { padding-top: 42.8571%; }

.embed-responsive-16by9::before { padding-top: 56.25%; }

.embed-responsive-4by3::before { padding-top: 75%; }

.embed-responsive-1by1::before { padding-top: 100%; }

.flex-row { flex-direction: row !important; }

.flex-column { flex-direction: column !important; }

.flex-row-reverse { flex-direction: row-reverse !important; }

.flex-column-reverse { flex-direction: column-reverse !important; }

.flex-wrap { flex-wrap: wrap !important; }

.flex-nowrap { flex-wrap: nowrap !important; }

.flex-wrap-reverse { flex-wrap: wrap-reverse !important; }

.justify-content-start { justify-content: flex-start !important; }

.justify-content-end { justify-content: flex-end !important; }

.justify-content-center { justify-content: center !important; }

.justify-content-between { justify-content: space-between !important; }

.justify-content-around { justify-content: space-around !important; }

.align-items-start { align-items: flex-start !important; }

.align-items-end { align-items: flex-end !important; }

.align-items-center { align-items: center !important; }

.align-items-baseline { align-items: baseline !important; }

.align-items-stretch { align-items: stretch !important; }

.align-content-start { align-content: flex-start !important; }

.align-content-end { align-content: flex-end !important; }

.align-content-center { align-content: center !important; }

.align-content-between { align-content: space-between !important; }

.align-content-around { align-content: space-around !important; }

.align-content-stretch { align-content: stretch !important; }

.align-self-auto { align-self: auto !important; }

.align-self-start { align-self: flex-start !important; }

.align-self-end { align-self: flex-end !important; }

.align-self-center { align-self: center !important; }

.align-self-baseline { align-self: baseline !important; }

.align-self-stretch { align-self: stretch !important; }

@media (min-width: 576px) {
  .flex-sm-row { flex-direction: row !important; }
  .flex-sm-column { flex-direction: column !important; }
  .flex-sm-row-reverse { flex-direction: row-reverse !important; }
  .flex-sm-column-reverse { flex-direction: column-reverse !important; }
  .flex-sm-wrap { flex-wrap: wrap !important; }
  .flex-sm-nowrap { flex-wrap: nowrap !important; }
  .flex-sm-wrap-reverse { flex-wrap: wrap-reverse !important; }
  .justify-content-sm-start { justify-content: flex-start !important; }
  .justify-content-sm-end { justify-content: flex-end !important; }
  .justify-content-sm-center { justify-content: center !important; }
  .justify-content-sm-between { justify-content: space-between !important; =
}
  .justify-content-sm-around { justify-content: space-around !important; }
  .align-items-sm-start { align-items: flex-start !important; }
  .align-items-sm-end { align-items: flex-end !important; }
  .align-items-sm-center { align-items: center !important; }
  .align-items-sm-baseline { align-items: baseline !important; }
  .align-items-sm-stretch { align-items: stretch !important; }
  .align-content-sm-start { align-content: flex-start !important; }
  .align-content-sm-end { align-content: flex-end !important; }
  .align-content-sm-center { align-content: center !important; }
  .align-content-sm-between { align-content: space-between !important; }
  .align-content-sm-around { align-content: space-around !important; }
  .align-content-sm-stretch { align-content: stretch !important; }
  .align-self-sm-auto { align-self: auto !important; }
  .align-self-sm-start { align-self: flex-start !important; }
  .align-self-sm-end { align-self: flex-end !important; }
  .align-self-sm-center { align-self: center !important; }
  .align-self-sm-baseline { align-self: baseline !important; }
  .align-self-sm-stretch { align-self: stretch !important; }
}

@media (min-width: 768px) {
  .flex-md-row { flex-direction: row !important; }
  .flex-md-column { flex-direction: column !important; }
  .flex-md-row-reverse { flex-direction: row-reverse !important; }
  .flex-md-column-reverse { flex-direction: column-reverse !important; }
  .flex-md-wrap { flex-wrap: wrap !important; }
  .flex-md-nowrap { flex-wrap: nowrap !important; }
  .flex-md-wrap-reverse { flex-wrap: wrap-reverse !important; }
  .justify-content-md-start { justify-content: flex-start !important; }
  .justify-content-md-end { justify-content: flex-end !important; }
  .justify-content-md-center { justify-content: center !important; }
  .justify-content-md-between { justify-content: space-between !important; =
}
  .justify-content-md-around { justify-content: space-around !important; }
  .align-items-md-start { align-items: flex-start !important; }
  .align-items-md-end { align-items: flex-end !important; }
  .align-items-md-center { align-items: center !important; }
  .align-items-md-baseline { align-items: baseline !important; }
  .align-items-md-stretch { align-items: stretch !important; }
  .align-content-md-start { align-content: flex-start !important; }
  .align-content-md-end { align-content: flex-end !important; }
  .align-content-md-center { align-content: center !important; }
  .align-content-md-between { align-content: space-between !important; }
  .align-content-md-around { align-content: space-around !important; }
  .align-content-md-stretch { align-content: stretch !important; }
  .align-self-md-auto { align-self: auto !important; }
  .align-self-md-start { align-self: flex-start !important; }
  .align-self-md-end { align-self: flex-end !important; }
  .align-self-md-center { align-self: center !important; }
  .align-self-md-baseline { align-self: baseline !important; }
  .align-self-md-stretch { align-self: stretch !important; }
}

@media (min-width: 992px) {
  .flex-lg-row { flex-direction: row !important; }
  .flex-lg-column { flex-direction: column !important; }
  .flex-lg-row-reverse { flex-direction: row-reverse !important; }
  .flex-lg-column-reverse { flex-direction: column-reverse !important; }
  .flex-lg-wrap { flex-wrap: wrap !important; }
  .flex-lg-nowrap { flex-wrap: nowrap !important; }
  .flex-lg-wrap-reverse { flex-wrap: wrap-reverse !important; }
  .justify-content-lg-start { justify-content: flex-start !important; }
  .justify-content-lg-end { justify-content: flex-end !important; }
  .justify-content-lg-center { justify-content: center !important; }
  .justify-content-lg-between { justify-content: space-between !important; =
}
  .justify-content-lg-around { justify-content: space-around !important; }
  .align-items-lg-start { align-items: flex-start !important; }
  .align-items-lg-end { align-items: flex-end !important; }
  .align-items-lg-center { align-items: center !important; }
  .align-items-lg-baseline { align-items: baseline !important; }
  .align-items-lg-stretch { align-items: stretch !important; }
  .align-content-lg-start { align-content: flex-start !important; }
  .align-content-lg-end { align-content: flex-end !important; }
  .align-content-lg-center { align-content: center !important; }
  .align-content-lg-between { align-content: space-between !important; }
  .align-content-lg-around { align-content: space-around !important; }
  .align-content-lg-stretch { align-content: stretch !important; }
  .align-self-lg-auto { align-self: auto !important; }
  .align-self-lg-start { align-self: flex-start !important; }
  .align-self-lg-end { align-self: flex-end !important; }
  .align-self-lg-center { align-self: center !important; }
  .align-self-lg-baseline { align-self: baseline !important; }
  .align-self-lg-stretch { align-self: stretch !important; }
}

@media (min-width: 1200px) {
  .flex-xl-row { flex-direction: row !important; }
  .flex-xl-column { flex-direction: column !important; }
  .flex-xl-row-reverse { flex-direction: row-reverse !important; }
  .flex-xl-column-reverse { flex-direction: column-reverse !important; }
  .flex-xl-wrap { flex-wrap: wrap !important; }
  .flex-xl-nowrap { flex-wrap: nowrap !important; }
  .flex-xl-wrap-reverse { flex-wrap: wrap-reverse !important; }
  .justify-content-xl-start { justify-content: flex-start !important; }
  .justify-content-xl-end { justify-content: flex-end !important; }
  .justify-content-xl-center { justify-content: center !important; }
  .justify-content-xl-between { justify-content: space-between !important; =
}
  .justify-content-xl-around { justify-content: space-around !important; }
  .align-items-xl-start { align-items: flex-start !important; }
  .align-items-xl-end { align-items: flex-end !important; }
  .align-items-xl-center { align-items: center !important; }
  .align-items-xl-baseline { align-items: baseline !important; }
  .align-items-xl-stretch { align-items: stretch !important; }
  .align-content-xl-start { align-content: flex-start !important; }
  .align-content-xl-end { align-content: flex-end !important; }
  .align-content-xl-center { align-content: center !important; }
  .align-content-xl-between { align-content: space-between !important; }
  .align-content-xl-around { align-content: space-around !important; }
  .align-content-xl-stretch { align-content: stretch !important; }
  .align-self-xl-auto { align-self: auto !important; }
  .align-self-xl-start { align-self: flex-start !important; }
  .align-self-xl-end { align-self: flex-end !important; }
  .align-self-xl-center { align-self: center !important; }
  .align-self-xl-baseline { align-self: baseline !important; }
  .align-self-xl-stretch { align-self: stretch !important; }
}

.float-left { float: left !important; }

.float-right { float: right !important; }

.float-none { float: none !important; }

@media (min-width: 576px) {
  .float-sm-left { float: left !important; }
  .float-sm-right { float: right !important; }
  .float-sm-none { float: none !important; }
}

@media (min-width: 768px) {
  .float-md-left { float: left !important; }
  .float-md-right { float: right !important; }
  .float-md-none { float: none !important; }
}

@media (min-width: 992px) {
  .float-lg-left { float: left !important; }
  .float-lg-right { float: right !important; }
  .float-lg-none { float: none !important; }
}

@media (min-width: 1200px) {
  .float-xl-left { float: left !important; }
  .float-xl-right { float: right !important; }
  .float-xl-none { float: none !important; }
}

.position-static { position: static !important; }

.position-relative { position: relative !important; }

.position-absolute { position: absolute !important; }

.position-fixed { position: fixed !important; }

.position-sticky { position: sticky !important; }

.fixed-top { position: fixed; top: 0px; right: 0px; left: 0px; z-index: 103=
0; }

.fixed-bottom { position: fixed; right: 0px; bottom: 0px; left: 0px; z-inde=
x: 1030; }

@supports ((position: -webkit-sticky) or (position: sticky)) {
  .sticky-top { position: sticky; top: 0px; z-index: 1020; }
}

.sr-only { position: absolute; width: 1px; height: 1px; padding: 0px; overf=
low: hidden; clip: rect(0px, 0px, 0px, 0px); white-space: nowrap; clip-path=
: inset(50%); border: 0px; }

.sr-only-focusable:active, .sr-only-focusable:focus { position: static; wid=
th: auto; height: auto; overflow: visible; clip: auto; white-space: normal;=
 clip-path: none; }

.w-25 { width: 25% !important; }

.w-50 { width: 50% !important; }

.w-75 { width: 75% !important; }

.w-100 { width: 100% !important; }

.h-25 { height: 25% !important; }

.h-50 { height: 50% !important; }

.h-75 { height: 75% !important; }

.h-100 { height: 100% !important; }

.mw-100 { max-width: 100% !important; }

.mh-100 { max-height: 100% !important; }

.m-0 { margin: 0px !important; }

.mt-0, .my-0 { margin-top: 0px !important; }

.mr-0, .mx-0 { margin-right: 0px !important; }

.mb-0, .my-0 { margin-bottom: 0px !important; }

.ml-0, .mx-0 { margin-left: 0px !important; }

.m-1 { margin: 0.25rem !important; }

.mt-1, .my-1 { margin-top: 0.25rem !important; }

.mr-1, .mx-1 { margin-right: 0.25rem !important; }

.mb-1, .my-1 { margin-bottom: 0.25rem !important; }

.ml-1, .mx-1 { margin-left: 0.25rem !important; }

.m-2 { margin: 0.5rem !important; }

.mt-2, .my-2 { margin-top: 0.5rem !important; }

.mr-2, .mx-2 { margin-right: 0.5rem !important; }

.mb-2, .my-2 { margin-bottom: 0.5rem !important; }

.ml-2, .mx-2 { margin-left: 0.5rem !important; }

.m-3 { margin: 1rem !important; }

.mt-3, .my-3 { margin-top: 1rem !important; }

.mr-3, .mx-3 { margin-right: 1rem !important; }

.mb-3, .my-3 { margin-bottom: 1rem !important; }

.ml-3, .mx-3 { margin-left: 1rem !important; }

.m-4 { margin: 1.5rem !important; }

.mt-4, .my-4 { margin-top: 1.5rem !important; }

.mr-4, .mx-4 { margin-right: 1.5rem !important; }

.mb-4, .my-4 { margin-bottom: 1.5rem !important; }

.ml-4, .mx-4 { margin-left: 1.5rem !important; }

.m-5 { margin: 3rem !important; }

.mt-5, .my-5 { margin-top: 3rem !important; }

.mr-5, .mx-5 { margin-right: 3rem !important; }

.mb-5, .my-5 { margin-bottom: 3rem !important; }

.ml-5, .mx-5 { margin-left: 3rem !important; }

.p-0 { padding: 0px !important; }

.pt-0, .py-0 { padding-top: 0px !important; }

.pr-0, .px-0 { padding-right: 0px !important; }

.pb-0, .py-0 { padding-bottom: 0px !important; }

.pl-0, .px-0 { padding-left: 0px !important; }

.p-1 { padding: 0.25rem !important; }

.pt-1, .py-1 { padding-top: 0.25rem !important; }

.pr-1, .px-1 { padding-right: 0.25rem !important; }

.pb-1, .py-1 { padding-bottom: 0.25rem !important; }

.pl-1, .px-1 { padding-left: 0.25rem !important; }

.p-2 { padding: 0.5rem !important; }

.pt-2, .py-2 { padding-top: 0.5rem !important; }

.pr-2, .px-2 { padding-right: 0.5rem !important; }

.pb-2, .py-2 { padding-bottom: 0.5rem !important; }

.pl-2, .px-2 { padding-left: 0.5rem !important; }

.p-3 { padding: 1rem !important; }

.pt-3, .py-3 { padding-top: 1rem !important; }

.pr-3, .px-3 { padding-right: 1rem !important; }

.pb-3, .py-3 { padding-bottom: 1rem !important; }

.pl-3, .px-3 { padding-left: 1rem !important; }

.p-4 { padding: 1.5rem !important; }

.pt-4, .py-4 { padding-top: 1.5rem !important; }

.pr-4, .px-4 { padding-right: 1.5rem !important; }

.pb-4, .py-4 { padding-bottom: 1.5rem !important; }

.pl-4, .px-4 { padding-left: 1.5rem !important; }

.p-5 { padding: 3rem !important; }

.pt-5, .py-5 { padding-top: 3rem !important; }

.pr-5, .px-5 { padding-right: 3rem !important; }

.pb-5, .py-5 { padding-bottom: 3rem !important; }

.pl-5, .px-5 { padding-left: 3rem !important; }

.m-auto { margin: auto !important; }

.mt-auto, .my-auto { margin-top: auto !important; }

.mr-auto, .mx-auto { margin-right: auto !important; }

.mb-auto, .my-auto { margin-bottom: auto !important; }

.ml-auto, .mx-auto { margin-left: auto !important; }

@media (min-width: 576px) {
  .m-sm-0 { margin: 0px !important; }
  .mt-sm-0, .my-sm-0 { margin-top: 0px !important; }
  .mr-sm-0, .mx-sm-0 { margin-right: 0px !important; }
  .mb-sm-0, .my-sm-0 { margin-bottom: 0px !important; }
  .ml-sm-0, .mx-sm-0 { margin-left: 0px !important; }
  .m-sm-1 { margin: 0.25rem !important; }
  .mt-sm-1, .my-sm-1 { margin-top: 0.25rem !important; }
  .mr-sm-1, .mx-sm-1 { margin-right: 0.25rem !important; }
  .mb-sm-1, .my-sm-1 { margin-bottom: 0.25rem !important; }
  .ml-sm-1, .mx-sm-1 { margin-left: 0.25rem !important; }
  .m-sm-2 { margin: 0.5rem !important; }
  .mt-sm-2, .my-sm-2 { margin-top: 0.5rem !important; }
  .mr-sm-2, .mx-sm-2 { margin-right: 0.5rem !important; }
  .mb-sm-2, .my-sm-2 { margin-bottom: 0.5rem !important; }
  .ml-sm-2, .mx-sm-2 { margin-left: 0.5rem !important; }
  .m-sm-3 { margin: 1rem !important; }
  .mt-sm-3, .my-sm-3 { margin-top: 1rem !important; }
  .mr-sm-3, .mx-sm-3 { margin-right: 1rem !important; }
  .mb-sm-3, .my-sm-3 { margin-bottom: 1rem !important; }
  .ml-sm-3, .mx-sm-3 { margin-left: 1rem !important; }
  .m-sm-4 { margin: 1.5rem !important; }
  .mt-sm-4, .my-sm-4 { margin-top: 1.5rem !important; }
  .mr-sm-4, .mx-sm-4 { margin-right: 1.5rem !important; }
  .mb-sm-4, .my-sm-4 { margin-bottom: 1.5rem !important; }
  .ml-sm-4, .mx-sm-4 { margin-left: 1.5rem !important; }
  .m-sm-5 { margin: 3rem !important; }
  .mt-sm-5, .my-sm-5 { margin-top: 3rem !important; }
  .mr-sm-5, .mx-sm-5 { margin-right: 3rem !important; }
  .mb-sm-5, .my-sm-5 { margin-bottom: 3rem !important; }
  .ml-sm-5, .mx-sm-5 { margin-left: 3rem !important; }
  .p-sm-0 { padding: 0px !important; }
  .pt-sm-0, .py-sm-0 { padding-top: 0px !important; }
  .pr-sm-0, .px-sm-0 { padding-right: 0px !important; }
  .pb-sm-0, .py-sm-0 { padding-bottom: 0px !important; }
  .pl-sm-0, .px-sm-0 { padding-left: 0px !important; }
  .p-sm-1 { padding: 0.25rem !important; }
  .pt-sm-1, .py-sm-1 { padding-top: 0.25rem !important; }
  .pr-sm-1, .px-sm-1 { padding-right: 0.25rem !important; }
  .pb-sm-1, .py-sm-1 { padding-bottom: 0.25rem !important; }
  .pl-sm-1, .px-sm-1 { padding-left: 0.25rem !important; }
  .p-sm-2 { padding: 0.5rem !important; }
  .pt-sm-2, .py-sm-2 { padding-top: 0.5rem !important; }
  .pr-sm-2, .px-sm-2 { padding-right: 0.5rem !important; }
  .pb-sm-2, .py-sm-2 { padding-bottom: 0.5rem !important; }
  .pl-sm-2, .px-sm-2 { padding-left: 0.5rem !important; }
  .p-sm-3 { padding: 1rem !important; }
  .pt-sm-3, .py-sm-3 { padding-top: 1rem !important; }
  .pr-sm-3, .px-sm-3 { padding-right: 1rem !important; }
  .pb-sm-3, .py-sm-3 { padding-bottom: 1rem !important; }
  .pl-sm-3, .px-sm-3 { padding-left: 1rem !important; }
  .p-sm-4 { padding: 1.5rem !important; }
  .pt-sm-4, .py-sm-4 { padding-top: 1.5rem !important; }
  .pr-sm-4, .px-sm-4 { padding-right: 1.5rem !important; }
  .pb-sm-4, .py-sm-4 { padding-bottom: 1.5rem !important; }
  .pl-sm-4, .px-sm-4 { padding-left: 1.5rem !important; }
  .p-sm-5 { padding: 3rem !important; }
  .pt-sm-5, .py-sm-5 { padding-top: 3rem !important; }
  .pr-sm-5, .px-sm-5 { padding-right: 3rem !important; }
  .pb-sm-5, .py-sm-5 { padding-bottom: 3rem !important; }
  .pl-sm-5, .px-sm-5 { padding-left: 3rem !important; }
  .m-sm-auto { margin: auto !important; }
  .mt-sm-auto, .my-sm-auto { margin-top: auto !important; }
  .mr-sm-auto, .mx-sm-auto { margin-right: auto !important; }
  .mb-sm-auto, .my-sm-auto { margin-bottom: auto !important; }
  .ml-sm-auto, .mx-sm-auto { margin-left: auto !important; }
}

@media (min-width: 768px) {
  .m-md-0 { margin: 0px !important; }
  .mt-md-0, .my-md-0 { margin-top: 0px !important; }
  .mr-md-0, .mx-md-0 { margin-right: 0px !important; }
  .mb-md-0, .my-md-0 { margin-bottom: 0px !important; }
  .ml-md-0, .mx-md-0 { margin-left: 0px !important; }
  .m-md-1 { margin: 0.25rem !important; }
  .mt-md-1, .my-md-1 { margin-top: 0.25rem !important; }
  .mr-md-1, .mx-md-1 { margin-right: 0.25rem !important; }
  .mb-md-1, .my-md-1 { margin-bottom: 0.25rem !important; }
  .ml-md-1, .mx-md-1 { margin-left: 0.25rem !important; }
  .m-md-2 { margin: 0.5rem !important; }
  .mt-md-2, .my-md-2 { margin-top: 0.5rem !important; }
  .mr-md-2, .mx-md-2 { margin-right: 0.5rem !important; }
  .mb-md-2, .my-md-2 { margin-bottom: 0.5rem !important; }
  .ml-md-2, .mx-md-2 { margin-left: 0.5rem !important; }
  .m-md-3 { margin: 1rem !important; }
  .mt-md-3, .my-md-3 { margin-top: 1rem !important; }
  .mr-md-3, .mx-md-3 { margin-right: 1rem !important; }
  .mb-md-3, .my-md-3 { margin-bottom: 1rem !important; }
  .ml-md-3, .mx-md-3 { margin-left: 1rem !important; }
  .m-md-4 { margin: 1.5rem !important; }
  .mt-md-4, .my-md-4 { margin-top: 1.5rem !important; }
  .mr-md-4, .mx-md-4 { margin-right: 1.5rem !important; }
  .mb-md-4, .my-md-4 { margin-bottom: 1.5rem !important; }
  .ml-md-4, .mx-md-4 { margin-left: 1.5rem !important; }
  .m-md-5 { margin: 3rem !important; }
  .mt-md-5, .my-md-5 { margin-top: 3rem !important; }
  .mr-md-5, .mx-md-5 { margin-right: 3rem !important; }
  .mb-md-5, .my-md-5 { margin-bottom: 3rem !important; }
  .ml-md-5, .mx-md-5 { margin-left: 3rem !important; }
  .p-md-0 { padding: 0px !important; }
  .pt-md-0, .py-md-0 { padding-top: 0px !important; }
  .pr-md-0, .px-md-0 { padding-right: 0px !important; }
  .pb-md-0, .py-md-0 { padding-bottom: 0px !important; }
  .pl-md-0, .px-md-0 { padding-left: 0px !important; }
  .p-md-1 { padding: 0.25rem !important; }
  .pt-md-1, .py-md-1 { padding-top: 0.25rem !important; }
  .pr-md-1, .px-md-1 { padding-right: 0.25rem !important; }
  .pb-md-1, .py-md-1 { padding-bottom: 0.25rem !important; }
  .pl-md-1, .px-md-1 { padding-left: 0.25rem !important; }
  .p-md-2 { padding: 0.5rem !important; }
  .pt-md-2, .py-md-2 { padding-top: 0.5rem !important; }
  .pr-md-2, .px-md-2 { padding-right: 0.5rem !important; }
  .pb-md-2, .py-md-2 { padding-bottom: 0.5rem !important; }
  .pl-md-2, .px-md-2 { padding-left: 0.5rem !important; }
  .p-md-3 { padding: 1rem !important; }
  .pt-md-3, .py-md-3 { padding-top: 1rem !important; }
  .pr-md-3, .px-md-3 { padding-right: 1rem !important; }
  .pb-md-3, .py-md-3 { padding-bottom: 1rem !important; }
  .pl-md-3, .px-md-3 { padding-left: 1rem !important; }
  .p-md-4 { padding: 1.5rem !important; }
  .pt-md-4, .py-md-4 { padding-top: 1.5rem !important; }
  .pr-md-4, .px-md-4 { padding-right: 1.5rem !important; }
  .pb-md-4, .py-md-4 { padding-bottom: 1.5rem !important; }
  .pl-md-4, .px-md-4 { padding-left: 1.5rem !important; }
  .p-md-5 { padding: 3rem !important; }
  .pt-md-5, .py-md-5 { padding-top: 3rem !important; }
  .pr-md-5, .px-md-5 { padding-right: 3rem !important; }
  .pb-md-5, .py-md-5 { padding-bottom: 3rem !important; }
  .pl-md-5, .px-md-5 { padding-left: 3rem !important; }
  .m-md-auto { margin: auto !important; }
  .mt-md-auto, .my-md-auto { margin-top: auto !important; }
  .mr-md-auto, .mx-md-auto { margin-right: auto !important; }
  .mb-md-auto, .my-md-auto { margin-bottom: auto !important; }
  .ml-md-auto, .mx-md-auto { margin-left: auto !important; }
}

@media (min-width: 992px) {
  .m-lg-0 { margin: 0px !important; }
  .mt-lg-0, .my-lg-0 { margin-top: 0px !important; }
  .mr-lg-0, .mx-lg-0 { margin-right: 0px !important; }
  .mb-lg-0, .my-lg-0 { margin-bottom: 0px !important; }
  .ml-lg-0, .mx-lg-0 { margin-left: 0px !important; }
  .m-lg-1 { margin: 0.25rem !important; }
  .mt-lg-1, .my-lg-1 { margin-top: 0.25rem !important; }
  .mr-lg-1, .mx-lg-1 { margin-right: 0.25rem !important; }
  .mb-lg-1, .my-lg-1 { margin-bottom: 0.25rem !important; }
  .ml-lg-1, .mx-lg-1 { margin-left: 0.25rem !important; }
  .m-lg-2 { margin: 0.5rem !important; }
  .mt-lg-2, .my-lg-2 { margin-top: 0.5rem !important; }
  .mr-lg-2, .mx-lg-2 { margin-right: 0.5rem !important; }
  .mb-lg-2, .my-lg-2 { margin-bottom: 0.5rem !important; }
  .ml-lg-2, .mx-lg-2 { margin-left: 0.5rem !important; }
  .m-lg-3 { margin: 1rem !important; }
  .mt-lg-3, .my-lg-3 { margin-top: 1rem !important; }
  .mr-lg-3, .mx-lg-3 { margin-right: 1rem !important; }
  .mb-lg-3, .my-lg-3 { margin-bottom: 1rem !important; }
  .ml-lg-3, .mx-lg-3 { margin-left: 1rem !important; }
  .m-lg-4 { margin: 1.5rem !important; }
  .mt-lg-4, .my-lg-4 { margin-top: 1.5rem !important; }
  .mr-lg-4, .mx-lg-4 { margin-right: 1.5rem !important; }
  .mb-lg-4, .my-lg-4 { margin-bottom: 1.5rem !important; }
  .ml-lg-4, .mx-lg-4 { margin-left: 1.5rem !important; }
  .m-lg-5 { margin: 3rem !important; }
  .mt-lg-5, .my-lg-5 { margin-top: 3rem !important; }
  .mr-lg-5, .mx-lg-5 { margin-right: 3rem !important; }
  .mb-lg-5, .my-lg-5 { margin-bottom: 3rem !important; }
  .ml-lg-5, .mx-lg-5 { margin-left: 3rem !important; }
  .p-lg-0 { padding: 0px !important; }
  .pt-lg-0, .py-lg-0 { padding-top: 0px !important; }
  .pr-lg-0, .px-lg-0 { padding-right: 0px !important; }
  .pb-lg-0, .py-lg-0 { padding-bottom: 0px !important; }
  .pl-lg-0, .px-lg-0 { padding-left: 0px !important; }
  .p-lg-1 { padding: 0.25rem !important; }
  .pt-lg-1, .py-lg-1 { padding-top: 0.25rem !important; }
  .pr-lg-1, .px-lg-1 { padding-right: 0.25rem !important; }
  .pb-lg-1, .py-lg-1 { padding-bottom: 0.25rem !important; }
  .pl-lg-1, .px-lg-1 { padding-left: 0.25rem !important; }
  .p-lg-2 { padding: 0.5rem !important; }
  .pt-lg-2, .py-lg-2 { padding-top: 0.5rem !important; }
  .pr-lg-2, .px-lg-2 { padding-right: 0.5rem !important; }
  .pb-lg-2, .py-lg-2 { padding-bottom: 0.5rem !important; }
  .pl-lg-2, .px-lg-2 { padding-left: 0.5rem !important; }
  .p-lg-3 { padding: 1rem !important; }
  .pt-lg-3, .py-lg-3 { padding-top: 1rem !important; }
  .pr-lg-3, .px-lg-3 { padding-right: 1rem !important; }
  .pb-lg-3, .py-lg-3 { padding-bottom: 1rem !important; }
  .pl-lg-3, .px-lg-3 { padding-left: 1rem !important; }
  .p-lg-4 { padding: 1.5rem !important; }
  .pt-lg-4, .py-lg-4 { padding-top: 1.5rem !important; }
  .pr-lg-4, .px-lg-4 { padding-right: 1.5rem !important; }
  .pb-lg-4, .py-lg-4 { padding-bottom: 1.5rem !important; }
  .pl-lg-4, .px-lg-4 { padding-left: 1.5rem !important; }
  .p-lg-5 { padding: 3rem !important; }
  .pt-lg-5, .py-lg-5 { padding-top: 3rem !important; }
  .pr-lg-5, .px-lg-5 { padding-right: 3rem !important; }
  .pb-lg-5, .py-lg-5 { padding-bottom: 3rem !important; }
  .pl-lg-5, .px-lg-5 { padding-left: 3rem !important; }
  .m-lg-auto { margin: auto !important; }
  .mt-lg-auto, .my-lg-auto { margin-top: auto !important; }
  .mr-lg-auto, .mx-lg-auto { margin-right: auto !important; }
  .mb-lg-auto, .my-lg-auto { margin-bottom: auto !important; }
  .ml-lg-auto, .mx-lg-auto { margin-left: auto !important; }
}

@media (min-width: 1200px) {
  .m-xl-0 { margin: 0px !important; }
  .mt-xl-0, .my-xl-0 { margin-top: 0px !important; }
  .mr-xl-0, .mx-xl-0 { margin-right: 0px !important; }
  .mb-xl-0, .my-xl-0 { margin-bottom: 0px !important; }
  .ml-xl-0, .mx-xl-0 { margin-left: 0px !important; }
  .m-xl-1 { margin: 0.25rem !important; }
  .mt-xl-1, .my-xl-1 { margin-top: 0.25rem !important; }
  .mr-xl-1, .mx-xl-1 { margin-right: 0.25rem !important; }
  .mb-xl-1, .my-xl-1 { margin-bottom: 0.25rem !important; }
  .ml-xl-1, .mx-xl-1 { margin-left: 0.25rem !important; }
  .m-xl-2 { margin: 0.5rem !important; }
  .mt-xl-2, .my-xl-2 { margin-top: 0.5rem !important; }
  .mr-xl-2, .mx-xl-2 { margin-right: 0.5rem !important; }
  .mb-xl-2, .my-xl-2 { margin-bottom: 0.5rem !important; }
  .ml-xl-2, .mx-xl-2 { margin-left: 0.5rem !important; }
  .m-xl-3 { margin: 1rem !important; }
  .mt-xl-3, .my-xl-3 { margin-top: 1rem !important; }
  .mr-xl-3, .mx-xl-3 { margin-right: 1rem !important; }
  .mb-xl-3, .my-xl-3 { margin-bottom: 1rem !important; }
  .ml-xl-3, .mx-xl-3 { margin-left: 1rem !important; }
  .m-xl-4 { margin: 1.5rem !important; }
  .mt-xl-4, .my-xl-4 { margin-top: 1.5rem !important; }
  .mr-xl-4, .mx-xl-4 { margin-right: 1.5rem !important; }
  .mb-xl-4, .my-xl-4 { margin-bottom: 1.5rem !important; }
  .ml-xl-4, .mx-xl-4 { margin-left: 1.5rem !important; }
  .m-xl-5 { margin: 3rem !important; }
  .mt-xl-5, .my-xl-5 { margin-top: 3rem !important; }
  .mr-xl-5, .mx-xl-5 { margin-right: 3rem !important; }
  .mb-xl-5, .my-xl-5 { margin-bottom: 3rem !important; }
  .ml-xl-5, .mx-xl-5 { margin-left: 3rem !important; }
  .p-xl-0 { padding: 0px !important; }
  .pt-xl-0, .py-xl-0 { padding-top: 0px !important; }
  .pr-xl-0, .px-xl-0 { padding-right: 0px !important; }
  .pb-xl-0, .py-xl-0 { padding-bottom: 0px !important; }
  .pl-xl-0, .px-xl-0 { padding-left: 0px !important; }
  .p-xl-1 { padding: 0.25rem !important; }
  .pt-xl-1, .py-xl-1 { padding-top: 0.25rem !important; }
  .pr-xl-1, .px-xl-1 { padding-right: 0.25rem !important; }
  .pb-xl-1, .py-xl-1 { padding-bottom: 0.25rem !important; }
  .pl-xl-1, .px-xl-1 { padding-left: 0.25rem !important; }
  .p-xl-2 { padding: 0.5rem !important; }
  .pt-xl-2, .py-xl-2 { padding-top: 0.5rem !important; }
  .pr-xl-2, .px-xl-2 { padding-right: 0.5rem !important; }
  .pb-xl-2, .py-xl-2 { padding-bottom: 0.5rem !important; }
  .pl-xl-2, .px-xl-2 { padding-left: 0.5rem !important; }
  .p-xl-3 { padding: 1rem !important; }
  .pt-xl-3, .py-xl-3 { padding-top: 1rem !important; }
  .pr-xl-3, .px-xl-3 { padding-right: 1rem !important; }
  .pb-xl-3, .py-xl-3 { padding-bottom: 1rem !important; }
  .pl-xl-3, .px-xl-3 { padding-left: 1rem !important; }
  .p-xl-4 { padding: 1.5rem !important; }
  .pt-xl-4, .py-xl-4 { padding-top: 1.5rem !important; }
  .pr-xl-4, .px-xl-4 { padding-right: 1.5rem !important; }
  .pb-xl-4, .py-xl-4 { padding-bottom: 1.5rem !important; }
  .pl-xl-4, .px-xl-4 { padding-left: 1.5rem !important; }
  .p-xl-5 { padding: 3rem !important; }
  .pt-xl-5, .py-xl-5 { padding-top: 3rem !important; }
  .pr-xl-5, .px-xl-5 { padding-right: 3rem !important; }
  .pb-xl-5, .py-xl-5 { padding-bottom: 3rem !important; }
  .pl-xl-5, .px-xl-5 { padding-left: 3rem !important; }
  .m-xl-auto { margin: auto !important; }
  .mt-xl-auto, .my-xl-auto { margin-top: auto !important; }
  .mr-xl-auto, .mx-xl-auto { margin-right: auto !important; }
  .mb-xl-auto, .my-xl-auto { margin-bottom: auto !important; }
  .ml-xl-auto, .mx-xl-auto { margin-left: auto !important; }
}

.text-justify { text-align: justify !important; }

.text-nowrap { white-space: nowrap !important; }

.text-truncate { overflow: hidden; text-overflow: ellipsis; white-space: no=
wrap; }

.text-left { text-align: left !important; }

.text-right { text-align: right !important; }

.text-center { text-align: center !important; }

@media (min-width: 576px) {
  .text-sm-left { text-align: left !important; }
  .text-sm-right { text-align: right !important; }
  .text-sm-center { text-align: center !important; }
}

@media (min-width: 768px) {
  .text-md-left { text-align: left !important; }
  .text-md-right { text-align: right !important; }
  .text-md-center { text-align: center !important; }
}

@media (min-width: 992px) {
  .text-lg-left { text-align: left !important; }
  .text-lg-right { text-align: right !important; }
  .text-lg-center { text-align: center !important; }
}

@media (min-width: 1200px) {
  .text-xl-left { text-align: left !important; }
  .text-xl-right { text-align: right !important; }
  .text-xl-center { text-align: center !important; }
}

.text-lowercase { text-transform: lowercase !important; }

.text-uppercase { text-transform: uppercase !important; }

.text-capitalize { text-transform: capitalize !important; }

.font-weight-light { font-weight: 300 !important; }

.font-weight-normal { font-weight: 400 !important; }

.font-weight-bold { font-weight: 700 !important; }

.font-italic { font-style: italic !important; }

.text-white { color: rgb(255, 255, 255) !important; }

.text-primary { color: rgb(0, 123, 255) !important; }

a.text-primary:hover, a.text-primary:focus { color: rgb(0, 98, 204) !import=
ant; }

.text-secondary { color: rgb(108, 117, 125) !important; }

a.text-secondary:hover, a.text-secondary:focus { color: rgb(84, 91, 98) !im=
portant; }

.text-success { color: rgb(40, 167, 69) !important; }

a.text-success:hover, a.text-success:focus { color: rgb(30, 126, 52) !impor=
tant; }

.text-info { color: rgb(23, 162, 184) !important; }

a.text-info:hover, a.text-info:focus { color: rgb(17, 122, 139) !important;=
 }

.text-warning { color: rgb(255, 193, 7) !important; }

a.text-warning:hover, a.text-warning:focus { color: rgb(211, 158, 0) !impor=
tant; }

.text-danger { color: rgb(220, 53, 69) !important; }

a.text-danger:hover, a.text-danger:focus { color: rgb(189, 33, 48) !importa=
nt; }

.text-light { color: rgb(248, 249, 250) !important; }

a.text-light:hover, a.text-light:focus { color: rgb(218, 224, 229) !importa=
nt; }

.text-dark { color: rgb(52, 58, 64) !important; }

a.text-dark:hover, a.text-dark:focus { color: rgb(29, 33, 36) !important; }

.text-muted { color: rgb(108, 117, 125) !important; }

.text-hide { font: 0px / 0 a; color: transparent; text-shadow: none; backgr=
ound-color: transparent; border: 0px; }

.visible { visibility: visible !important; }

.invisible { visibility: hidden !important; }

@media print {
  *, ::before, ::after { text-shadow: none !important; box-shadow: none !im=
portant; }
  a:not(.btn) { text-decoration: underline; }
  abbr[title]::after { content: " (" attr(title) ")"; }
  pre { white-space: pre-wrap !important; }
  pre, blockquote { border: 1px solid rgb(153, 153, 153); break-inside: avo=
id; }
  thead { display: table-header-group; }
  tr, img { break-inside: avoid; }
  p, h2, h3 { orphans: 3; widows: 3; }
  h2, h3 { break-after: avoid; }
  @page { size: a3; }
  body { min-width: 992px !important; }
  .container { min-width: 992px !important; }
  .navbar { display: none; }
  .badge { border: 1px solid rgb(0, 0, 0); }
  .table { border-collapse: collapse !important; }
  .table td, .table th { background-color: rgb(255, 255, 255) !important; }
  .table-bordered th, .table-bordered td { border: 1px solid rgb(221, 221, =
221) !important; }
}

.highlight table td { padding: 5px; }

.highlight table pre { margin: 0px; }

.highlight .cm { color: rgb(153, 153, 136); font-style: italic; }

.highlight .cp { color: rgb(153, 153, 153); font-weight: bold; }

.highlight .c1 { color: rgb(153, 153, 136); font-style: italic; }

.highlight .cs { color: rgb(153, 153, 153); font-weight: bold; font-style: =
italic; }

.highlight .c, .highlight .cd { color: rgb(153, 153, 136); font-style: ital=
ic; }

.highlight .err { color: rgb(166, 23, 23); background-color: rgb(227, 210, =
210); }

.highlight .gd { color: rgb(0, 0, 0); background-color: rgb(255, 221, 221);=
 }

.highlight .ge { color: rgb(0, 0, 0); font-style: italic; }

.highlight .gr { color: rgb(170, 0, 0); }

.highlight .gh { color: rgb(153, 153, 153); }

.highlight .gi { color: rgb(0, 0, 0); background-color: rgb(221, 255, 221);=
 }

.highlight .go { color: rgb(136, 136, 136); }

.highlight .gp { color: rgb(85, 85, 85); }

.highlight .gs { font-weight: bold; }

.highlight .gu { color: rgb(170, 170, 170); }

.highlight .gt { color: rgb(170, 0, 0); }

.highlight .kc { color: rgb(0, 0, 0); font-weight: bold; }

.highlight .kd { color: rgb(0, 0, 0); font-weight: bold; }

.highlight .kn { color: rgb(0, 0, 0); font-weight: bold; }

.highlight .kp { color: rgb(0, 0, 0); font-weight: bold; }

.highlight .kr { color: rgb(0, 0, 0); font-weight: bold; }

.highlight .kt { color: rgb(68, 85, 136); font-weight: bold; }

.highlight .k, .highlight .kv { color: rgb(0, 0, 0); font-weight: bold; }

.highlight .mf { color: rgb(0, 153, 153); }

.highlight .mh { color: rgb(0, 153, 153); }

.highlight .il { color: rgb(0, 153, 153); }

.highlight .mi { color: rgb(0, 153, 153); }

.highlight .mo { color: rgb(0, 153, 153); }

.highlight .m, .highlight .mb, .highlight .mx { color: rgb(0, 153, 153); }

.highlight .sb { color: rgb(221, 17, 68); }

.highlight .sc { color: rgb(221, 17, 68); }

.highlight .sd { color: rgb(221, 17, 68); }

.highlight .s2 { color: rgb(221, 17, 68); }

.highlight .se { color: rgb(221, 17, 68); }

.highlight .sh { color: rgb(221, 17, 68); }

.highlight .si { color: rgb(221, 17, 68); }

.highlight .sx { color: rgb(221, 17, 68); }

.highlight .sr { color: rgb(0, 153, 38); }

.highlight .s1 { color: rgb(221, 17, 68); }

.highlight .ss { color: rgb(153, 0, 115); }

.highlight .s { color: rgb(221, 17, 68); }

.highlight .na { color: rgb(0, 128, 128); }

.highlight .bp { color: rgb(82, 82, 82); }

.highlight .nb { color: rgb(0, 134, 179); }

.highlight .nc { color: rgb(68, 85, 136); font-weight: bold; }

.highlight .no { color: rgb(0, 128, 128); }

.highlight .nd { color: rgb(60, 93, 93); font-weight: bold; }

.highlight .ni { color: rgb(128, 0, 128); }

.highlight .ne { color: rgb(153, 0, 0); font-weight: bold; }

.highlight .nf { color: rgb(153, 0, 0); font-weight: bold; }

.highlight .nl { color: rgb(153, 0, 0); font-weight: bold; }

.highlight .nn { color: rgb(85, 85, 85); }

.highlight .nt { color: rgb(0, 0, 128); }

.highlight .vc { color: rgb(0, 128, 128); }

.highlight .vg { color: rgb(0, 128, 128); }

.highlight .vi { color: rgb(0, 128, 128); }

.highlight .nv { color: rgb(0, 128, 128); }

.highlight .ow { color: rgb(0, 0, 0); font-weight: bold; }

.highlight .o { color: rgb(0, 0, 0); font-weight: bold; }

.highlight .n { color: rgb(0, 0, 0); font-weight: bold; }

.highlight .p { color: rgb(0, 0, 0); font-weight: bold; }

.highlight .w { color: rgb(187, 187, 187); }

.highlight { background-color: rgb(248, 248, 248); }

@font-face { font-family: FreightSans; font-weight: 700; font-style: normal=
; src: url("../fonts/FreightSans/freight-sans-bold.woff2") format("woff2"),=
 url("../fonts/FreightSans/freight-sans-bold.woff") format("woff"); }

@font-face { font-family: FreightSans; font-weight: 700; font-style: italic=
; src: url("../fonts/FreightSans/freight-sans-bold-italic.woff2") format("w=
off2"), url("../fonts/FreightSans/freight-sans-bold-italic.woff") format("w=
off"); }

@font-face { font-family: FreightSans; font-weight: 500; font-style: normal=
; src: url("../fonts/FreightSans/freight-sans-medium.woff2") format("woff2"=
), url("../fonts/FreightSans/freight-sans-medium.woff") format("woff"); }

@font-face { font-family: FreightSans; font-weight: 500; font-style: italic=
; src: url("../fonts/FreightSans/freight-sans-medium-italic.woff2") format(=
"woff2"), url("../fonts/FreightSans/freight-sans-medium-italic.woff") forma=
t("woff"); }

@font-face { font-family: FreightSans; font-weight: 100; font-style: normal=
; src: url("../fonts/FreightSans/freight-sans-light.woff2") format("woff2")=
, url("../fonts/FreightSans/freight-sans-light.woff") format("woff"); }

@font-face { font-family: FreightSans; font-weight: 100; font-style: italic=
; src: url("../fonts/FreightSans/freight-sans-light-italic.woff2") format("=
woff2"), url("../fonts/FreightSans/freight-sans-light-italic.woff") format(=
"woff"); }

@font-face { font-family: FreightSans; font-weight: 400; font-style: italic=
; src: url("../fonts/FreightSans/freight-sans-book-italic.woff2") format("w=
off2"), url("../fonts/FreightSans/freight-sans-book-italic.woff") format("w=
off"); }

@font-face { font-family: FreightSans; font-weight: 400; font-style: normal=
; src: url("../fonts/FreightSans/freight-sans-book.woff2") format("woff2"),=
 url("../fonts/FreightSans/freight-sans-book.woff") format("woff"); }

@font-face { font-family: IBMPlexMono; font-weight: 600; font-style: normal=
; unicode-range: U+20-7F; src: local("IBMPlexMono-SemiBold"), url("../fonts=
/IBMPlexMono/IBMPlexMono-SemiBold.woff2") format("woff2"), url("../fonts/IB=
MPlexMono/IBMPlexMono-SemiBold.woff") format("woff"); }

@font-face { font-family: IBMPlexMono; font-weight: 500; font-style: normal=
; unicode-range: U+20-7F; src: local("IBMPlexMono-Medium"), url("../fonts/I=
BMPlexMono/IBMPlexMono-Medium.woff2") format("woff2"), url("../fonts/IBMPle=
xMono/IBMPlexMono-Medium.woff") format("woff"); }

@font-face { font-family: IBMPlexMono; font-weight: 400; font-style: normal=
; unicode-range: U+20-7F; src: local("IBMPlexMono-Regular"), url("../fonts/=
IBMPlexMono/IBMPlexMono-Regular.woff2") format("woff2"), url("../fonts/IBMP=
lexMono/IBMPlexMono-Regular.woff") format("woff"); }

@font-face { font-family: IBMPlexMono; font-weight: 300; font-style: normal=
; unicode-range: U+20-7F; src: local("IBMPlexMono-Light"), url("../fonts/IB=
MPlexMono/IBMPlexMono-Light.woff2") format("woff2"), url("../fonts/IBMPlexM=
ono/IBMPlexMono-Light.woff") format("woff"); }

html { position: relative; min-height: 100%; font-size: 12px; }

@media screen and (min-width: 768px) {
  html { font-size: 16px; }
}

* { box-sizing: border-box; }

body { font-family: FreightSans, "Helvetica Neue", Helvetica, Arial, sans-s=
erif; }

a:link, a:visited, a:hover { text-decoration: none; color: rgb(228, 76, 44)=
; }

a.with-right-arrow, .btn.with-right-arrow { padding-right: 1.375rem; positi=
on: relative; background-image: url("../images/chevron-right-orange.svg"); =
background-size: 6px 13px; background-position: right 5px center; backgroun=
d-repeat: no-repeat; }

@media screen and (min-width: 768px) {
  a.with-right-arrow, .btn.with-right-arrow { background-size: 8px 14px; ba=
ckground-position: right 12px center; padding-right: 2rem; }
}

::-webkit-input-placeholder { color: rgb(228, 76, 44); }

.email-subscribe-form input.email { color: rgb(228, 76, 44); border-top: no=
ne; border-right: none; border-left: none; border-image: initial; border-bo=
ttom: 1px solid rgb(147, 147, 147); width: 100%; background-color: transpar=
ent; outline: none; font-size: 1.125rem; letter-spacing: 0.25px; line-heigh=
t: 2.25rem; }

.email-subscribe-form input[type=3D"submit"] { position: absolute; right: 0=
px; top: 10px; height: 15px; width: 15px; background-image: url("../images/=
arrow-right-with-tail.svg"); background-color: transparent; background-repe=
at: no-repeat; background-size: 15px 15px; background-position: center cent=
er; appearance: none; border: 0px; }

.email-subscribe-form-fields-wrapper { position: relative; }

.anchorjs-link { color: rgb(108, 108, 109) !important; }

@media screen and (min-width: 768px) {
  .anchorjs-link:hover { color: inherit; text-decoration: none !important; =
}
}

.pytorch-article #table-of-contents { display: none; }

code, kbd, pre, samp { font-family: IBMPlexMono, SFMono-Regular, Menlo, Mon=
aco, Consolas, "Liberation Mono", "Courier New", monospace; }

code span, kbd span, pre span, samp span { font-family: IBMPlexMono, SFMono=
-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monosp=
ace; }

pre { padding: 1.125rem; }

pre code { font-size: 0.875rem; }

pre.highlight { background-color: rgb(243, 244, 247); line-height: 1.3125re=
m; }

code.highlighter-rouge { color: rgb(108, 108, 109); background-color: rgb(2=
43, 244, 247); padding: 2px 6px; }

a:link code.highlighter-rouge, a:visited code.highlighter-rouge, a:hover co=
de.highlighter-rouge { color: rgb(73, 116, 209); }

a:link.has-code, a:visited.has-code, a:hover.has-code { color: rgb(73, 116,=
 209); }

p code, h1 code, h2 code, h3 code, h4 code, h5 code, h6 code { font-size: 7=
8.5%; }

pre { white-space: pre-wrap; overflow-wrap: break-word; }

.header-holder { height: 68px; align-items: center; display: flex; left: 0p=
x; margin-left: auto; margin-right: auto; position: fixed; right: 0px; top:=
 0px; width: 100%; z-index: 9999; background-color: rgb(255, 255, 255); bor=
der-bottom: 1px solid rgb(226, 226, 226); }

@media screen and (min-width: 1100px) {
  .header-holder { height: 90px; }
}

.header-container { position: relative; display: flex; align-items: center;=
 }

.header-container::before, .header-container::after { content: ""; display:=
 table; }

.header-container::after { clear: both; }

.header-container { }

@media screen and (min-width: 1100px) {
  .header-container { display: block; }
}

.header-logo { height: 23px; width: 93px; background-image: url("../images/=
logo.svg"); background-repeat: no-repeat; background-size: 93px 23px; displ=
ay: block; float: left; z-index: 10; }

@media screen and (min-width: 1100px) {
  .header-logo { background-size: 108px 27px; position: absolute; height: 2=
7px; width: 108px; top: 4px; float: none; }
}

.main-menu-open-button { background-image: url("../images/icon-menu-dots.sv=
g"); background-position: center center; background-size: 25px 7px; backgro=
und-repeat: no-repeat; width: 25px; height: 17px; position: absolute; right=
: 0px; top: 4px; }

@media screen and (min-width: 1100px) {
  .main-menu-open-button { display: none; }
}

.header-holder .main-menu { display: none; }

@media screen and (min-width: 1100px) {
  .header-holder .main-menu { display: flex; align-items: center; justify-c=
ontent: flex-end; }
}

.header-holder .main-menu ul { display: flex; align-items: center; margin: =
0px; }

.header-holder .main-menu ul li { display: inline-block; margin-right: 40px=
; position: relative; }

.header-holder .main-menu ul li.active::after { content: "=E2=80=A2"; botto=
m: -24px; color: rgb(228, 76, 44); font-size: 1.375rem; left: 0px; position=
: absolute; right: 0px; text-align: center; }

.header-holder .main-menu ul li.active a { color: rgb(228, 76, 44); }

.header-holder .main-menu ul li.docs-active::after { content: "=E2=80=A2"; =
bottom: -24px; color: rgb(228, 76, 44); font-size: 1.375rem; left: -24px; p=
osition: absolute; right: 0px; text-align: center; }

.header-holder .main-menu ul li:last-of-type { margin-right: 0px; }

.header-holder .main-menu ul li a { color: rgb(255, 255, 255); font-size: 1=
.3rem; letter-spacing: 0px; line-height: 2.125rem; text-align: center; text=
-decoration: none; }

@media screen and (min-width: 1100px) {
  .header-holder .main-menu ul li a:hover { color: rgb(228, 76, 44); }
}

.mobile-main-menu { display: none; }

.mobile-main-menu.open { background-color: rgb(38, 38, 38); display: block;=
 height: 100%; left: 0px; margin-left: auto; margin-right: auto; min-height=
: 100%; position: fixed; right: 0px; top: 0px; width: 100%; z-index: 99999;=
 }

.mobile-main-menu .container-fluid { align-items: center; display: flex; he=
ight: 68px; position: relative; }

.mobile-main-menu .container-fluid::before, .mobile-main-menu .container-fl=
uid::after { content: ""; display: table; }

.mobile-main-menu .container-fluid::after { clear: both; }

.mobile-main-menu .container-fluid { }

.mobile-main-menu.open ul { list-style-type: none; padding: 0px; }

.mobile-main-menu.open ul li a, .mobile-main-menu.open .resources-mobile-me=
nu-title { font-size: 2rem; color: rgb(255, 255, 255); letter-spacing: 0px;=
 line-height: 4rem; text-decoration: none; }

.mobile-main-menu.open ul li.active a { color: rgb(228, 76, 44); }

.main-menu-close-button { background-image: url("../images/icon-close.svg")=
; background-position: center center; background-repeat: no-repeat; backgro=
und-size: 24px 24px; height: 24px; position: absolute; right: 0px; width: 2=
4px; top: -4px; }

.mobile-main-menu-header-container { position: relative; }

.mobile-main-menu-links-container { display: flex; align-items: center; pad=
ding-left: 2.8125rem; height: 90vh; margin-top: -25px; padding-top: 50%; ov=
erflow-y: scroll; }

.mobile-main-menu-links-container .main-menu { height: 100vh; }

.mobile-main-menu-links-container ul.resources-mobile-menu-items li { paddi=
ng-left: 15px; }

.site-footer { padding: 2.5rem 0px; width: 100%; background:  0% 0% / 100% =
rgb(0, 0, 0); margin-left: 0px; margin-right: 0px; position: relative; z-in=
dex: 201; }

@media screen and (min-width: 768px) {
  .site-footer { padding: 5rem 0px; }
}

.site-footer p { color: rgb(255, 255, 255); }

.site-footer ul { list-style-type: none; padding-left: 0px; margin-bottom: =
0px; }

.site-footer ul li { font-size: 1.125rem; line-height: 2rem; color: rgb(160=
, 160, 161); padding-bottom: 0.375rem; }

.site-footer ul li.list-title { padding-bottom: 0.75rem; color: rgb(255, 25=
5, 255); }

.site-footer a:link, .site-footer a:visited { color: inherit; }

@media screen and (min-width: 768px) {
  .site-footer a:hover { color: rgb(228, 76, 44); }
}

.site-footer .privacy-policy { background: rgb(0, 0, 0); display: flex; bor=
der-bottom: 1px solid white; padding-bottom: 10px; }

.site-footer .privacy-policy-links { background: rgb(0, 0, 0); padding-top:=
 1rem; padding-right: 1rem; display: inline-flex; color: white; }

.site-footer .footer-links-wrapper { display: flex; flex-wrap: wrap; border=
-bottom: 1px solid white; padding-bottom: 1rem; }

.site-footer .copyright { padding-top: 1rem; padding-right: 1rem; display: =
inline-flex; color: white; }

.site-footer .copyright p { color: white; }

.site-footer .copyright a { color: red; }

.docs-tutorials-resources { background-color: rgb(38, 38, 38); color: rgb(2=
55, 255, 255); padding-top: 2.5rem; padding-bottom: 2.5rem; position: relat=
ive; z-index: 201; }

@media screen and (min-width: 768px) {
  .docs-tutorials-resources { padding-top: 5rem; padding-bottom: 5rem; }
}

.docs-tutorials-resources p { color: rgb(146, 146, 146); font-size: 1.125re=
m; }

.docs-tutorials-resources h2 { font-size: 1.5rem; letter-spacing: -0.25px; =
text-transform: none; margin-bottom: 0.25rem; }

@media screen and (min-width: 768px) {
  .docs-tutorials-resources h2 { margin-bottom: 1.25rem; }
}

.docs-tutorials-resources .col-md-4 { margin-bottom: 2rem; text-align: cent=
er; }

@media screen and (min-width: 768px) {
  .docs-tutorials-resources .col-md-4 { margin-bottom: 0px; }
}

.docs-tutorials-resources .with-right-arrow { margin-left: 12px; }

.docs-tutorials-resources .with-right-arrow:hover { background-image: url("=
../images/chevron-right-white.svg"); }

.docs-tutorials-resources p { font-size: 1rem; line-height: 1.5rem; letter-=
spacing: 0.22px; color: rgb(147, 147, 147); margin-bottom: 0px; }

@media screen and (min-width: 768px) {
  .docs-tutorials-resources p { margin-bottom: 1.25rem; }
}

.docs-tutorials-resources a { font-size: 1.125rem; color: rgb(228, 76, 44);=
 }

.docs-tutorials-resources a:hover { color: rgb(255, 255, 255); }

.footer-container { position: relative; }

@media screen and (min-width: 768px) {
  .footer-logo-wrapper { position: absolute; top: 0px; left: 30px; }
}

.footer-logo { background-image: url("../images/logo-icon.svg"); background=
-position: center center; background-repeat: no-repeat; background-size: 20=
px 24px; display: block; height: 24px; margin-bottom: 2.8125rem; width: 20p=
x; }

@media screen and (min-width: 768px) {
  .footer-logo { background-size: 29px 36px; height: 36px; margin-bottom: 0=
px; width: 29px; }
}

.footer-links-wrapper { display: flex; flex-wrap: wrap; }

@media screen and (min-width: 768px) {
  .footer-links-wrapper { flex-wrap: initial; justify-content: flex-end; }
}

.footer-links-col { margin-bottom: 3.75rem; width: 50%; }

@media screen and (min-width: 768px) {
  .footer-links-col { margin-bottom: 0px; width: 14%; margin-right: 23px; }
  .footer-links-col.follow-us-col { width: 18%; margin-right: 0px; }
}

@media (min-width: 768px) and (max-width: 1239px) {
  .footer-links-col { width: 18%; margin-right: 30px; }
}

.footer-social-icons { margin: 8.5625rem 0px 2.5rem; }

.footer-social-icons a { height: 32px; width: 32px; display: inline-block; =
background-color: rgb(204, 205, 209); border-radius: 50%; margin-right: 5px=
; }

.footer-social-icons a.facebook { background-image: url("../images/logo-fac=
ebook-dark.svg"); background-position: center center; background-size: 9px =
18px; background-repeat: no-repeat; }

.footer-social-icons a.twitter { background-image: url("../images/logo-twit=
ter-dark.svg"); background-position: center center; background-size: 17px 1=
7px; background-repeat: no-repeat; }

.footer-social-icons a.youtube { background-image: url("../images/logo-yout=
ube-dark.svg"); background-position: center center; background-repeat: no-r=
epeat; }

.site-footer .mc-field-group { margin-top: -2px; }

article.pytorch-article { max-width: 920px; margin: 0px auto; }

article.pytorch-article h2, article.pytorch-article h3, article.pytorch-art=
icle h4, article.pytorch-article h5, article.pytorch-article h6 { margin: 1=
.375rem 0px; color: rgb(38, 38, 38); }

article.pytorch-article h2 { font-size: 1.625rem; letter-spacing: 1.33px; l=
ine-height: 2rem; text-transform: none; }

article.pytorch-article h3 { font-size: 1.5rem; letter-spacing: -0.25px; li=
ne-height: 1.875rem; text-transform: none; }

article.pytorch-article h4, article.pytorch-article h5, article.pytorch-art=
icle h6 { font-size: 1.125rem; letter-spacing: -0.19px; line-height: 1.875r=
em; }

article.pytorch-article p { margin-bottom: 1.125rem; }

article.pytorch-article p, article.pytorch-article ul li, article.pytorch-a=
rticle ol li, article.pytorch-article dl dt, article.pytorch-article dl dd,=
 article.pytorch-article blockquote { font-size: 1rem; line-height: 1.375re=
m; color: rgb(38, 38, 38); letter-spacing: 0.01px; font-weight: 500; }

article.pytorch-article table { margin-bottom: 2.5rem; width: 100%; }

article.pytorch-article table thead { border-bottom: 1px solid rgb(202, 202=
, 202); }

article.pytorch-article table th { padding: 0.625rem; color: rgb(38, 38, 38=
); }

article.pytorch-article table td { padding: 0.3125rem; }

article.pytorch-article table tr th:first-of-type, article.pytorch-article =
table tr td:first-of-type { padding-left: 0px; }

article.pytorch-article table.docutils.field-list th.field-name { padding: =
0.3125rem 0.3125rem 0.3125rem 0px; }

article.pytorch-article table.docutils.field-list td.field-body { padding: =
0.3125rem; }

article.pytorch-article table.docutils.field-list td.field-body p:last-of-t=
ype { margin-bottom: 0px; }

article.pytorch-article ul, article.pytorch-article ol { margin: 1.5rem 0px=
 3.125rem; }

@media screen and (min-width: 768px) {
  article.pytorch-article ul, article.pytorch-article ol { padding-left: 6.=
25rem; }
}

article.pytorch-article ul li, article.pytorch-article ol li { margin-botto=
m: 0.625rem; }

article.pytorch-article dl { margin-bottom: 1.5rem; }

article.pytorch-article dl dt { margin-bottom: 0.75rem; }

article.pytorch-article pre { margin-bottom: 2.5rem; }

article.pytorch-article hr { margin-top: 4.6875rem; margin-bottom: 4.6875re=
m; }

article.pytorch-article blockquote { margin: 0px auto 2.5rem; width: 65%; }

article.pytorch-article img { width: 100%; }

html { height: 100%; }

@media screen and (min-width: 768px) {
  html { font-size: 16px; }
}

body { background: rgb(255, 255, 255); height: 100%; margin: 0px; }

body.no-scroll { height: 100%; overflow: hidden; }

p { margin-top: 0px; margin-bottom: 1.125rem; }

p a:link, p a:visited, p a:hover { color: rgb(228, 76, 44); text-decoration=
: none; }

@media screen and (min-width: 768px) {
  p a:hover { text-decoration: underline; }
}

p a:link, p a:visited, p a:hover { color: rgb(238, 76, 44); }

.wy-breadcrumbs li a { color: rgb(238, 76, 44); }

ul.pytorch-breadcrumbs { padding-left: 0px; list-style-type: none; }

ul.pytorch-breadcrumbs li { display: inline-block; font-size: 0.875rem; }

ul.pytorch-breadcrumbs a { color: rgb(238, 76, 44); text-decoration: none; =
}

.table-of-contents-link-wrapper { display: block; margin-top: 0px; padding:=
 1.25rem 1.875rem; background-color: rgb(243, 244, 247); position: relative=
; color: rgb(38, 38, 38); font-size: 1.25rem; }

.table-of-contents-link-wrapper.is-open .toggle-table-of-contents { transfo=
rm: rotate(180deg); }

@media screen and (min-width: 1100px) {
  .table-of-contents-link-wrapper { display: none; }
}

.toggle-table-of-contents { background-image: url("../images/chevron-down-g=
rey.svg"); background-position: center center; background-repeat: no-repeat=
; background-size: 18px 18px; height: 100%; position: absolute; right: 21px=
; width: 30px; top: 0px; }

.tutorials-header .header-logo { background-image: url("../images/logo-dark=
.svg"); }

.tutorials-header .main-menu ul li a { color: rgb(38, 38, 38); }

.tutorials-header .main-menu-open-button { background-image: url("../images=
/icon-menu-dots-dark.svg"); }

.rst-content footer .rating-hr.hr-top { margin-bottom: -0.0625rem; }

.rst-content footer .rating-hr.hr-bottom { margin-top: -0.0625rem; }

.rst-content footer .rating-container { display: inline-flex; font-size: 1.=
125rem; }

.rst-content footer .rating-container .rating-prompt, .rst-content footer .=
rating-container .was-helpful-thank-you { padding: 0.625rem 1.25rem; }

.rst-content footer .rating-container .was-helpful-thank-you { display: non=
e; }

.rst-content footer .rating-container .rating-prompt.yes-link, .rst-content=
 footer .rating-container .rating-prompt.no-link { color: rgb(228, 76, 44);=
 cursor: pointer; }

.rst-content footer .rating-container .rating-prompt.yes-link:hover, .rst-c=
ontent footer .rating-container .rating-prompt.no-link:hover { background-c=
olor: rgb(228, 76, 44); color: rgb(255, 255, 255); }

.rst-content footer .rating-container .stars-outer { display: inline-block;=
 position: relative; font-family: FontAwesome; padding: 0.625rem 1.25rem; }

.rst-content footer .rating-container .stars-outer i { cursor: pointer; }

.rst-content footer .rating-container .stars-outer .star-fill { color: rgb(=
238, 76, 44); }

.rst-content footer div[role=3D"contentinfo"] { padding-top: 2.5rem; }

.rst-content footer div[role=3D"contentinfo"] p { margin-bottom: 0px; }

h1 { font-size: 2rem; letter-spacing: 1.78px; line-height: 2.5rem; text-tra=
nsform: uppercase; margin: 1.375rem 0px; }

span.pre { color: rgb(108, 108, 109); background-color: rgb(243, 244, 247);=
 padding: 2px 0px; }

pre { padding: 1.375rem; }

.highlight .c1 { color: rgb(108, 108, 109); }

.headerlink { display: none !important; }

a:link.has-code, a:hover.has-code, a:visited.has-code { color: rgb(73, 116,=
 209); }

a:link.has-code span, a:hover.has-code span, a:visited.has-code span { colo=
r: rgb(73, 116, 209); }

article.pytorch-article ul, article.pytorch-article ol { padding-left: 1.87=
5rem; margin: 0px; }

article.pytorch-article ul li, article.pytorch-article ol li { margin: 0px;=
 line-height: 1.75rem; }

article.pytorch-article ul p, article.pytorch-article ol p { line-height: 1=
.75rem; margin-bottom: 0px; }

article.pytorch-article ul ul, article.pytorch-article ul ol, article.pytor=
ch-article ol ul, article.pytorch-article ol ol { margin: 0px; }

article.pytorch-article h1, article.pytorch-article h2, article.pytorch-art=
icle h3, article.pytorch-article h4, article.pytorch-article h5, article.py=
torch-article h6 { font-weight: normal; }

article.pytorch-article h1 a, article.pytorch-article h2 a, article.pytorch=
-article h3 a, article.pytorch-article h4 a, article.pytorch-article h5 a, =
article.pytorch-article h6 a { color: rgb(38, 38, 38); }

article.pytorch-article p.caption { margin-top: 1.25rem; }

article.pytorch-article .section:first-of-type h1:first-of-type { margin-to=
p: 0px; }

article.pytorch-article .sphx-glr-thumbcontainer { margin: 0px 0px 5%; bord=
er: 1px solid rgb(214, 215, 216); border-radius: 0px; width: 45%; text-alig=
n: center; }

@media screen and (max-width: 1100px) {
  article.pytorch-article .sphx-glr-thumbcontainer:nth-child(2n+1) { margin=
-left: 0px; margin-right: 2.5%; }
  article.pytorch-article .sphx-glr-thumbcontainer:nth-child(2n) { margin-r=
ight: 0px; margin-left: 2.5%; }
  article.pytorch-article .sphx-glr-thumbcontainer .figure { width: 40%; }
}

@media screen and (min-width: 1101px) {
  article.pytorch-article .sphx-glr-thumbcontainer { margin-right: 3%; marg=
in-bottom: 3%; width: 30%; }
}

article.pytorch-article .sphx-glr-thumbcontainer .caption-text a { font-siz=
e: 1rem; color: rgb(38, 38, 38); letter-spacing: 0px; line-height: 1.5rem; =
text-decoration: none; }

article.pytorch-article .sphx-glr-thumbcontainer:hover { box-shadow: none; =
border-bottom-color: rgb(255, 255, 255); }

article.pytorch-article .sphx-glr-thumbcontainer:hover .figure::before { bo=
ttom: 100%; }

article.pytorch-article .sphx-glr-thumbcontainer .figure { width: 80%; }

article.pytorch-article .sphx-glr-thumbcontainer .figure::before { content:=
 ""; display: block; position: absolute; inset: 0px 0px 35%; background: rg=
b(138, 148, 179); opacity: 0.1; }

article.pytorch-article .sphx-glr-thumbcontainer .figure a.reference.intern=
al { text-align: left; }

@media screen and (min-width: 768px) {
  article.pytorch-article .sphx-glr-thumbcontainer::after { content: ""; di=
splay: block; width: 0px; height: 1px; position: absolute; bottom: 0px; lef=
t: 0px; background-color: rgb(228, 76, 44); transition: width 0.25s ease-in=
-out 0s; }
  article.pytorch-article .sphx-glr-thumbcontainer:hover::after { width: 10=
0%; }
}

@media screen and (min-width: 768px) {
  article.pytorch-article .sphx-glr-thumbcontainer::after { background-colo=
r: rgb(238, 76, 44); }
}

article.pytorch-article .section :not(dt) > code { color: rgb(38, 38, 38); =
border-top: 2px solid rgb(255, 255, 255); background-color: rgb(255, 255, 2=
55); border-bottom: 2px solid rgb(255, 255, 255); padding: 0px 3px; -webkit=
-box-decoration-break: clone; }

article.pytorch-article .section :not(dt) > code .pre { outline: 0px; paddi=
ng: 0px; }

article.pytorch-article .function dt, article.pytorch-article .attribute dt=
, article.pytorch-article .class .attribute dt, article.pytorch-article .cl=
ass dt { position: relative; background: rgb(243, 244, 247); padding: 0.5re=
m 100px 0.5rem 0.5rem; border-left: 3px solid rgb(238, 76, 44); overflow-wr=
ap: break-word; }

article.pytorch-article .function dt em.property, article.pytorch-article .=
attribute dt em.property, article.pytorch-article .class dt em.property { f=
ont-family: inherit; }

article.pytorch-article .function dt em, article.pytorch-article .attribute=
 dt em, article.pytorch-article .class .attribute dt em, article.pytorch-ar=
ticle .class dt em, article.pytorch-article .function dt .sig-paren, articl=
e.pytorch-article .attribute dt .sig-paren, article.pytorch-article .class =
dt .sig-paren { font-family: IBMPlexMono, SFMono-Regular, Menlo, Monaco, Co=
nsolas, "Liberation Mono", "Courier New", monospace; font-size: 87.5%; }

article.pytorch-article .function dt a, article.pytorch-article .attribute =
dt a, article.pytorch-article .class .attribute dt a, article.pytorch-artic=
le .class dt a { right: 30px; padding-right: 0px; top: 50%; transform: pers=
pective(1px) translateY(-50%); }

article.pytorch-article .function dt:hover .viewcode-link, article.pytorch-=
article .attribute dt:hover .viewcode-link, article.pytorch-article .class =
dt:hover .viewcode-link { color: rgb(238, 76, 44); }

article.pytorch-article .function .anchorjs-link, article.pytorch-article .=
attribute .anchorjs-link, article.pytorch-article .class .anchorjs-link { d=
isplay: inline; position: absolute; right: 8px; padding-left: 0px; font-siz=
e: 1.5625rem !important; }

article.pytorch-article .function dt > code, article.pytorch-article .attri=
bute dt > code, article.pytorch-article .class .attribute dt > code, articl=
e.pytorch-article .class dt > code { color: rgb(38, 38, 38); border-top: 2p=
x solid rgb(243, 244, 247); background-color: rgb(243, 244, 247); border-bo=
ttom: 2px solid rgb(243, 244, 247); -webkit-box-decoration-break: clone; }

article.pytorch-article .function .viewcode-link, article.pytorch-article .=
attribute .viewcode-link, article.pytorch-article .class .viewcode-link { p=
adding-left: 0.6rem; position: absolute; font-size: 0.875rem; color: rgb(15=
1, 151, 151); letter-spacing: 0px; line-height: 1.5rem; text-transform: upp=
ercase; }

article.pytorch-article .function dd, article.pytorch-article .attribute dd=
, article.pytorch-article .class .attribute dd, article.pytorch-article .cl=
ass dd { padding-left: 3.75rem; }

article.pytorch-article .function dd p, article.pytorch-article .attribute =
dd p, article.pytorch-article .class .attribute dd p, article.pytorch-artic=
le .class dd p { color: rgb(38, 38, 38); }

article.pytorch-article .function table tbody tr th.field-name, article.pyt=
orch-article .attribute table tbody tr th.field-name, article.pytorch-artic=
le .class table tbody tr th.field-name { white-space: nowrap; color: rgb(38=
, 38, 38); width: 20%; }

@media screen and (min-width: 768px) {
  article.pytorch-article .function table tbody tr th.field-name, article.p=
ytorch-article .attribute table tbody tr th.field-name, article.pytorch-art=
icle .class table tbody tr th.field-name { width: 15%; }
}

article.pytorch-article .function table tbody tr td.field-body, article.pyt=
orch-article .attribute table tbody tr td.field-body, article.pytorch-artic=
le .class table tbody tr td.field-body { padding: 0.625rem; width: 80%; col=
or: rgb(38, 38, 38); }

@media screen and (min-width: 768px) {
  article.pytorch-article .function table tbody tr td.field-body, article.p=
ytorch-article .attribute table tbody tr td.field-body, article.pytorch-art=
icle .class table tbody tr td.field-body { width: 85%; }
}

@media screen and (min-width: 1600px) {
  article.pytorch-article .function table tbody tr td.field-body, article.p=
ytorch-article .attribute table tbody tr td.field-body, article.pytorch-art=
icle .class table tbody tr td.field-body { padding-left: 1.25rem; }
}

article.pytorch-article .function table tbody tr td.field-body p, article.p=
ytorch-article .attribute table tbody tr td.field-body p, article.pytorch-a=
rticle .class table tbody tr td.field-body p { padding-left: 0px; }

article.pytorch-article .function table tbody tr td.field-body p:last-of-ty=
pe, article.pytorch-article .attribute table tbody tr td.field-body p:last-=
of-type, article.pytorch-article .class table tbody tr td.field-body p:last=
-of-type { margin-bottom: 0px; }

article.pytorch-article .function table tbody tr td.field-body ol, article.=
pytorch-article .attribute table tbody tr td.field-body ol, article.pytorch=
-article .class table tbody tr td.field-body ol, article.pytorch-article .f=
unction table tbody tr td.field-body ul, article.pytorch-article .attribute=
 table tbody tr td.field-body ul, article.pytorch-article .class table tbod=
y tr td.field-body ul { padding-left: 1rem; padding-bottom: 0px; }

article.pytorch-article .function table.docutils.field-list, article.pytorc=
h-article .attribute table.docutils.field-list, article.pytorch-article .cl=
ass table.docutils.field-list { margin-bottom: 0.75rem; }

article.pytorch-article .attribute .has-code { float: none; }

article.pytorch-article .class dt { border-left: none; border-top: 3px soli=
d rgb(238, 76, 44); padding-left: 4em; }

article.pytorch-article .class dt em.property { position: absolute; left: 0=
.5rem; }

article.pytorch-article .class dd .docutils dt { padding-left: 0.5rem; }

article.pytorch-article .class em.property { text-transform: uppercase; fon=
t-style: normal; color: rgb(238, 76, 44); font-size: 1rem; letter-spacing: =
0px; padding-right: 0.75rem; }

article.pytorch-article .class dl dt em.property { position: static; left: =
0px; padding-right: 0px; }

article.pytorch-article .class .method dt, article.pytorch-article .class .=
staticmethod dt { border-left: 3px solid rgb(238, 76, 44); border-top: none=
; }

article.pytorch-article .class .method dt, article.pytorch-article .class .=
staticmethod dt { padding-left: 0.5rem; }

article.pytorch-article .class .attribute dt { border-top: none; }

article.pytorch-article .class .attribute dt em.property { position: relati=
ve; left: 0px; }

article.pytorch-article table { table-layout: fixed; }

div.deprecated p { display: inline; }

div.deprecated, div.versionchanged { margin-top: 0.5rem; padding: 0.5rem; m=
argin-bottom: 0.5rem; border: none; }

div.versionadded { margin: 1rem 0px; }

div.deprecated p:last-child, div.versionchanged p:last-child, div.versionad=
ded p:last-child { margin-bottom: 0px; }

div.deprecated { color: rgb(185, 74, 72); background-color: rgb(253, 237, 2=
33); }

div.versionchanged { background-color: rgb(255, 251, 232); }

article.pytorch-article .note, article.pytorch-article .warning, article.py=
torch-article .tip, article.pytorch-article .seealso, article.pytorch-artic=
le .hint, article.pytorch-article .important, article.pytorch-article .caut=
ion, article.pytorch-article .danger, article.pytorch-article .attention, a=
rticle.pytorch-article .error { background: rgb(243, 244, 247); margin-top:=
 1.875rem; margin-bottom: 1.125rem; }

article.pytorch-article .note .admonition-title, article.pytorch-article .w=
arning .admonition-title, article.pytorch-article .tip .admonition-title, a=
rticle.pytorch-article .seealso .admonition-title, article.pytorch-article =
.hint .admonition-title, article.pytorch-article .important .admonition-tit=
le, article.pytorch-article .caution .admonition-title, article.pytorch-art=
icle .danger .admonition-title, article.pytorch-article .attention .admonit=
ion-title, article.pytorch-article .error .admonition-title { color: rgb(25=
5, 255, 255); letter-spacing: 1px; text-transform: uppercase; margin-bottom=
: 1.125rem; padding: 3px 0px 3px 1.375rem; position: relative; font-size: 0=
.875rem; }

article.pytorch-article .note .admonition-title::before, article.pytorch-ar=
ticle .warning .admonition-title::before, article.pytorch-article .tip .adm=
onition-title::before, article.pytorch-article .seealso .admonition-title::=
before, article.pytorch-article .hint .admonition-title::before, article.py=
torch-article .important .admonition-title::before, article.pytorch-article=
 .caution .admonition-title::before, article.pytorch-article .danger .admon=
ition-title::before, article.pytorch-article .attention .admonition-title::=
before, article.pytorch-article .error .admonition-title::before { content:=
 "=E2=80=A2"; position: absolute; left: 9px; color: rgb(255, 255, 255); top=
: 2px; }

article.pytorch-article .note p:nth-child(n+2), article.pytorch-article .wa=
rning p:nth-child(n+2), article.pytorch-article .tip p:nth-child(n+2), arti=
cle.pytorch-article .seealso p:nth-child(n+2), article.pytorch-article .hin=
t p:nth-child(n+2), article.pytorch-article .important p:nth-child(n+2), ar=
ticle.pytorch-article .caution p:nth-child(n+2), article.pytorch-article .d=
anger p:nth-child(n+2), article.pytorch-article .attention p:nth-child(n+2)=
, article.pytorch-article .error p:nth-child(n+2) { padding: 0px 1.375rem; =
}

article.pytorch-article .note table, article.pytorch-article .warning table=
, article.pytorch-article .tip table, article.pytorch-article .seealso tabl=
e, article.pytorch-article .hint table, article.pytorch-article .important =
table, article.pytorch-article .caution table, article.pytorch-article .dan=
ger table, article.pytorch-article .attention table, article.pytorch-articl=
e .error table { margin: 0px 2rem; width: auto; }

article.pytorch-article .note :not(dt) > code, article.pytorch-article .war=
ning :not(dt) > code, article.pytorch-article .tip :not(dt) > code, article=
.pytorch-article .seealso :not(dt) > code, article.pytorch-article .hint :n=
ot(dt) > code, article.pytorch-article .important :not(dt) > code, article.=
pytorch-article .caution :not(dt) > code, article.pytorch-article .danger :=
not(dt) > code, article.pytorch-article .attention :not(dt) > code, article=
.pytorch-article .error :not(dt) > code { border-top: 2px solid rgb(255, 25=
5, 255); background-color: rgb(255, 255, 255); border-bottom: 2px solid rgb=
(255, 255, 255); padding: 0px 3px; -webkit-box-decoration-break: clone; out=
line: rgb(233, 233, 233) solid 1px; }

article.pytorch-article .note :not(dt) > code .pre, article.pytorch-article=
 .warning :not(dt) > code .pre, article.pytorch-article .tip :not(dt) > cod=
e .pre, article.pytorch-article .seealso :not(dt) > code .pre, article.pyto=
rch-article .hint :not(dt) > code .pre, article.pytorch-article .important =
:not(dt) > code .pre, article.pytorch-article .caution :not(dt) > code .pre=
, article.pytorch-article .danger :not(dt) > code .pre, article.pytorch-art=
icle .attention :not(dt) > code .pre, article.pytorch-article .error :not(d=
t) > code .pre { outline: 0px; padding: 0px; }

article.pytorch-article .note pre, article.pytorch-article .warning pre, ar=
ticle.pytorch-article .tip pre, article.pytorch-article .seealso pre, artic=
le.pytorch-article .hint pre, article.pytorch-article .important pre, artic=
le.pytorch-article .caution pre, article.pytorch-article .danger pre, artic=
le.pytorch-article .attention pre, article.pytorch-article .error pre { mar=
gin-bottom: 0px; }

article.pytorch-article .note .highlight, article.pytorch-article .warning =
.highlight, article.pytorch-article .tip .highlight, article.pytorch-articl=
e .seealso .highlight, article.pytorch-article .hint .highlight, article.py=
torch-article .important .highlight, article.pytorch-article .caution .high=
light, article.pytorch-article .danger .highlight, article.pytorch-article =
.attention .highlight, article.pytorch-article .error .highlight { margin: =
0px 2rem 1.125rem; }

article.pytorch-article .note ul, article.pytorch-article .note ol, article=
.pytorch-article .warning ul, article.pytorch-article .warning ol, article.=
pytorch-article .tip ul, article.pytorch-article .tip ol, article.pytorch-a=
rticle .seealso ul, article.pytorch-article .seealso ol, article.pytorch-ar=
ticle .hint ul, article.pytorch-article .hint ol, article.pytorch-article .=
important ul, article.pytorch-article .important ol, article.pytorch-articl=
e .caution ul, article.pytorch-article .caution ol, article.pytorch-article=
 .danger ul, article.pytorch-article .danger ol, article.pytorch-article .a=
ttention ul, article.pytorch-article .attention ol, article.pytorch-article=
 .error ul, article.pytorch-article .error ol { padding-left: 3.25rem; }

article.pytorch-article .note ul li, article.pytorch-article .note ol li, a=
rticle.pytorch-article .warning ul li, article.pytorch-article .warning ol =
li, article.pytorch-article .tip ul li, article.pytorch-article .tip ol li,=
 article.pytorch-article .seealso ul li, article.pytorch-article .seealso o=
l li, article.pytorch-article .hint ul li, article.pytorch-article .hint ol=
 li, article.pytorch-article .important ul li, article.pytorch-article .imp=
ortant ol li, article.pytorch-article .caution ul li, article.pytorch-artic=
le .caution ol li, article.pytorch-article .danger ul li, article.pytorch-a=
rticle .danger ol li, article.pytorch-article .attention ul li, article.pyt=
orch-article .attention ol li, article.pytorch-article .error ul li, articl=
e.pytorch-article .error ol li { color: rgb(38, 38, 38); }

article.pytorch-article .note p, article.pytorch-article .warning p, articl=
e.pytorch-article .tip p, article.pytorch-article .seealso p, article.pytor=
ch-article .hint p, article.pytorch-article .important p, article.pytorch-a=
rticle .caution p, article.pytorch-article .danger p, article.pytorch-artic=
le .attention p, article.pytorch-article .error p { margin-top: 1.125rem; }

article.pytorch-article .note .admonition-title { background: rgb(84, 199, =
236); }

article.pytorch-article .warning .admonition-title { background: rgb(233, 7=
9, 59); }

article.pytorch-article .tip .admonition-title { background: rgb(107, 206, =
187); }

article.pytorch-article .seealso .admonition-title { background: rgb(107, 2=
06, 187); }

article.pytorch-article .hint .admonition-title { background: rgb(162, 205,=
 222); }

article.pytorch-article .important .admonition-title { background: rgb(88, =
144, 255); }

article.pytorch-article .caution .admonition-title { background: rgb(247, 1=
46, 58); }

article.pytorch-article .danger .admonition-title { background: rgb(219, 44=
, 73); }

article.pytorch-article .attention .admonition-title { background: rgb(245,=
 166, 35); }

article.pytorch-article .error .admonition-title { background: rgb(204, 47,=
 144); }

article.pytorch-article .sphx-glr-download-link-note.admonition.note, artic=
le.pytorch-article .reference.download.internal, article.pytorch-article .s=
phx-glr-signature { display: none; }

article.pytorch-article .admonition > p:last-of-type { margin-bottom: 0px; =
padding-bottom: 1.125rem !important; }

.pytorch-article div.sphx-glr-download a { background-color: rgb(243, 244, =
247); background-image: url("../images/arrow-down-orange.svg"); background-=
repeat: no-repeat; background-position: left 10px center; background-size: =
15px 15px; border-radius: 0px; border: none; display: block; text-align: le=
ft; padding: 0.9375rem 3.125rem; position: relative; margin: 1.25rem auto; =
}

@media screen and (min-width: 768px) {
  .pytorch-article div.sphx-glr-download a::after { content: ""; display: b=
lock; width: 0px; height: 1px; position: absolute; bottom: 0px; left: 0px; =
background-color: rgb(228, 76, 44); transition: width 0.25s ease-in-out 0s;=
 }
  .pytorch-article div.sphx-glr-download a:hover::after { width: 100%; }
}

@media screen and (min-width: 768px) {
  .pytorch-article div.sphx-glr-download a::after { background-color: rgb(2=
38, 76, 44); }
}

@media screen and (min-width: 768px) {
  .pytorch-article div.sphx-glr-download a { background-position: left 20px=
 center; }
}

.pytorch-article div.sphx-glr-download a:hover { box-shadow: none; text-dec=
oration: none; background-image: url("../images/arrow-down-orange.svg"); ba=
ckground-color: rgb(243, 244, 247); }

.pytorch-article div.sphx-glr-download a span.pre { background-color: trans=
parent; font-size: 1.125rem; padding: 0px; color: rgb(38, 38, 38); }

.pytorch-article div.sphx-glr-download a code, .pytorch-article div.sphx-gl=
r-download a kbd, .pytorch-article div.sphx-glr-download a pre, .pytorch-ar=
ticle div.sphx-glr-download a samp, .pytorch-article div.sphx-glr-download =
a span.pre { font-family: FreightSans, "Helvetica Neue", Helvetica, Arial, =
sans-serif; }

.pytorch-article p.sphx-glr-script-out { margin-bottom: 1.125rem; }

.pytorch-article div.sphx-glr-script-out { margin-bottom: 2.5rem; }

.pytorch-article div.sphx-glr-script-out .highlight { margin-left: 0px; mar=
gin-top: 0px; }

.pytorch-article div.sphx-glr-script-out .highlight pre { background-color:=
 rgb(253, 237, 233); padding: 1.5625rem; color: rgb(131, 123, 121); }

.pytorch-article div.sphx-glr-script-out + p { margin-top: unset; }

article.pytorch-article .wy-table-responsive table { border-width: initial;=
 border-style: none; border-image: initial; table-layout: fixed; border-col=
or: rgb(255, 255, 255) !important; }

article.pytorch-article .wy-table-responsive table thead tr { border-bottom=
: 2px solid rgb(108, 108, 109); }

article.pytorch-article .wy-table-responsive table thead th { line-height: =
1.75rem; padding-left: 0.9375rem; padding-right: 0.9375rem; }

article.pytorch-article .wy-table-responsive table tbody .row-odd { backgro=
und-color: rgb(243, 244, 247); }

article.pytorch-article .wy-table-responsive table tbody td { color: rgb(10=
8, 108, 109); white-space: normal; padding: 0.9375rem; font-size: 1rem; lin=
e-height: 1.375rem; }

article.pytorch-article .wy-table-responsive table tbody td .pre { backgrou=
nd: rgb(255, 255, 255); color: rgb(238, 76, 44); font-size: 87.5%; }

article.pytorch-article .wy-table-responsive table tbody td code { font-siz=
e: 87.5%; }

a[rel~=3D"prev"], a[rel~=3D"next"] { padding: 0.375rem 0px 0px; }

img.next-page, img.previous-page { width: 8px; height: 10px; position: rela=
tive; top: -1px; }

img.previous-page { transform: scaleX(-1); }

.rst-footer-buttons { margin-top: 1.875rem; margin-bottom: 1.875rem; }

.rst-footer-buttons .btn:focus, .rst-footer-buttons .btn.focus { box-shadow=
: none; }

article.pytorch-article blockquote { margin-left: 3.75rem; color: rgb(108, =
108, 109); }

article.pytorch-article .caption { color: rgb(108, 108, 109); letter-spacin=
g: 0.25px; line-height: 2.125rem; }

article.pytorch-article .math { color: rgb(38, 38, 38); width: auto; text-a=
lign: center; }

article.pytorch-article .math img { width: auto; }

.pytorch-breadcrumbs-wrapper { width: 100%; }

@media screen and (min-width: 1101px) {
  .pytorch-breadcrumbs-wrapper { float: left; margin-left: 3%; width: 75%; =
}
}

@media screen and (min-width: 1600px) {
  .pytorch-breadcrumbs-wrapper { width: 850px; margin-left: 1.875rem; }
}

.pytorch-breadcrumbs-wrapper .pytorch-breadcrumbs-aside { float: right; }

.pytorch-breadcrumbs-wrapper .pytorch-breadcrumbs-aside .fa.fa-github { mar=
gin-top: 5px; display: block; }

.pytorch-article .container { padding-left: 0px; padding-right: 0px; max-wi=
dth: none; }

a:link, a:visited, a:hover { color: rgb(238, 76, 44); }

::-webkit-input-placeholder { color: rgb(238, 76, 44); }

@media screen and (min-width: 768px) {
  .site-footer a:hover { color: rgb(238, 76, 44); }
}

.docs-tutorials-resources a { color: rgb(238, 76, 44); }

.header-holder { position: relative; z-index: 201; }

.header-holder .main-menu ul li.active::after { color: rgb(238, 76, 44); }

.header-holder .main-menu ul li.active a { color: rgb(238, 76, 44); }

@media screen and (min-width: 1100px) {
  .header-holder .main-menu ul li a:hover { color: rgb(238, 76, 44); }
}

.mobile-main-menu.open ul li.active a { color: rgb(238, 76, 44); }

.version { padding-bottom: 1rem; }

.pytorch-call-to-action-links { padding-top: 0px; display: flex; }

@media screen and (min-width: 768px) {
  .pytorch-call-to-action-links { padding-top: 2.5rem; }
}

@media (min-width: 768px) and (max-width: 1239px) {
  .pytorch-call-to-action-links { padding-top: 0px; }
}

@media (min-width: 1100px) and (max-width: 1239px) {
  .pytorch-call-to-action-links { padding-top: 2.5rem; }
}

.pytorch-call-to-action-links #tutorial-type { display: none; }

.pytorch-call-to-action-links .call-to-action-img, .pytorch-call-to-action-=
links .call-to-action-notebook-img { height: 1.375rem; width: 1.375rem; mar=
gin-right: 10px; }

.pytorch-call-to-action-links .call-to-action-notebook-img { height: 1rem; =
}

.pytorch-call-to-action-links a { padding-right: 1.25rem; color: rgb(0, 0, =
0); cursor: pointer; }

.pytorch-call-to-action-links a:hover { color: rgb(228, 76, 44); }

.pytorch-call-to-action-links a .call-to-action-desktop-view { display: non=
e; }

@media screen and (min-width: 768px) {
  .pytorch-call-to-action-links a .call-to-action-desktop-view { display: b=
lock; }
}

.pytorch-call-to-action-links a .call-to-action-mobile-view { display: bloc=
k; }

@media screen and (min-width: 768px) {
  .pytorch-call-to-action-links a .call-to-action-mobile-view { display: no=
ne; }
}

.pytorch-call-to-action-links a #google-colab-link, .pytorch-call-to-action=
-links a #download-notebook-link, .pytorch-call-to-action-links a #github-v=
iew-link { padding-bottom: 0.625rem; border-bottom: 1px solid rgb(243, 244,=
 247); padding-right: 2.5rem; display: flex; align-items: center; }

.pytorch-call-to-action-links a #google-colab-link:hover, .pytorch-call-to-=
action-links a #download-notebook-link:hover, .pytorch-call-to-action-links=
 a #github-view-link:hover { border-bottom-color: rgb(228, 76, 44); color: =
rgb(228, 76, 44); }

#tutorial-cards-container #tutorial-cards { width: 100%; }

#tutorial-cards-container .tutorials-nav { padding-left: 0px; padding-right=
: 0px; padding-bottom: 0px; }

#tutorial-cards-container .tutorials-hr { margin-top: 1rem; margin-bottom: =
1rem; }

#tutorial-cards-container .card.tutorials-card { border-radius: 0px; border=
-color: rgb(243, 244, 247); height: 98px; margin-bottom: 1.875rem; overflow=
: scroll; background-color: rgb(243, 244, 247); cursor: pointer; }

@media screen and (min-width: 1240px) {
  #tutorial-cards-container .card.tutorials-card { height: 200px; overflow:=
 inherit; }
}

@media (min-width: 768px) and (max-width: 1239px) {
  #tutorial-cards-container .card.tutorials-card { height: 200px; overflow:=
 scroll; }
}

#tutorial-cards-container .card.tutorials-card .tutorials-image { position:=
 absolute; top: 0px; right: 0px; height: 96px; width: 96px; opacity: 0.5; }

#tutorial-cards-container .card.tutorials-card .tutorials-image img { heigh=
t: 100%; width: 100%; }

@media screen and (min-width: 768px) {
  #tutorial-cards-container .card.tutorials-card .tutorials-image { height:=
 100%; width: 25%; }
}

@media (min-width: 768px) and (max-width: 1239px) {
  #tutorial-cards-container .card.tutorials-card .tutorials-image { height:=
 100%; width: 198px; }
}

#tutorial-cards-container .card.tutorials-card .tutorials-image::before { c=
ontent: ""; position: absolute; inset: 0px; z-index: 1; background: rgb(0, =
0, 0); opacity: 0.075; }

#tutorial-cards-container .card.tutorials-card .card-title-container { widt=
h: 70%; display: inline-flex; }

@media screen and (min-width: 768px) {
  #tutorial-cards-container .card.tutorials-card .card-title-container { wi=
dth: 75%; }
}

@media (min-width: 768px) and (max-width: 1239px) {
  #tutorial-cards-container .card.tutorials-card .card-title-container { wi=
dth: 70%; }
}

#tutorial-cards-container .card.tutorials-card .card-title-container h4 { m=
argin-bottom: 1.125rem; margin-top: 0px; font-size: 1.5rem; }

#tutorial-cards-container .card.tutorials-card p.card-summary, #tutorial-ca=
rds-container .card.tutorials-card p.tags { font-size: 0.9375rem; line-heig=
ht: 1.5rem; margin-bottom: 0px; color: rgb(108, 108, 109); font-weight: 400=
; width: 70%; }

@media screen and (min-width: 768px) {
  #tutorial-cards-container .card.tutorials-card p.card-summary, #tutorial-=
cards-container .card.tutorials-card p.tags { width: 75%; }
}

@media (min-width: 768px) and (max-width: 1239px) {
  #tutorial-cards-container .card.tutorials-card p.card-summary, #tutorial-=
cards-container .card.tutorials-card p.tags { width: 70%; }
}

#tutorial-cards-container .card.tutorials-card p.tags { margin-top: 30px; t=
ext-overflow: ellipsis; white-space: nowrap; overflow: hidden; }

#tutorial-cards-container .card.tutorials-card h4 { color: rgb(38, 38, 38);=
 margin-bottom: 1.125rem; }

#tutorial-cards-container .card.tutorials-card a { height: 100%; }

@media screen and (min-width: 768px) {
  #tutorial-cards-container .card.tutorials-card a { min-height: 190px; }
}

@media (min-width: 768px) and (max-width: 1239px) {
  #tutorial-cards-container .card.tutorials-card a { min-height: 234px; }
}

@media screen and (min-width: 768px) {
  #tutorial-cards-container .card.tutorials-card::after { content: ""; disp=
lay: block; width: 0px; height: 1px; position: absolute; bottom: 0px; left:=
 0px; background-color: rgb(228, 76, 44); transition: width 0.25s ease-in-o=
ut 0s; }
  #tutorial-cards-container .card.tutorials-card:hover::after { width: 100%=
; }
}

#tutorial-cards-container .card.tutorials-card:hover { background-color: rg=
b(255, 255, 255); border-top: 1px solid rgb(226, 226, 226); border-right: 1=
px solid rgb(226, 226, 226); border-left: 1px solid rgb(226, 226, 226); bor=
der-image: initial; border-bottom: none; }

#tutorial-cards-container .card.tutorials-card:hover p.card-summary { color=
: rgb(38, 38, 38); }

#tutorial-cards-container .card.tutorials-card:hover .tutorials-image { opa=
city: unset; }

#tutorial-cards-container .tutorial-tags-container { width: 75%; }

#tutorial-cards-container .tutorial-tags-container.active { width: 0px; }

#tutorial-cards-container .tutorial-filter-menu ul { list-style-type: none;=
 padding-left: 1.25rem; }

#tutorial-cards-container .tutorial-filter-menu ul li { padding-right: 1.25=
rem; word-break: break-all; }

#tutorial-cards-container .tutorial-filter-menu ul li a { color: rgb(151, 1=
51, 151); }

#tutorial-cards-container .tutorial-filter-menu ul li a:hover { color: rgb(=
228, 76, 44); }

#tutorial-cards-container .tutorial-filter { cursor: pointer; }

#tutorial-cards-container .filter-btn { color: rgb(151, 151, 151); border: =
1px solid rgb(151, 151, 151); display: inline-block; text-align: center; wh=
ite-space: nowrap; vertical-align: middle; padding: 0.375rem 0.75rem; font-=
size: 1rem; line-height: 1.5; margin-bottom: 5px; }

#tutorial-cards-container .filter-btn:hover { border: 1px solid rgb(228, 76=
, 44); color: rgb(228, 76, 44); }

#tutorial-cards-container .filter-btn.selected { background-color: rgb(228,=
 76, 44); border: 1px solid rgb(228, 76, 44); color: rgb(255, 255, 255); }

#tutorial-cards-container .all-tag-selected { background-color: rgb(151, 15=
1, 151); color: rgb(255, 255, 255); }

#tutorial-cards-container .all-tag-selected:hover { border-color: rgb(151, =
151, 151); color: rgb(255, 255, 255); }

#tutorial-cards-container .pagination .page { border: 1px solid rgb(222, 22=
6, 230); padding: 0.5rem 0.75rem; }

#tutorial-cards-container .pagination .active .page { background-color: rgb=
(222, 226, 230); }

article.pytorch-article .tutorials-callout-container { padding-bottom: 50px=
; }

article.pytorch-article .tutorials-callout-container .col-md-6 { padding-bo=
ttom: 10px; }

article.pytorch-article .tutorials-callout-container .text-container { padd=
ing: 10px 0px; }

article.pytorch-article .tutorials-callout-container .text-container .body-=
paragraph { color: rgb(102, 102, 102); font-weight: 300; font-size: 1.125re=
m; line-height: 1.875rem; }

article.pytorch-article .tutorials-callout-container .btn.callout-button { =
font-size: 1.125rem; border-radius: 0px; border: none; background-color: rg=
b(243, 244, 247); color: rgb(108, 108, 109); font-weight: 400; position: re=
lative; letter-spacing: 0.25px; }

@media screen and (min-width: 768px) {
  article.pytorch-article .tutorials-callout-container .btn.callout-button:=
:after { content: ""; display: block; width: 0px; height: 1px; position: ab=
solute; bottom: 0px; left: 0px; background-color: rgb(228, 76, 44); transit=
ion: width 0.25s ease-in-out 0s; }
  article.pytorch-article .tutorials-callout-container .btn.callout-button:=
hover::after { width: 100%; }
}

article.pytorch-article .tutorials-callout-container .btn.callout-button a =
{ color: inherit; }

.pytorch-container { margin: 0px auto; padding: 0px 1.875rem; width: auto; =
position: relative; }

@media screen and (min-width: 1100px) {
  .pytorch-container { padding: 0px; }
}

@media screen and (min-width: 1101px) {
  .pytorch-container { margin-left: 25%; }
}

@media screen and (min-width: 1600px) {
  .pytorch-container { margin-left: 350px; }
}

.pytorch-container::before, .pytorch-container::after { content: ""; displa=
y: table; }

.pytorch-container::after { clear: both; }

.pytorch-container { }

.pytorch-content-wrap { background-color: rgb(255, 255, 255); display: flex=
; position: relative; padding-top: 0px; }

.pytorch-content-wrap::before, .pytorch-content-wrap::after { content: ""; =
display: table; }

.pytorch-content-wrap::after { clear: both; }

.pytorch-content-wrap { }

@media screen and (min-width: 1101px) {
  .pytorch-content-wrap { padding-top: 45px; float: left; width: 100%; disp=
lay: block; }
}

@media screen and (min-width: 1600px) {
  .pytorch-content-wrap { width: 100%; }
}

.pytorch-content { background: rgb(255, 255, 255); width: 100%; max-width: =
700px; position: relative; }

.pytorch-content-left { min-height: 100vh; margin-top: 2.5rem; width: 100%;=
 }

@media screen and (min-width: 1101px) {
  .pytorch-content-left { margin-top: 0px; margin-left: 3%; width: 75%; flo=
at: left; }
}

@media screen and (min-width: 1600px) {
  .pytorch-content-left { width: 850px; margin-left: 30px; }
}

.pytorch-content-left .main-content { padding-top: 0.9375rem; }

.pytorch-content-left .main-content ul.simple { padding-bottom: 1.25rem; }

.pytorch-content-left .main-content .note:nth-child(1), .pytorch-content-le=
ft .main-content .warning:nth-child(1) { margin-top: 0px; }

.pytorch-content-right { display: none; position: relative; overflow: hidde=
n; }

@media screen and (min-width: 1101px) {
  .pytorch-content-right { display: block; margin-left: 0px; width: 19%; fl=
oat: left; height: 100%; }
}

@media screen and (min-width: 1600px) {
  .pytorch-content-right { width: 280px; }
}

@media screen and (min-width: 1101px) {
  .pytorch-side-scroll { position: relative; overflow: hidden scroll; heigh=
t: 100%; }
}

.pytorch-menu-vertical { padding: 1.25rem 1.875rem 2.5rem; }

@media screen and (min-width: 1101px) {
  .pytorch-menu-vertical { display: block; padding-top: 0px; padding-right:=
 13.5%; padding-bottom: 5.625rem; }
}

@media screen and (min-width: 1600px) {
  .pytorch-menu-vertical { padding-left: 0px; padding-right: 1.5625rem; }
}

.pytorch-left-menu { display: none; background-color: rgb(243, 244, 247); c=
olor: rgb(38, 38, 38); overflow: scroll; }

@media screen and (min-width: 1101px) {
  .pytorch-left-menu { display: block; overflow: hidden; padding: 0px 1.875=
rem 0px 0px; width: 25%; z-index: 200; float: left; }
  .pytorch-left-menu.make-fixed { position: fixed; top: 0px; bottom: 0px; l=
eft: 0px; float: none; }
}

@media screen and (min-width: 1600px) {
  .pytorch-left-menu { padding: 0px 0px 0px 1.875rem; width: 350px; }
}

.expand-menu, .hide-menu { color: rgb(108, 108, 109); padding-left: 10px; c=
ursor: pointer; }

.collapse { display: none; }

.left-nav-top-caption { padding-top: 1rem; }

.pytorch-left-menu p.caption { color: rgb(38, 38, 38); display: block; font=
-size: 1rem; line-height: 1.375rem; margin-bottom: 1rem; text-transform: no=
ne; white-space: normal; }

.pytorch-left-menu-search { margin-bottom: 2.5rem; }

@media screen and (min-width: 1101px) {
  .pytorch-left-menu-search { margin: 1.25rem 0.625rem 1.875rem 0px; }
}

.pytorch-left-menu-search ::placeholder { color: rgb(38, 38, 38); }

.pytorch-left-menu-search :focus::placeholder { color: transparent; }

.pytorch-left-menu-search input[type=3D"text"] { border-radius: 0px; paddin=
g: 0.5rem 0.75rem 0.5rem 40px; border-color: rgb(255, 255, 255); color: rgb=
(38, 38, 38); border-style: solid; font-size: 1rem; width: 100%; background=
-image: url("../images/search-icon.svg"); background-repeat: no-repeat; bac=
kground-size: 18px 18px; background-position: 12px 10px; background-color: =
rgb(255, 255, 255); }

.pytorch-left-menu-search input[type=3D"text"]:focus { outline: 0px; }

@media screen and (min-width: 1101px) {
  .pytorch-left-menu .pytorch-side-scroll { width: 120%; }
}

@media screen and (min-width: 1600px) {
  .pytorch-left-menu .pytorch-side-scroll { width: 340px; }
}

.pytorch-right-menu { min-height: 100px; overflow: hidden; left: 0px; z-ind=
ex: 200; padding-top: 0px; position: relative; }

@media screen and (min-width: 1101px) {
  .pytorch-right-menu { width: 100%; }
  .pytorch-right-menu.scrolling-fixed { position: fixed; top: 45px; left: 8=
3.5%; width: 14%; }
  .pytorch-right-menu.scrolling-absolute { position: absolute; left: 0px; }
}

@media screen and (min-width: 1600px) {
  .pytorch-right-menu { left: 0px; width: 380px; }
  .pytorch-right-menu.scrolling-fixed { position: fixed; top: 45px; left: 1=
230px; }
  .pytorch-right-menu.scrolling-absolute { position: absolute; left: 0px; }
}

.pytorch-left-menu ul, .pytorch-right-menu ul { list-style-type: none; padd=
ing-left: 0px; margin-bottom: 2.5rem; }

.pytorch-left-menu > ul, .pytorch-right-menu > ul { margin-bottom: 2.5rem; =
}

.pytorch-left-menu a:link, .pytorch-left-menu a:visited, .pytorch-left-menu=
 a:hover, .pytorch-right-menu a:link, .pytorch-right-menu a:visited, .pytor=
ch-right-menu a:hover { color: rgb(108, 108, 109); font-size: 0.875rem; lin=
e-height: 1rem; padding: 0px; text-decoration: none; }

.pytorch-left-menu a:link.reference.internal, .pytorch-left-menu a:visited.=
reference.internal, .pytorch-left-menu a:hover.reference.internal, .pytorch=
-right-menu a:link.reference.internal, .pytorch-right-menu a:visited.refere=
nce.internal, .pytorch-right-menu a:hover.reference.internal { margin-botto=
m: 0.3125rem; position: relative; }

.pytorch-left-menu li code, .pytorch-right-menu li code { border: none; bac=
kground: inherit; color: inherit; padding-left: 0px; padding-right: 0px; }

.pytorch-left-menu li span.toctree-expand, .pytorch-right-menu li span.toct=
ree-expand { display: block; float: left; margin-left: -1.2em; font-size: 0=
.8em; line-height: 1.6em; }

.pytorch-left-menu li.on a, .pytorch-left-menu li.current > a, .pytorch-rig=
ht-menu li.on a, .pytorch-right-menu li.current > a { position: relative; b=
order: none; }

.pytorch-left-menu li.on a span.toctree-expand, .pytorch-left-menu li.curre=
nt > a span.toctree-expand, .pytorch-right-menu li.on a span.toctree-expand=
, .pytorch-right-menu li.current > a span.toctree-expand { display: block; =
font-size: 0.8em; line-height: 1.6em; }

.pytorch-left-menu li.toctree-l1.current > a, .pytorch-right-menu li.toctre=
e-l1.current > a { color: rgb(238, 76, 44); }

.pytorch-left-menu li.toctree-l1.current > a::before, .pytorch-right-menu l=
i.toctree-l1.current > a::before { content: "=E2=80=A2"; display: inline-bl=
ock; position: absolute; left: -15px; top: -10%; font-size: 1.375rem; color=
: rgb(238, 76, 44); }

@media screen and (min-width: 1101px) {
  .pytorch-left-menu li.toctree-l1.current > a::before, .pytorch-right-menu=
 li.toctree-l1.current > a::before { left: -20px; }
}

.pytorch-left-menu li.toctree-l1.current li.toctree-l2 > ul, .pytorch-left-=
menu li.toctree-l2.current li.toctree-l3 > ul, .pytorch-right-menu li.toctr=
ee-l1.current li.toctree-l2 > ul, .pytorch-right-menu li.toctree-l2.current=
 li.toctree-l3 > ul { display: none; }

.pytorch-left-menu li.toctree-l1.current li.toctree-l2.current > ul, .pytor=
ch-left-menu li.toctree-l2.current li.toctree-l3.current > ul, .pytorch-rig=
ht-menu li.toctree-l1.current li.toctree-l2.current > ul, .pytorch-right-me=
nu li.toctree-l2.current li.toctree-l3.current > ul { display: block; }

.pytorch-left-menu li.toctree-l2.current li.toctree-l3 > a, .pytorch-right-=
menu li.toctree-l2.current li.toctree-l3 > a { display: block; }

.pytorch-left-menu li.toctree-l3, .pytorch-right-menu li.toctree-l3 { font-=
size: 0.9em; }

.pytorch-left-menu li.toctree-l3.current li.toctree-l4 > a, .pytorch-right-=
menu li.toctree-l3.current li.toctree-l4 > a { display: block; }

.pytorch-left-menu li.toctree-l4, .pytorch-right-menu li.toctree-l4 { font-=
size: 0.9em; }

.pytorch-left-menu li.current ul, .pytorch-right-menu li.current ul { displ=
ay: block; }

.pytorch-left-menu li ul, .pytorch-right-menu li ul { margin-bottom: 0px; d=
isplay: none; }

.pytorch-left-menu li ul li a, .pytorch-right-menu li ul li a { margin-bott=
om: 0px; }

.pytorch-left-menu a, .pytorch-right-menu a { display: inline-block; positi=
on: relative; }

.pytorch-left-menu a:hover, .pytorch-right-menu a:hover { cursor: pointer; =
}

.pytorch-left-menu a:active, .pytorch-right-menu a:active { cursor: pointer=
; }

.pytorch-left-menu ul { padding-left: 0px; }

.pytorch-right-menu a:link, .pytorch-right-menu a:visited, .pytorch-right-m=
enu a:hover { color: rgb(108, 108, 109); }

.pytorch-right-menu a:link span.pre, .pytorch-right-menu a:visited span.pre=
, .pytorch-right-menu a:hover span.pre { color: rgb(108, 108, 109); }

.pytorch-right-menu a.reference.internal.expanded::before { content: "-"; f=
ont-family: monospace; position: absolute; left: -12px; }

.pytorch-right-menu a.reference.internal.not-expanded::before { content: "+=
"; font-family: monospace; position: absolute; left: -12px; }

.pytorch-right-menu li.active > a { color: rgb(238, 76, 44); }

.pytorch-right-menu li.active > a span.pre, .pytorch-right-menu li.active >=
 a::before { color: rgb(238, 76, 44); }

.pytorch-right-menu li.active > a::after { content: "=E2=80=A2"; color: rgb=
(228, 76, 44); display: inline-block; font-size: 1.375rem; left: -17px; pos=
ition: absolute; top: 1px; }

.pytorch-right-menu .pytorch-side-scroll > ul > li > ul > li { margin-botto=
m: 0px; }

.pytorch-right-menu ul ul { padding-left: 0px; }

.pytorch-right-menu ul ul li { padding-left: 0px; }

.pytorch-right-menu ul ul li a.reference.internal { padding-left: 0px; }

.pytorch-right-menu ul ul li ul { display: none; padding-left: 10px; }

.pytorch-right-menu ul ul li li a.reference.internal { padding-left: 0px; }

.pytorch-right-menu li ul { display: block; }

.pytorch-right-menu .pytorch-side-scroll { padding-top: 20px; }

@media screen and (min-width: 1101px) {
  .pytorch-right-menu .pytorch-side-scroll { width: 120%; }
}

@media screen and (min-width: 1600px) {
  .pytorch-right-menu .pytorch-side-scroll { width: 400px; }
}

.pytorch-right-menu .pytorch-side-scroll > ul { padding-left: 10%; padding-=
right: 10%; margin-bottom: 0px; }

@media screen and (min-width: 1600px) {
  .pytorch-right-menu .pytorch-side-scroll > ul { padding-left: 25px; }
}

.pytorch-right-menu .pytorch-side-scroll > ul > li > a.reference.internal {=
 color: rgb(38, 38, 38); font-weight: 500; }

.pytorch-right-menu .pytorch-side-scroll ul li { position: relative; }

#pytorch-right-menu .side-scroll-highlight { color: rgb(238, 76, 44); }

.header-container { max-width: none; margin-top: 4px; }

@media screen and (min-width: 1101px) {
  .header-container { margin-top: 0px; }
}

@media screen and (min-width: 1600px) {
  .header-container { margin-top: 0px; }
}

.container-fluid.header-holder { padding-right: 0px; padding-left: 0px; }

.header-holder .container { max-width: none; padding-right: 1.875rem; paddi=
ng-left: 1.875rem; }

@media screen and (min-width: 1101px) {
  .header-holder .container { padding-right: 1.875rem; padding-left: 1.875r=
em; }
}

.header-holder .main-menu { justify-content: unset; position: relative; }

@media screen and (min-width: 1101px) {
  .header-holder .main-menu ul { padding-left: 0px; margin-left: 26%; }
}

@media screen and (min-width: 1600px) {
  .header-holder .main-menu ul { padding-left: 38px; margin-left: 310px; }
}

.pytorch-page-level-bar { display: none; align-items: center; background-co=
lor: rgb(255, 255, 255); border-bottom: 1px solid rgb(226, 226, 226); width=
: 100%; z-index: 201; }

@media screen and (min-width: 1101px) {
  .pytorch-page-level-bar { left: 0px; display: flex; height: 45px; padding=
-left: 0px; width: 100%; position: absolute; z-index: 1; }
  .pytorch-page-level-bar.left-menu-is-fixed { position: fixed; top: 0px; l=
eft: 25%; padding-left: 0px; right: 0px; width: 75%; }
}

@media screen and (min-width: 1600px) {
  .pytorch-page-level-bar { left: 0px; right: 0px; width: auto; z-index: 1;=
 }
  .pytorch-page-level-bar.left-menu-is-fixed { left: 350px; right: 0px; wid=
th: auto; }
}

.pytorch-page-level-bar ul, .pytorch-page-level-bar li { margin: 0px; }

.pytorch-shortcuts-wrapper { display: none; }

@media screen and (min-width: 1101px) {
  .pytorch-shortcuts-wrapper { font-size: 0.875rem; float: left; margin-lef=
t: 2%; }
}

@media screen and (min-width: 1600px) {
  .pytorch-shortcuts-wrapper { margin-left: 1.875rem; }
}

.cookie-banner-wrapper { display: none; }

.cookie-banner-wrapper .container { padding-left: 1.875rem; padding-right: =
1.875rem; max-width: 1240px; }

.cookie-banner-wrapper.is-visible { display: block; position: fixed; bottom=
: 0px; background-color: rgb(243, 244, 247); min-height: 100px; width: 100%=
; z-index: 401; border-top: 3px solid rgb(237, 237, 238); }

.cookie-banner-wrapper .gdpr-notice { color: rgb(108, 108, 109); margin-top=
: 1.5625rem; text-align: left; max-width: 1440px; }

@media screen and (min-width: 768px) {
  .cookie-banner-wrapper .gdpr-notice { width: 77%; }
}

@media (min-width: 768px) and (max-width: 1239px) {
  .cookie-banner-wrapper .gdpr-notice { width: inherit; }
}

.cookie-banner-wrapper .gdpr-notice .cookie-policy-link { color: rgb(52, 52=
, 52); }

.cookie-banner-wrapper .close-button { appearance: none; background: transp=
arent; border: 1px solid rgb(243, 244, 247); height: 1.3125rem; position: a=
bsolute; bottom: 42px; right: 0px; top: 0px; cursor: pointer; outline: none=
; }

@media screen and (min-width: 768px) {
  .cookie-banner-wrapper .close-button { right: 20%; top: inherit; }
}

@media (min-width: 768px) and (max-width: 1239px) {
  .cookie-banner-wrapper .close-button { right: 0px; top: 0px; }
}

.main-menu ul li .resources-dropdown a { cursor: pointer; }

.main-menu ul li .dropdown-menu { border-radius: 0px; padding: 0px; }

.main-menu ul li .dropdown-menu .dropdown-item { color: rgb(108, 108, 109);=
 border-bottom: 1px solid rgb(226, 226, 226); }

.main-menu ul li .dropdown-menu .dropdown-item:last-of-type { border-bottom=
-color: transparent; }

.main-menu ul li .dropdown-menu .dropdown-item:hover { background-color: rg=
b(228, 76, 44); }

.main-menu ul li .dropdown-menu .dropdown-item p { font-size: 1rem; color: =
rgb(151, 151, 151); }

.main-menu ul li .dropdown-menu a.dropdown-item:hover { color: rgb(255, 255=
, 255); }

.main-menu ul li .dropdown-menu a.dropdown-item:hover p { color: rgb(255, 2=
55, 255); }

.resources-dropdown-menu { left: -75px; width: 226px; position: absolute; z=
-index: 1000; display: none; float: left; min-width: 10rem; padding: 0.5rem=
 0px; font-size: 1rem; color: rgb(33, 37, 41); text-align: left; list-style=
: none; background-color: rgb(255, 255, 255); background-clip: padding-box;=
 border: 1px solid rgba(0, 0, 0, 0.15); border-radius: 0.25rem; }

.resources-dropdown:hover .resources-dropdown-menu { display: block; }

.main-menu ul li .resources-dropdown-menu { border-radius: 0px; padding: 0p=
x; }

.main-menu ul li.active:hover .resources-dropdown-menu { display: block; }

.main-menu ul li .resources-dropdown-menu .dropdown-item { color: rgb(108, =
108, 109); border-bottom: 1px solid rgb(226, 226, 226); }

.resources-dropdown .with-down-orange-arrow { padding-right: 2rem; position=
: relative; background: url("../images/chevron-down-orange.svg") right 10px=
 top 7px / 14px 18px no-repeat; }

.with-down-arrow { padding-right: 2rem; position: relative; background-imag=
e: url("../images/chevron-down-black.svg"); background-size: 14px 18px; bac=
kground-position: right 10px top 7px; background-repeat: no-repeat; }

.with-down-arrow:hover { background-image: url("../images/chevron-down-oran=
ge.svg"); background-repeat: no-repeat; }

.header-holder .main-menu ul li .resources-dropdown .doc-dropdown-option { =
padding-top: 1rem; }

.header-holder .main-menu ul li a.nav-dropdown-item { display: block; font-=
size: 1rem; line-height: 1.3125rem; width: 100%; padding: 0.25rem 1.5rem; c=
lear: both; font-weight: 400; color: rgb(151, 151, 151); text-align: center=
; background-color: transparent; border-bottom: 1px solid rgb(226, 226, 226=
); }

.header-holder .main-menu ul li a.nav-dropdown-item:last-of-type { border-b=
ottom-color: transparent; }

.header-holder .main-menu ul li a.nav-dropdown-item:hover { background-colo=
r: rgb(228, 76, 44); color: white; }

.header-holder .main-menu ul li a.nav-dropdown-item .dropdown-title { font-=
size: 1.125rem; color: rgb(108, 108, 109); letter-spacing: 0px; line-height=
: 34px; }

.header-holder .main-menu ul li a.nav-dropdown-item:hover .dropdown-title {=
 background-color: rgb(228, 76, 44); color: white; }
------MultipartBoundary--p77pSlE97gVxA9vHZ3llR7beGEIQoxVXk04dgXijz8----
Content-Type: image/svg+xml
Content-Transfer-Encoding: quoted-printable
Content-Location: https://pytorch.org/docs/1.13/_static/images/chevron-right-orange.svg

<?xml version=3D"1.0" encoding=3D"utf-8"?>
<!-- Generator: Adobe Illustrator 17.1.0, SVG Export Plug-In . SVG Version:=
 6.00 Build 0)  -->
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/=
SVG/1.1/DTD/svg11.dtd">
<svg version=3D"1.1" id=3D"Layer_1" xmlns=3D"http://www.w3.org/2000/svg" xm=
lns:xlink=3D"http://www.w3.org/1999/xlink" x=3D"0px" y=3D"0px"
	 viewBox=3D"0.3 0.3 8.2 14.4" enable-background=3D"new 0.3 0.3 8.2 14.4" x=
ml:space=3D"preserve">
<title>Page 1</title>
<desc>Created with Sketch.</desc>
<g id=3D"desktop">
	<g id=3D"_x30_1_x5F_Home" transform=3D"translate(-864.000000, -1683.000000=
)">
		<g id=3D"community" transform=3D"translate(-18.000000, 1391.000000)">
			<g id=3D"cta" transform=3D"translate(741.000000, 277.000000)">
				<polyline id=3D"Page-1" fill=3D"none" stroke=3D"#EE4C2C" stroke-width=
=3D"2" points=3D"142,16 148.1,22.5 142,29 				"/>
			</g>
		</g>
	</g>
</g>
</svg>=0A
------MultipartBoundary--p77pSlE97gVxA9vHZ3llR7beGEIQoxVXk04dgXijz8----
Content-Type: image/svg+xml
Content-Transfer-Encoding: quoted-printable
Content-Location: https://pytorch.org/docs/1.13/_static/images/logo-icon.svg

<?xml version=3D"1.0" encoding=3D"utf-8"?>
<!-- Generator: Adobe Illustrator 17.1.0, SVG Export Plug-In . SVG Version:=
 6.00 Build 0)  -->
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/=
SVG/1.1/DTD/svg11.dtd">
<svg version=3D"1.1" id=3D"Layer_1" xmlns=3D"http://www.w3.org/2000/svg" xm=
lns:xlink=3D"http://www.w3.org/1999/xlink" x=3D"0px" y=3D"0px"
	 viewBox=3D"0.6 1067.9 90.3 109.1" enable-background=3D"new 0.6 1067.9 90.=
3 109.1" xml:space=3D"preserve">
<g>
	<path fill=3D"#EE4C2C" d=3D"M77.6,1099.6l-8.1,8.1c13.3,13.3,13.3,34.7,0,47=
.8c-13.3,13.3-34.7,13.3-47.8,0
		c-13.3-13.3-13.3-34.7,0-47.8l0,0l21.1-21.1l3-3l0,0v-15.9l-31.8,31.8c-17.7=
,17.7-17.7,46.3,0,64c17.7,17.7,46.3,17.7,63.7,0
		C95.3,1145.8,95.3,1117.4,77.6,1099.6z"/>
	<circle fill=3D"#EE4C2C" cx=3D"61.7" cy=3D"1091.8" r=3D"5.9"/>
</g>
</svg>=0A
------MultipartBoundary--p77pSlE97gVxA9vHZ3llR7beGEIQoxVXk04dgXijz8----
Content-Type: image/svg+xml
Content-Transfer-Encoding: quoted-printable
Content-Location: https://pytorch.org/docs/1.13/_static/images/logo-dark.svg

<?xml version=3D"1.0" encoding=3D"utf-8"?>
<!-- Generator: Adobe Illustrator 17.1.0, SVG Export Plug-In . SVG Version:=
 6.00 Build 0)  -->
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/=
SVG/1.1/DTD/svg11.dtd">
<svg version=3D"1.1" id=3D"Layer_1" xmlns=3D"http://www.w3.org/2000/svg" xm=
lns:xlink=3D"http://www.w3.org/1999/xlink" x=3D"0px" y=3D"0px"
	 viewBox=3D"0.6 539.9 487.3 120.2" enable-background=3D"new 0.6 539.9 487.=
3 120.2" xml:space=3D"preserve">
<g>
	<path fill=3D"#EE4C2C" d=3D"M63.1,567.3l-6.6,6.6c10.8,10.8,10.8,28.2,0,38.=
8c-10.8,10.8-28.2,10.8-38.8,0c-10.8-10.8-10.8-28.2,0-38.8
		l0,0l17.1-17.1l2.4-2.4l0,0v-12.9l-25.8,25.8c-14.4,14.4-14.4,37.6,0,52s37.=
6,14.4,51.7,0C77.5,604.8,77.5,581.7,63.1,567.3z"/>
	<circle fill=3D"#EE4C2C" cx=3D"50.2" cy=3D"560.9" r=3D"4.8"/>
</g>
<g>
	<g>
		<path d=3D"M129.8,600.3h-11.1v28.5h-8.4v-81.1c0,0,19.2,0,20.4,0c21.3,0,31=
.5,10.5,31.5,25.2C162.5,591,149.9,600.3,129.8,600.3z
			 M130.7,555.8c-0.9,0-11.7,0-11.7,0v37.3l11.4-0.3c15.3-0.3,23.7-6.3,23.7-=
18.9C154.1,562.1,145.7,555.8,130.7,555.8z"/>
		<path d=3D"M199.8,628.5l-4.8,12.9c-5.4,14.4-11.1,18.6-19.2,18.6c-4.5,0-7.=
8-1.2-11.4-2.7l2.4-7.5c2.7,1.5,5.7,2.7,9,2.7
			c4.5,0,7.8-2.4,12.3-13.8l3.9-10.5l-23.1-58.6h8.7l18.6,49l18.3-49h8.4L199=
.8,628.5z"/>
		<path d=3D"M250.3,555.8v73.3h-8.4v-73.3h-28.5V548h65.2v7.8C278.5,555.8,25=
0.3,555.8,250.3,555.8z"/>
		<path d=3D"M302.3,630.6c-16.5,0-28.5-12.3-28.5-31.2c0-18.9,12.6-31.5,29.4=
-31.5s28.5,12.3,28.5,31.2
			C331.4,618,318.8,630.6,302.3,630.6z M302.6,575.4c-12.6,0-20.7,9.9-20.7,2=
4c0,14.4,8.4,24.3,21,24.3s20.7-9.9,20.7-24
			C323.6,585,315.2,575.4,302.6,575.4z"/>
		<path d=3D"M351.8,629.1h-8.1v-59.5l8.1-1.8v12.6c3.9-7.5,9.6-12.6,17.4-12.=
6c3.9,0,7.5,1.2,10.5,2.7l-2.1,7.5
			c-2.7-1.5-5.7-2.7-9-2.7c-6.3,0-12,4.8-16.8,15.3V629.1L351.8,629.1z"/>
		<path d=3D"M411.3,630.6c-18,0-29.1-12.9-29.1-31.2c0-18.6,12.3-31.5,29.1-3=
1.5c7.2,0,13.5,1.8,18.6,5.1l-2.1,7.2
			c-4.5-3-10.2-4.8-16.5-4.8c-12.9,0-20.7,9.6-20.7,23.7c0,14.4,8.4,24,21,24=
c6,0,12-1.8,16.5-4.8l1.8,7.5
			C424.5,628.8,418.2,630.6,411.3,630.6z"/>
		<path d=3D"M479.5,629.1v-38.5c0-10.5-4.2-15-12.6-15c-6.9,0-13.5,3.6-18.3,=
8.4v45.1h-8.1v-87.4l8.1-1.8c0,0,0,37.3,0,37.6
			c6.3-6.3,14.1-9.3,20.7-9.3c11.4,0,18.6,7.5,18.6,20.4v40.6H479.5z"/>
	</g>
</g>
</svg>=0A
------MultipartBoundary--p77pSlE97gVxA9vHZ3llR7beGEIQoxVXk04dgXijz8----
Content-Type: image/svg+xml
Content-Transfer-Encoding: quoted-printable
Content-Location: https://pytorch.org/docs/1.13/_static/images/search-icon.svg


<svg width=3D"16px" height=3D"16px" viewBox=3D"0 0 16 16" version=3D"1.1" x=
mlns=3D"http://www.w3.org/2000/svg" xmlns:xlink=3D"http://www.w3.org/1999/x=
link">
    <!-- Generator: Sketch 51.2 (57519) - http://www.bohemiancoding.com/ske=
tch -->
    <desc>Created with Sketch.</desc>
    <defs>
        <polygon id=3D"path-1" points=3D"0 0 16 0 16 16 0 16"></polygon>
    </defs>
    <g id=3D"Page-1" stroke=3D"none" stroke-width=3D"1" fill=3D"none" fill-=
rule=3D"evenodd">
        <g id=3D"Artboard" transform=3D"translate(-63.000000, -93.000000)">
            <g id=3D"ic" transform=3D"translate(63.000000, 93.000000)">
                <mask id=3D"mask-2" fill=3D"white">
                    <use xlink:href=3D"#path-1"></use>
                </mask>
                <g id=3D"Clip-2"></g>
                <path d=3D"M2.95913767,9.58220606 C1.13316435,7.75622206 1.=
13316435,4.78513897 2.95913767,2.95915497 C3.87212433,2.04616298 5.07138409=
,1.5896202 6.27064385,1.5896202 C7.46990361,1.5896202 8.66925692,2.04616298=
 9.58224358,2.95915497 C11.4082169,4.78513897 11.4082169,7.75622206 9.58224=
358,9.58220606 C8.69769713,10.4667577 7.52163859,10.9538926 6.27064385,10.9=
538926 C5.01974267,10.9538926 3.84368413,10.4667577 2.95913767,9.58220606 Z=
 M16,14.8357224 L11.2495505,10.0852451 C13.1351173,7.62730486 12.9554949,4.=
08320445 10.7067543,1.83454417 C8.26070966,-0.611514724 4.28057804,-0.61151=
4724 1.83453345,1.83454417 C-0.611511149,4.28069663 -0.611511149,8.26075796=
 1.83453345,10.7068169 C3.01947955,11.8917699 4.59491713,12.544308 6.270643=
85,12.544308 C7.66870437,12.544308 8.99594505,12.0887007 10.085841,11.25017=
76 L14.8356356,16 L16,14.8357224 Z" id=3D"Fill-1" fill=3D"#EE4C2C" mask=3D"=
url(#mask-2)"></path>
            </g>
        </g>
    </g>
</svg>=0A
------MultipartBoundary--p77pSlE97gVxA9vHZ3llR7beGEIQoxVXk04dgXijz8----
Content-Type: image/svg+xml
Content-Transfer-Encoding: quoted-printable
Content-Location: https://pytorch.org/docs/1.13/_static/images/chevron-down-orange.svg

<svg width=3D"13px" height=3D"8px" viewBox=3D"0 0 13 8" version=3D"1.1" xml=
ns=3D"http://www.w3.org/2000/svg" xmlns:xlink=3D"http://www.w3.org/1999/xli=
nk">
    <!-- Generator: Sketch 51.2 (57519) - http://www.bohemiancoding.com/ske=
tch -->
    <desc>Created with Sketch.</desc>
    <defs></defs>
    <g id=3D"desktop" stroke=3D"none" stroke-width=3D"1" fill=3D"none" fill=
-rule=3D"evenodd">
        <g id=3D"Cloud-Button-Sequence" transform=3D"translate(-1311.000000=
, -3818.000000)" stroke=3D"#EE4C2C" stroke-width=3D"2">
            <g id=3D"GetStarted-Copy-3" transform=3D"translate(98.000000, 3=
249.000000)">
                <g id=3D"Via-CLoud" transform=3D"translate(855.000000, 212.=
000000)">
                    <g id=3D"Button" transform=3D"translate(0.000000, 328.0=
00000)">
                        <polyline id=3D"Page-1" transform=3D"translate(364.=
566667, 32.500000) rotate(90.000000) translate(-364.566667, -32.500000) " p=
oints=3D"362 27 367.133333 32.4998402 362 38"></polyline>
                    </g>
                </g>
            </g>
        </g>
    </g>
</svg>=0A
------MultipartBoundary--p77pSlE97gVxA9vHZ3llR7beGEIQoxVXk04dgXijz8----
Content-Type: image/svg+xml
Content-Transfer-Encoding: quoted-printable
Content-Location: https://pytorch.org/docs/1.13/_static/images/chevron-down-black.svg

<svg width=3D"13px" height=3D"8px" viewBox=3D"0 0 13 8" version=3D"1.1" xml=
ns=3D"http://www.w3.org/2000/svg" xmlns:xlink=3D"http://www.w3.org/1999/xli=
nk">
    <!-- Generator: Sketch 51.2 (57519) - http://www.bohemiancoding.com/ske=
tch -->
    <desc>Created with Sketch.</desc>
    <defs></defs>
    <g id=3D"desktop" stroke=3D"none" stroke-width=3D"1" fill=3D"none" fill=
-rule=3D"evenodd">
        <g id=3D"Cloud-Button-Sequence" transform=3D"translate(-1311.000000=
, -3818.000000)" stroke=3D"#262626" stroke-width=3D"2">
            <g id=3D"GetStarted-Copy-3" transform=3D"translate(98.000000, 3=
249.000000)">
                <g id=3D"Via-CLoud" transform=3D"translate(855.000000, 212.=
000000)">
                    <g id=3D"Button" transform=3D"translate(0.000000, 328.0=
00000)">
                        <polyline id=3D"Page-1" transform=3D"translate(364.=
566667, 32.500000) rotate(90.000000) translate(-364.566667, -32.500000) " p=
oints=3D"362 27 367.133333 32.4998402 362 38"></polyline>
                    </g>
                </g>
            </g>
        </g>
    </g>
</svg>=0A
------MultipartBoundary--p77pSlE97gVxA9vHZ3llR7beGEIQoxVXk04dgXijz8----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://pytorch.org/docs/1.13/_static/pygments.css

@charset "utf-8";

pre { line-height: 125%; }

td.linenos .normal { color: inherit; background-color: transparent; padding=
-left: 5px; padding-right: 5px; }

span.linenos { color: inherit; background-color: transparent; padding-left:=
 5px; padding-right: 5px; }

td.linenos .special { color: rgb(0, 0, 0); background-color: rgb(255, 255, =
192); padding-left: 5px; padding-right: 5px; }

span.linenos.special { color: rgb(0, 0, 0); background-color: rgb(255, 255,=
 192); padding-left: 5px; padding-right: 5px; }

.highlight .hll { background-color: rgb(255, 255, 204); }

.highlight { background: rgb(238, 255, 204); }

.highlight .c { color: rgb(64, 128, 144); font-style: italic; }

.highlight .err { border: 1px solid rgb(255, 0, 0); }

.highlight .k { color: rgb(0, 112, 32); font-weight: bold; }

.highlight .o { color: rgb(102, 102, 102); }

.highlight .ch { color: rgb(64, 128, 144); font-style: italic; }

.highlight .cm { color: rgb(64, 128, 144); font-style: italic; }

.highlight .cp { color: rgb(0, 112, 32); }

.highlight .cpf { color: rgb(64, 128, 144); font-style: italic; }

.highlight .c1 { color: rgb(64, 128, 144); font-style: italic; }

.highlight .cs { color: rgb(64, 128, 144); background-color: rgb(255, 240, =
240); }

.highlight .gd { color: rgb(160, 0, 0); }

.highlight .ge { font-style: italic; }

.highlight .gr { color: rgb(255, 0, 0); }

.highlight .gh { color: rgb(0, 0, 128); font-weight: bold; }

.highlight .gi { color: rgb(0, 160, 0); }

.highlight .go { color: rgb(51, 51, 51); }

.highlight .gp { color: rgb(198, 93, 9); font-weight: bold; }

.highlight .gs { font-weight: bold; }

.highlight .gu { color: rgb(128, 0, 128); font-weight: bold; }

.highlight .gt { color: rgb(0, 68, 221); }

.highlight .kc { color: rgb(0, 112, 32); font-weight: bold; }

.highlight .kd { color: rgb(0, 112, 32); font-weight: bold; }

.highlight .kn { color: rgb(0, 112, 32); font-weight: bold; }

.highlight .kp { color: rgb(0, 112, 32); }

.highlight .kr { color: rgb(0, 112, 32); font-weight: bold; }

.highlight .kt { color: rgb(144, 32, 0); }

.highlight .m { color: rgb(32, 128, 80); }

.highlight .s { color: rgb(64, 112, 160); }

.highlight .na { color: rgb(64, 112, 160); }

.highlight .nb { color: rgb(0, 112, 32); }

.highlight .nc { color: rgb(14, 132, 181); font-weight: bold; }

.highlight .no { color: rgb(96, 173, 213); }

.highlight .nd { color: rgb(85, 85, 85); font-weight: bold; }

.highlight .ni { color: rgb(213, 85, 55); font-weight: bold; }

.highlight .ne { color: rgb(0, 112, 32); }

.highlight .nf { color: rgb(6, 40, 126); }

.highlight .nl { color: rgb(0, 32, 112); font-weight: bold; }

.highlight .nn { color: rgb(14, 132, 181); font-weight: bold; }

.highlight .nt { color: rgb(6, 40, 115); font-weight: bold; }

.highlight .nv { color: rgb(187, 96, 213); }

.highlight .ow { color: rgb(0, 112, 32); font-weight: bold; }

.highlight .w { color: rgb(187, 187, 187); }

.highlight .mb { color: rgb(32, 128, 80); }

.highlight .mf { color: rgb(32, 128, 80); }

.highlight .mh { color: rgb(32, 128, 80); }

.highlight .mi { color: rgb(32, 128, 80); }

.highlight .mo { color: rgb(32, 128, 80); }

.highlight .sa { color: rgb(64, 112, 160); }

.highlight .sb { color: rgb(64, 112, 160); }

.highlight .sc { color: rgb(64, 112, 160); }

.highlight .dl { color: rgb(64, 112, 160); }

.highlight .sd { color: rgb(64, 112, 160); font-style: italic; }

.highlight .s2 { color: rgb(64, 112, 160); }

.highlight .se { color: rgb(64, 112, 160); font-weight: bold; }

.highlight .sh { color: rgb(64, 112, 160); }

.highlight .si { color: rgb(112, 160, 208); font-style: italic; }

.highlight .sx { color: rgb(198, 93, 9); }

.highlight .sr { color: rgb(35, 83, 136); }

.highlight .s1 { color: rgb(64, 112, 160); }

.highlight .ss { color: rgb(81, 121, 24); }

.highlight .bp { color: rgb(0, 112, 32); }

.highlight .fm { color: rgb(6, 40, 126); }

.highlight .vc { color: rgb(187, 96, 213); }

.highlight .vg { color: rgb(187, 96, 213); }

.highlight .vi { color: rgb(187, 96, 213); }

.highlight .vm { color: rgb(187, 96, 213); }

.highlight .il { color: rgb(32, 128, 80); }
------MultipartBoundary--p77pSlE97gVxA9vHZ3llR7beGEIQoxVXk04dgXijz8----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://pytorch.org/docs/1.13/_static/copybutton.css

@charset "utf-8";

button.copybtn { position: absolute; display: flex; top: 0.3em; right: 0.3e=
m; width: 1.7em; height: 1.7em; opacity: 0; transition: opacity 0.3s ease 0=
s, border 0.3s ease 0s, background-color 0.3s ease 0s; user-select: none; p=
adding: 0px; outline: none; border-radius: 0.4em; border: 1px solid rgba(27=
, 31, 36, 0.15); background-color: rgb(246, 248, 250); color: rgb(87, 96, 1=
06); }

button.copybtn.success { border-color: rgb(34, 134, 58); color: rgb(34, 134=
, 58); }

button.copybtn svg { stroke: currentcolor; width: 1.5em; height: 1.5em; pad=
ding: 0.1em; }

div.highlight { position: relative; }

.highlight:hover button.copybtn { opacity: 1; }

.highlight button.copybtn:hover { background-color: rgb(235, 235, 235); }

.highlight button.copybtn:active { background-color: rgb(187, 187, 187); }

.o-tooltip--left { position: relative; }

.o-tooltip--left::after { opacity: 0; visibility: hidden; position: absolut=
e; content: attr(data-tooltip); padding: 0.2em; font-size: 0.8em; left: -0.=
2em; background: grey; color: white; white-space: nowrap; z-index: 2; borde=
r-radius: 2px; transform: translateX(-102%) translateY(0px); transition: op=
acity 0.2s cubic-bezier(0.64, 0.09, 0.08, 1) 0s, transform 0.2s cubic-bezie=
r(0.64, 0.09, 0.08, 1) 0s; }

.o-tooltip--left:hover::after { display: block; opacity: 1; visibility: vis=
ible; transform: translateX(-100%) translateY(0px); transition: opacity 0.2=
s cubic-bezier(0.64, 0.09, 0.08, 1) 0.5s, transform 0.2s cubic-bezier(0.64,=
 0.09, 0.08, 1); }

@media print {
  button.copybtn { display: none; }
}
------MultipartBoundary--p77pSlE97gVxA9vHZ3llR7beGEIQoxVXk04dgXijz8----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://cdn.jsdelivr.net/npm/katex@0.10.0-beta/dist/katex.min.css

@charset "utf-8";

@font-face { font-family: KaTeX_AMS; src: url("fonts/KaTeX_AMS-Regular.woff=
2") format("woff2"), url("fonts/KaTeX_AMS-Regular.woff") format("woff"), ur=
l("fonts/KaTeX_AMS-Regular.ttf") format("truetype"); font-weight: 400; font=
-style: normal; }

@font-face { font-family: KaTeX_Caligraphic; src: url("fonts/KaTeX_Caligrap=
hic-Bold.woff2") format("woff2"), url("fonts/KaTeX_Caligraphic-Bold.woff") =
format("woff"), url("fonts/KaTeX_Caligraphic-Bold.ttf") format("truetype");=
 font-weight: 700; font-style: normal; }

@font-face { font-family: KaTeX_Caligraphic; src: url("fonts/KaTeX_Caligrap=
hic-Regular.woff2") format("woff2"), url("fonts/KaTeX_Caligraphic-Regular.w=
off") format("woff"), url("fonts/KaTeX_Caligraphic-Regular.ttf") format("tr=
uetype"); font-weight: 400; font-style: normal; }

@font-face { font-family: KaTeX_Fraktur; src: url("fonts/KaTeX_Fraktur-Bold=
.woff2") format("woff2"), url("fonts/KaTeX_Fraktur-Bold.woff") format("woff=
"), url("fonts/KaTeX_Fraktur-Bold.ttf") format("truetype"); font-weight: 70=
0; font-style: normal; }

@font-face { font-family: KaTeX_Fraktur; src: url("fonts/KaTeX_Fraktur-Regu=
lar.woff2") format("woff2"), url("fonts/KaTeX_Fraktur-Regular.woff") format=
("woff"), url("fonts/KaTeX_Fraktur-Regular.ttf") format("truetype"); font-w=
eight: 400; font-style: normal; }

@font-face { font-family: KaTeX_Main; src: url("fonts/KaTeX_Main-Bold.woff2=
") format("woff2"), url("fonts/KaTeX_Main-Bold.woff") format("woff"), url("=
fonts/KaTeX_Main-Bold.ttf") format("truetype"); font-weight: 700; font-styl=
e: normal; }

@font-face { font-family: KaTeX_Main; src: url("fonts/KaTeX_Main-BoldItalic=
.woff2") format("woff2"), url("fonts/KaTeX_Main-BoldItalic.woff") format("w=
off"), url("fonts/KaTeX_Main-BoldItalic.ttf") format("truetype"); font-weig=
ht: 700; font-style: italic; }

@font-face { font-family: KaTeX_Main; src: url("fonts/KaTeX_Main-Italic.wof=
f2") format("woff2"), url("fonts/KaTeX_Main-Italic.woff") format("woff"), u=
rl("fonts/KaTeX_Main-Italic.ttf") format("truetype"); font-weight: 400; fon=
t-style: italic; }

@font-face { font-family: KaTeX_Main; src: url("fonts/KaTeX_Main-Regular.wo=
ff2") format("woff2"), url("fonts/KaTeX_Main-Regular.woff") format("woff"),=
 url("fonts/KaTeX_Main-Regular.ttf") format("truetype"); font-weight: 400; =
font-style: normal; }

@font-face { font-family: KaTeX_Math; src: url("fonts/KaTeX_Math-BoldItalic=
.woff2") format("woff2"), url("fonts/KaTeX_Math-BoldItalic.woff") format("w=
off"), url("fonts/KaTeX_Math-BoldItalic.ttf") format("truetype"); font-weig=
ht: 700; font-style: italic; }

@font-face { font-family: KaTeX_Math; src: url("fonts/KaTeX_Math-Italic.wof=
f2") format("woff2"), url("fonts/KaTeX_Math-Italic.woff") format("woff"), u=
rl("fonts/KaTeX_Math-Italic.ttf") format("truetype"); font-weight: 400; fon=
t-style: italic; }

@font-face { font-family: KaTeX_SansSerif; src: url("fonts/KaTeX_SansSerif-=
Bold.woff2") format("woff2"), url("fonts/KaTeX_SansSerif-Bold.woff") format=
("woff"), url("fonts/KaTeX_SansSerif-Bold.ttf") format("truetype"); font-we=
ight: 700; font-style: normal; }

@font-face { font-family: KaTeX_SansSerif; src: url("fonts/KaTeX_SansSerif-=
Italic.woff2") format("woff2"), url("fonts/KaTeX_SansSerif-Italic.woff") fo=
rmat("woff"), url("fonts/KaTeX_SansSerif-Italic.ttf") format("truetype"); f=
ont-weight: 400; font-style: italic; }

@font-face { font-family: KaTeX_SansSerif; src: url("fonts/KaTeX_SansSerif-=
Regular.woff2") format("woff2"), url("fonts/KaTeX_SansSerif-Regular.woff") =
format("woff"), url("fonts/KaTeX_SansSerif-Regular.ttf") format("truetype")=
; font-weight: 400; font-style: normal; }

@font-face { font-family: KaTeX_Script; src: url("fonts/KaTeX_Script-Regula=
r.woff2") format("woff2"), url("fonts/KaTeX_Script-Regular.woff") format("w=
off"), url("fonts/KaTeX_Script-Regular.ttf") format("truetype"); font-weigh=
t: 400; font-style: normal; }

@font-face { font-family: KaTeX_Size1; src: url("fonts/KaTeX_Size1-Regular.=
woff2") format("woff2"), url("fonts/KaTeX_Size1-Regular.woff") format("woff=
"), url("fonts/KaTeX_Size1-Regular.ttf") format("truetype"); font-weight: 4=
00; font-style: normal; }

@font-face { font-family: KaTeX_Size2; src: url("fonts/KaTeX_Size2-Regular.=
woff2") format("woff2"), url("fonts/KaTeX_Size2-Regular.woff") format("woff=
"), url("fonts/KaTeX_Size2-Regular.ttf") format("truetype"); font-weight: 4=
00; font-style: normal; }

@font-face { font-family: KaTeX_Size3; src: url("fonts/KaTeX_Size3-Regular.=
woff2") format("woff2"), url("fonts/KaTeX_Size3-Regular.woff") format("woff=
"), url("fonts/KaTeX_Size3-Regular.ttf") format("truetype"); font-weight: 4=
00; font-style: normal; }

@font-face { font-family: KaTeX_Size4; src: url("fonts/KaTeX_Size4-Regular.=
woff2") format("woff2"), url("fonts/KaTeX_Size4-Regular.woff") format("woff=
"), url("fonts/KaTeX_Size4-Regular.ttf") format("truetype"); font-weight: 4=
00; font-style: normal; }

@font-face { font-family: KaTeX_Typewriter; src: url("fonts/KaTeX_Typewrite=
r-Regular.woff2") format("woff2"), url("fonts/KaTeX_Typewriter-Regular.woff=
") format("woff"), url("fonts/KaTeX_Typewriter-Regular.ttf") format("truety=
pe"); font-weight: 400; font-style: normal; }

@media screen {
  .katex .mtable .vertical-separator { min-width: 1px; }
  .katex .hdashline, .katex .hline, .katex .mfrac .frac-line, .katex .overl=
ine .overline-line, .katex .rule, .katex .underline .underline-line { min-h=
eight: 1px; }
}

.katex-display { display: block; margin: 1em 0px; text-align: center; }

.katex-display > .katex { display: block; text-align: center; white-space: =
nowrap; }

.katex-display > .katex > .katex-html { display: block; }

.katex-display > .katex > .katex-html > .tag { position: absolute; right: 0=
px; }

.katex { font: 1.21em / 1.2 KaTeX_Main, "Times New Roman", serif; text-inde=
nt: 0px; text-rendering: auto; }

.katex * { }

.katex .katex-mathml { position: absolute; clip: rect(1px, 1px, 1px, 1px); =
padding: 0px; border: 0px; height: 1px; width: 1px; overflow: hidden; }

.katex .katex-html > .newline { display: block; }

.katex .base { position: relative; white-space: nowrap; width: min-content;=
 }

.katex .base, .katex .strut { display: inline-block; }

.katex .textbf { font-weight: 700; }

.katex .textit { font-style: italic; }

.katex .textrm { font-family: KaTeX_Main; }

.katex .textsf { font-family: KaTeX_SansSerif; }

.katex .texttt { font-family: KaTeX_Typewriter; }

.katex .mathit { font-family: KaTeX_Math; font-style: italic; }

.katex .mathrm { font-style: normal; }

.katex .mathbf { font-family: KaTeX_Main; font-weight: 700; }

.katex .boldsymbol { font-family: KaTeX_Math; font-weight: 700; font-style:=
 italic; }

.katex .amsrm, .katex .mathbb, .katex .textbb { font-family: KaTeX_AMS; }

.katex .mathcal { font-family: KaTeX_Caligraphic; }

.katex .mathfrak, .katex .textfrak { font-family: KaTeX_Fraktur; }

.katex .mathtt { font-family: KaTeX_Typewriter; }

.katex .mathscr, .katex .textscr { font-family: KaTeX_Script; }

.katex .mathsf, .katex .textsf { font-family: KaTeX_SansSerif; }

.katex .mainit { font-family: KaTeX_Main; font-style: italic; }

.katex .mainrm { font-family: KaTeX_Main; font-style: normal; }

.katex .vlist-t { display: inline-table; table-layout: fixed; }

.katex .vlist-r { display: table-row; }

.katex .vlist { display: table-cell; vertical-align: bottom; position: rela=
tive; }

.katex .vlist > span { display: block; height: 0px; position: relative; }

.katex .vlist > span > span { display: inline-block; }

.katex .vlist > span > .pstrut { overflow: hidden; width: 0px; }

.katex .vlist-t2 { margin-right: -2px; }

.katex .vlist-s { display: table-cell; vertical-align: bottom; font-size: 1=
px; width: 2px; min-width: 2px; }

.katex .msupsub { text-align: left; }

.katex .mfrac > span > span { text-align: center; }

.katex .mfrac .frac-line { display: inline-block; width: 100%; border-botto=
m-style: solid; }

.katex .mspace { display: inline-block; }

.katex .clap, .katex .llap, .katex .rlap { width: 0px; position: relative; =
}

.katex .clap > .inner, .katex .llap > .inner, .katex .rlap > .inner { posit=
ion: absolute; }

.katex .clap > .fix, .katex .llap > .fix, .katex .rlap > .fix { display: in=
line-block; }

.katex .llap > .inner { right: 0px; }

.katex .clap > .inner, .katex .rlap > .inner { left: 0px; }

.katex .clap > .inner > span { margin-left: -50%; margin-right: 50%; }

.katex .rule { display: inline-block; border: 0px solid; position: relative=
; }

.katex .hline, .katex .overline .overline-line, .katex .underline .underlin=
e-line { display: inline-block; width: 100%; border-bottom-style: solid; }

.katex .hdashline { display: inline-block; width: 100%; border-bottom-style=
: dashed; }

.katex .sqrt > .root { margin-left: 0.277778em; margin-right: -0.555556em; =
}

.katex .fontsize-ensurer, .katex .sizing { display: inline-block; }

.katex .fontsize-ensurer.reset-size1.size1, .katex .sizing.reset-size1.size=
1 { font-size: 1em; }

.katex .fontsize-ensurer.reset-size1.size2, .katex .sizing.reset-size1.size=
2 { font-size: 1.2em; }

.katex .fontsize-ensurer.reset-size1.size3, .katex .sizing.reset-size1.size=
3 { font-size: 1.4em; }

.katex .fontsize-ensurer.reset-size1.size4, .katex .sizing.reset-size1.size=
4 { font-size: 1.6em; }

.katex .fontsize-ensurer.reset-size1.size5, .katex .sizing.reset-size1.size=
5 { font-size: 1.8em; }

.katex .fontsize-ensurer.reset-size1.size6, .katex .sizing.reset-size1.size=
6 { font-size: 2em; }

.katex .fontsize-ensurer.reset-size1.size7, .katex .sizing.reset-size1.size=
7 { font-size: 2.4em; }

.katex .fontsize-ensurer.reset-size1.size8, .katex .sizing.reset-size1.size=
8 { font-size: 2.88em; }

.katex .fontsize-ensurer.reset-size1.size9, .katex .sizing.reset-size1.size=
9 { font-size: 3.456em; }

.katex .fontsize-ensurer.reset-size1.size10, .katex .sizing.reset-size1.siz=
e10 { font-size: 4.148em; }

.katex .fontsize-ensurer.reset-size1.size11, .katex .sizing.reset-size1.siz=
e11 { font-size: 4.976em; }

.katex .fontsize-ensurer.reset-size2.size1, .katex .sizing.reset-size2.size=
1 { font-size: 0.833333em; }

.katex .fontsize-ensurer.reset-size2.size2, .katex .sizing.reset-size2.size=
2 { font-size: 1em; }

.katex .fontsize-ensurer.reset-size2.size3, .katex .sizing.reset-size2.size=
3 { font-size: 1.16667em; }

.katex .fontsize-ensurer.reset-size2.size4, .katex .sizing.reset-size2.size=
4 { font-size: 1.33333em; }

.katex .fontsize-ensurer.reset-size2.size5, .katex .sizing.reset-size2.size=
5 { font-size: 1.5em; }

.katex .fontsize-ensurer.reset-size2.size6, .katex .sizing.reset-size2.size=
6 { font-size: 1.66667em; }

.katex .fontsize-ensurer.reset-size2.size7, .katex .sizing.reset-size2.size=
7 { font-size: 2em; }

.katex .fontsize-ensurer.reset-size2.size8, .katex .sizing.reset-size2.size=
8 { font-size: 2.4em; }

.katex .fontsize-ensurer.reset-size2.size9, .katex .sizing.reset-size2.size=
9 { font-size: 2.88em; }

.katex .fontsize-ensurer.reset-size2.size10, .katex .sizing.reset-size2.siz=
e10 { font-size: 3.45667em; }

.katex .fontsize-ensurer.reset-size2.size11, .katex .sizing.reset-size2.siz=
e11 { font-size: 4.14667em; }

.katex .fontsize-ensurer.reset-size3.size1, .katex .sizing.reset-size3.size=
1 { font-size: 0.714286em; }

.katex .fontsize-ensurer.reset-size3.size2, .katex .sizing.reset-size3.size=
2 { font-size: 0.857143em; }

.katex .fontsize-ensurer.reset-size3.size3, .katex .sizing.reset-size3.size=
3 { font-size: 1em; }

.katex .fontsize-ensurer.reset-size3.size4, .katex .sizing.reset-size3.size=
4 { font-size: 1.14286em; }

.katex .fontsize-ensurer.reset-size3.size5, .katex .sizing.reset-size3.size=
5 { font-size: 1.28571em; }

.katex .fontsize-ensurer.reset-size3.size6, .katex .sizing.reset-size3.size=
6 { font-size: 1.42857em; }

.katex .fontsize-ensurer.reset-size3.size7, .katex .sizing.reset-size3.size=
7 { font-size: 1.71429em; }

.katex .fontsize-ensurer.reset-size3.size8, .katex .sizing.reset-size3.size=
8 { font-size: 2.05714em; }

.katex .fontsize-ensurer.reset-size3.size9, .katex .sizing.reset-size3.size=
9 { font-size: 2.46857em; }

.katex .fontsize-ensurer.reset-size3.size10, .katex .sizing.reset-size3.siz=
e10 { font-size: 2.96286em; }

.katex .fontsize-ensurer.reset-size3.size11, .katex .sizing.reset-size3.siz=
e11 { font-size: 3.55429em; }

.katex .fontsize-ensurer.reset-size4.size1, .katex .sizing.reset-size4.size=
1 { font-size: 0.625em; }

.katex .fontsize-ensurer.reset-size4.size2, .katex .sizing.reset-size4.size=
2 { font-size: 0.75em; }

.katex .fontsize-ensurer.reset-size4.size3, .katex .sizing.reset-size4.size=
3 { font-size: 0.875em; }

.katex .fontsize-ensurer.reset-size4.size4, .katex .sizing.reset-size4.size=
4 { font-size: 1em; }

.katex .fontsize-ensurer.reset-size4.size5, .katex .sizing.reset-size4.size=
5 { font-size: 1.125em; }

.katex .fontsize-ensurer.reset-size4.size6, .katex .sizing.reset-size4.size=
6 { font-size: 1.25em; }

.katex .fontsize-ensurer.reset-size4.size7, .katex .sizing.reset-size4.size=
7 { font-size: 1.5em; }

.katex .fontsize-ensurer.reset-size4.size8, .katex .sizing.reset-size4.size=
8 { font-size: 1.8em; }

.katex .fontsize-ensurer.reset-size4.size9, .katex .sizing.reset-size4.size=
9 { font-size: 2.16em; }

.katex .fontsize-ensurer.reset-size4.size10, .katex .sizing.reset-size4.siz=
e10 { font-size: 2.5925em; }

.katex .fontsize-ensurer.reset-size4.size11, .katex .sizing.reset-size4.siz=
e11 { font-size: 3.11em; }

.katex .fontsize-ensurer.reset-size5.size1, .katex .sizing.reset-size5.size=
1 { font-size: 0.555556em; }

.katex .fontsize-ensurer.reset-size5.size2, .katex .sizing.reset-size5.size=
2 { font-size: 0.666667em; }

.katex .fontsize-ensurer.reset-size5.size3, .katex .sizing.reset-size5.size=
3 { font-size: 0.777778em; }

.katex .fontsize-ensurer.reset-size5.size4, .katex .sizing.reset-size5.size=
4 { font-size: 0.888889em; }

.katex .fontsize-ensurer.reset-size5.size5, .katex .sizing.reset-size5.size=
5 { font-size: 1em; }

.katex .fontsize-ensurer.reset-size5.size6, .katex .sizing.reset-size5.size=
6 { font-size: 1.11111em; }

.katex .fontsize-ensurer.reset-size5.size7, .katex .sizing.reset-size5.size=
7 { font-size: 1.33333em; }

.katex .fontsize-ensurer.reset-size5.size8, .katex .sizing.reset-size5.size=
8 { font-size: 1.6em; }

.katex .fontsize-ensurer.reset-size5.size9, .katex .sizing.reset-size5.size=
9 { font-size: 1.92em; }

.katex .fontsize-ensurer.reset-size5.size10, .katex .sizing.reset-size5.siz=
e10 { font-size: 2.30444em; }

.katex .fontsize-ensurer.reset-size5.size11, .katex .sizing.reset-size5.siz=
e11 { font-size: 2.76444em; }

.katex .fontsize-ensurer.reset-size6.size1, .katex .sizing.reset-size6.size=
1 { font-size: 0.5em; }

.katex .fontsize-ensurer.reset-size6.size2, .katex .sizing.reset-size6.size=
2 { font-size: 0.6em; }

.katex .fontsize-ensurer.reset-size6.size3, .katex .sizing.reset-size6.size=
3 { font-size: 0.7em; }

.katex .fontsize-ensurer.reset-size6.size4, .katex .sizing.reset-size6.size=
4 { font-size: 0.8em; }

.katex .fontsize-ensurer.reset-size6.size5, .katex .sizing.reset-size6.size=
5 { font-size: 0.9em; }

.katex .fontsize-ensurer.reset-size6.size6, .katex .sizing.reset-size6.size=
6 { font-size: 1em; }

.katex .fontsize-ensurer.reset-size6.size7, .katex .sizing.reset-size6.size=
7 { font-size: 1.2em; }

.katex .fontsize-ensurer.reset-size6.size8, .katex .sizing.reset-size6.size=
8 { font-size: 1.44em; }

.katex .fontsize-ensurer.reset-size6.size9, .katex .sizing.reset-size6.size=
9 { font-size: 1.728em; }

.katex .fontsize-ensurer.reset-size6.size10, .katex .sizing.reset-size6.siz=
e10 { font-size: 2.074em; }

.katex .fontsize-ensurer.reset-size6.size11, .katex .sizing.reset-size6.siz=
e11 { font-size: 2.488em; }

.katex .fontsize-ensurer.reset-size7.size1, .katex .sizing.reset-size7.size=
1 { font-size: 0.416667em; }

.katex .fontsize-ensurer.reset-size7.size2, .katex .sizing.reset-size7.size=
2 { font-size: 0.5em; }

.katex .fontsize-ensurer.reset-size7.size3, .katex .sizing.reset-size7.size=
3 { font-size: 0.583333em; }

.katex .fontsize-ensurer.reset-size7.size4, .katex .sizing.reset-size7.size=
4 { font-size: 0.666667em; }

.katex .fontsize-ensurer.reset-size7.size5, .katex .sizing.reset-size7.size=
5 { font-size: 0.75em; }

.katex .fontsize-ensurer.reset-size7.size6, .katex .sizing.reset-size7.size=
6 { font-size: 0.833333em; }

.katex .fontsize-ensurer.reset-size7.size7, .katex .sizing.reset-size7.size=
7 { font-size: 1em; }

.katex .fontsize-ensurer.reset-size7.size8, .katex .sizing.reset-size7.size=
8 { font-size: 1.2em; }

.katex .fontsize-ensurer.reset-size7.size9, .katex .sizing.reset-size7.size=
9 { font-size: 1.44em; }

.katex .fontsize-ensurer.reset-size7.size10, .katex .sizing.reset-size7.siz=
e10 { font-size: 1.72833em; }

.katex .fontsize-ensurer.reset-size7.size11, .katex .sizing.reset-size7.siz=
e11 { font-size: 2.07333em; }

.katex .fontsize-ensurer.reset-size8.size1, .katex .sizing.reset-size8.size=
1 { font-size: 0.347222em; }

.katex .fontsize-ensurer.reset-size8.size2, .katex .sizing.reset-size8.size=
2 { font-size: 0.416667em; }

.katex .fontsize-ensurer.reset-size8.size3, .katex .sizing.reset-size8.size=
3 { font-size: 0.486111em; }

.katex .fontsize-ensurer.reset-size8.size4, .katex .sizing.reset-size8.size=
4 { font-size: 0.555556em; }

.katex .fontsize-ensurer.reset-size8.size5, .katex .sizing.reset-size8.size=
5 { font-size: 0.625em; }

.katex .fontsize-ensurer.reset-size8.size6, .katex .sizing.reset-size8.size=
6 { font-size: 0.694444em; }

.katex .fontsize-ensurer.reset-size8.size7, .katex .sizing.reset-size8.size=
7 { font-size: 0.833333em; }

.katex .fontsize-ensurer.reset-size8.size8, .katex .sizing.reset-size8.size=
8 { font-size: 1em; }

.katex .fontsize-ensurer.reset-size8.size9, .katex .sizing.reset-size8.size=
9 { font-size: 1.2em; }

.katex .fontsize-ensurer.reset-size8.size10, .katex .sizing.reset-size8.siz=
e10 { font-size: 1.44028em; }

.katex .fontsize-ensurer.reset-size8.size11, .katex .sizing.reset-size8.siz=
e11 { font-size: 1.72778em; }

.katex .fontsize-ensurer.reset-size9.size1, .katex .sizing.reset-size9.size=
1 { font-size: 0.289352em; }

.katex .fontsize-ensurer.reset-size9.size2, .katex .sizing.reset-size9.size=
2 { font-size: 0.347222em; }

.katex .fontsize-ensurer.reset-size9.size3, .katex .sizing.reset-size9.size=
3 { font-size: 0.405093em; }

.katex .fontsize-ensurer.reset-size9.size4, .katex .sizing.reset-size9.size=
4 { font-size: 0.462963em; }

.katex .fontsize-ensurer.reset-size9.size5, .katex .sizing.reset-size9.size=
5 { font-size: 0.520833em; }

.katex .fontsize-ensurer.reset-size9.size6, .katex .sizing.reset-size9.size=
6 { font-size: 0.578704em; }

.katex .fontsize-ensurer.reset-size9.size7, .katex .sizing.reset-size9.size=
7 { font-size: 0.694444em; }

.katex .fontsize-ensurer.reset-size9.size8, .katex .sizing.reset-size9.size=
8 { font-size: 0.833333em; }

.katex .fontsize-ensurer.reset-size9.size9, .katex .sizing.reset-size9.size=
9 { font-size: 1em; }

.katex .fontsize-ensurer.reset-size9.size10, .katex .sizing.reset-size9.siz=
e10 { font-size: 1.20023em; }

.katex .fontsize-ensurer.reset-size9.size11, .katex .sizing.reset-size9.siz=
e11 { font-size: 1.43981em; }

.katex .fontsize-ensurer.reset-size10.size1, .katex .sizing.reset-size10.si=
ze1 { font-size: 0.24108em; }

.katex .fontsize-ensurer.reset-size10.size2, .katex .sizing.reset-size10.si=
ze2 { font-size: 0.289296em; }

.katex .fontsize-ensurer.reset-size10.size3, .katex .sizing.reset-size10.si=
ze3 { font-size: 0.337512em; }

.katex .fontsize-ensurer.reset-size10.size4, .katex .sizing.reset-size10.si=
ze4 { font-size: 0.385728em; }

.katex .fontsize-ensurer.reset-size10.size5, .katex .sizing.reset-size10.si=
ze5 { font-size: 0.433944em; }

.katex .fontsize-ensurer.reset-size10.size6, .katex .sizing.reset-size10.si=
ze6 { font-size: 0.48216em; }

.katex .fontsize-ensurer.reset-size10.size7, .katex .sizing.reset-size10.si=
ze7 { font-size: 0.578592em; }

.katex .fontsize-ensurer.reset-size10.size8, .katex .sizing.reset-size10.si=
ze8 { font-size: 0.694311em; }

.katex .fontsize-ensurer.reset-size10.size9, .katex .sizing.reset-size10.si=
ze9 { font-size: 0.833173em; }

.katex .fontsize-ensurer.reset-size10.size10, .katex .sizing.reset-size10.s=
ize10 { font-size: 1em; }

.katex .fontsize-ensurer.reset-size10.size11, .katex .sizing.reset-size10.s=
ize11 { font-size: 1.19961em; }

.katex .fontsize-ensurer.reset-size11.size1, .katex .sizing.reset-size11.si=
ze1 { font-size: 0.200965em; }

.katex .fontsize-ensurer.reset-size11.size2, .katex .sizing.reset-size11.si=
ze2 { font-size: 0.241158em; }

.katex .fontsize-ensurer.reset-size11.size3, .katex .sizing.reset-size11.si=
ze3 { font-size: 0.28135em; }

.katex .fontsize-ensurer.reset-size11.size4, .katex .sizing.reset-size11.si=
ze4 { font-size: 0.321543em; }

.katex .fontsize-ensurer.reset-size11.size5, .katex .sizing.reset-size11.si=
ze5 { font-size: 0.361736em; }

.katex .fontsize-ensurer.reset-size11.size6, .katex .sizing.reset-size11.si=
ze6 { font-size: 0.401929em; }

.katex .fontsize-ensurer.reset-size11.size7, .katex .sizing.reset-size11.si=
ze7 { font-size: 0.482315em; }

.katex .fontsize-ensurer.reset-size11.size8, .katex .sizing.reset-size11.si=
ze8 { font-size: 0.578778em; }

.katex .fontsize-ensurer.reset-size11.size9, .katex .sizing.reset-size11.si=
ze9 { font-size: 0.694534em; }

.katex .fontsize-ensurer.reset-size11.size10, .katex .sizing.reset-size11.s=
ize10 { font-size: 0.833601em; }

.katex .fontsize-ensurer.reset-size11.size11, .katex .sizing.reset-size11.s=
ize11 { font-size: 1em; }

.katex .delimsizing.size1 { font-family: KaTeX_Size1; }

.katex .delimsizing.size2 { font-family: KaTeX_Size2; }

.katex .delimsizing.size3 { font-family: KaTeX_Size3; }

.katex .delimsizing.size4 { font-family: KaTeX_Size4; }

.katex .delimsizing.mult .delim-size1 > span { font-family: KaTeX_Size1; }

.katex .delimsizing.mult .delim-size4 > span { font-family: KaTeX_Size4; }

.katex .nulldelimiter { display: inline-block; width: 0.12em; }

.katex .delimcenter, .katex .op-symbol { position: relative; }

.katex .op-symbol.small-op { font-family: KaTeX_Size1; }

.katex .op-symbol.large-op { font-family: KaTeX_Size2; }

.katex .accent > .vlist-t, .katex .op-limits > .vlist-t { text-align: cente=
r; }

.katex .accent .accent-body:not(.accent-full) { width: 0px; }

.katex .accent .accent-body { position: relative; }

.katex .overlay { display: block; }

.katex .mtable .vertical-separator { display: inline-block; margin: 0px -0.=
025em; border-right: 0.05em solid; }

.katex .mtable .vs-dashed { border-right: 0.05em dashed; }

.katex .mtable .arraycolsep { display: inline-block; }

.katex .mtable .col-align-c > .vlist-t { text-align: center; }

.katex .mtable .col-align-l > .vlist-t { text-align: left; }

.katex .mtable .col-align-r > .vlist-t { text-align: right; }

.katex .svg-align { text-align: left; }

.katex svg { display: block; position: absolute; width: 100%; height: inher=
it; fill: currentcolor; stroke: currentcolor; fill-rule: nonzero; fill-opac=
ity: 1; stroke-width: 1; stroke-linecap: butt; stroke-linejoin: miter; stro=
ke-miterlimit: 4; stroke-dasharray: none; stroke-dashoffset: 0; stroke-opac=
ity: 1; }

.katex svg path { stroke: none; }

.katex .stretchy { width: 100%; display: block; position: relative; overflo=
w: hidden; }

.katex .stretchy::after, .katex .stretchy::before { content: ""; }

.katex .hide-tail { width: 100%; position: relative; overflow: hidden; }

.katex .halfarrow-left { position: absolute; left: 0px; width: 50.2%; overf=
low: hidden; }

.katex .halfarrow-right { position: absolute; right: 0px; width: 50.2%; ove=
rflow: hidden; }

.katex .brace-left { position: absolute; left: 0px; width: 25.1%; overflow:=
 hidden; }

.katex .brace-center { position: absolute; left: 25%; width: 50%; overflow:=
 hidden; }

.katex .brace-right { position: absolute; right: 0px; width: 25.1%; overflo=
w: hidden; }

.katex .x-arrow-pad { padding: 0px 0.5em; }

.katex .mover, .katex .munder, .katex .x-arrow { text-align: center; }

.katex .boxpad { padding: 0px 0.3em; }

.katex .fbox { box-sizing: border-box; border: 0.04em solid rgb(0, 0, 0); }

.katex .fcolorbox { box-sizing: border-box; border: 0.04em solid; }

.katex .cancel-pad { padding: 0px 0.2em; }

.katex .cancel-lap { margin-left: -0.2em; margin-right: -0.2em; }

.katex .sout { border-bottom-style: solid; border-bottom-width: 0.08em; }
------MultipartBoundary--p77pSlE97gVxA9vHZ3llR7beGEIQoxVXk04dgXijz8----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://cdn.jsdelivr.net/npm/katex@0.13.11/dist/katex.min.css

@charset "utf-8";

@font-face { font-family: KaTeX_AMS; font-style: normal; font-weight: 400; =
src: url("fonts/KaTeX_AMS-Regular.woff2") format("woff2"), url("fonts/KaTeX=
_AMS-Regular.woff") format("woff"), url("fonts/KaTeX_AMS-Regular.ttf") form=
at("truetype"); }

@font-face { font-family: KaTeX_Caligraphic; font-style: normal; font-weigh=
t: 700; src: url("fonts/KaTeX_Caligraphic-Bold.woff2") format("woff2"), url=
("fonts/KaTeX_Caligraphic-Bold.woff") format("woff"), url("fonts/KaTeX_Cali=
graphic-Bold.ttf") format("truetype"); }

@font-face { font-family: KaTeX_Caligraphic; font-style: normal; font-weigh=
t: 400; src: url("fonts/KaTeX_Caligraphic-Regular.woff2") format("woff2"), =
url("fonts/KaTeX_Caligraphic-Regular.woff") format("woff"), url("fonts/KaTe=
X_Caligraphic-Regular.ttf") format("truetype"); }

@font-face { font-family: KaTeX_Fraktur; font-style: normal; font-weight: 7=
00; src: url("fonts/KaTeX_Fraktur-Bold.woff2") format("woff2"), url("fonts/=
KaTeX_Fraktur-Bold.woff") format("woff"), url("fonts/KaTeX_Fraktur-Bold.ttf=
") format("truetype"); }

@font-face { font-family: KaTeX_Fraktur; font-style: normal; font-weight: 4=
00; src: url("fonts/KaTeX_Fraktur-Regular.woff2") format("woff2"), url("fon=
ts/KaTeX_Fraktur-Regular.woff") format("woff"), url("fonts/KaTeX_Fraktur-Re=
gular.ttf") format("truetype"); }

@font-face { font-family: KaTeX_Main; font-style: normal; font-weight: 700;=
 src: url("fonts/KaTeX_Main-Bold.woff2") format("woff2"), url("fonts/KaTeX_=
Main-Bold.woff") format("woff"), url("fonts/KaTeX_Main-Bold.ttf") format("t=
ruetype"); }

@font-face { font-family: KaTeX_Main; font-style: italic; font-weight: 700;=
 src: url("fonts/KaTeX_Main-BoldItalic.woff2") format("woff2"), url("fonts/=
KaTeX_Main-BoldItalic.woff") format("woff"), url("fonts/KaTeX_Main-BoldItal=
ic.ttf") format("truetype"); }

@font-face { font-family: KaTeX_Main; font-style: italic; font-weight: 400;=
 src: url("fonts/KaTeX_Main-Italic.woff2") format("woff2"), url("fonts/KaTe=
X_Main-Italic.woff") format("woff"), url("fonts/KaTeX_Main-Italic.ttf") for=
mat("truetype"); }

@font-face { font-family: KaTeX_Main; font-style: normal; font-weight: 400;=
 src: url("fonts/KaTeX_Main-Regular.woff2") format("woff2"), url("fonts/KaT=
eX_Main-Regular.woff") format("woff"), url("fonts/KaTeX_Main-Regular.ttf") =
format("truetype"); }

@font-face { font-family: KaTeX_Math; font-style: italic; font-weight: 700;=
 src: url("fonts/KaTeX_Math-BoldItalic.woff2") format("woff2"), url("fonts/=
KaTeX_Math-BoldItalic.woff") format("woff"), url("fonts/KaTeX_Math-BoldItal=
ic.ttf") format("truetype"); }

@font-face { font-family: KaTeX_Math; font-style: italic; font-weight: 400;=
 src: url("fonts/KaTeX_Math-Italic.woff2") format("woff2"), url("fonts/KaTe=
X_Math-Italic.woff") format("woff"), url("fonts/KaTeX_Math-Italic.ttf") for=
mat("truetype"); }

@font-face { font-family: KaTeX_SansSerif; font-style: normal; font-weight:=
 700; src: url("fonts/KaTeX_SansSerif-Bold.woff2") format("woff2"), url("fo=
nts/KaTeX_SansSerif-Bold.woff") format("woff"), url("fonts/KaTeX_SansSerif-=
Bold.ttf") format("truetype"); }

@font-face { font-family: KaTeX_SansSerif; font-style: italic; font-weight:=
 400; src: url("fonts/KaTeX_SansSerif-Italic.woff2") format("woff2"), url("=
fonts/KaTeX_SansSerif-Italic.woff") format("woff"), url("fonts/KaTeX_SansSe=
rif-Italic.ttf") format("truetype"); }

@font-face { font-family: KaTeX_SansSerif; font-style: normal; font-weight:=
 400; src: url("fonts/KaTeX_SansSerif-Regular.woff2") format("woff2"), url(=
"fonts/KaTeX_SansSerif-Regular.woff") format("woff"), url("fonts/KaTeX_Sans=
Serif-Regular.ttf") format("truetype"); }

@font-face { font-family: KaTeX_Script; font-style: normal; font-weight: 40=
0; src: url("fonts/KaTeX_Script-Regular.woff2") format("woff2"), url("fonts=
/KaTeX_Script-Regular.woff") format("woff"), url("fonts/KaTeX_Script-Regula=
r.ttf") format("truetype"); }

@font-face { font-family: KaTeX_Size1; font-style: normal; font-weight: 400=
; src: url("fonts/KaTeX_Size1-Regular.woff2") format("woff2"), url("fonts/K=
aTeX_Size1-Regular.woff") format("woff"), url("fonts/KaTeX_Size1-Regular.tt=
f") format("truetype"); }

@font-face { font-family: KaTeX_Size2; font-style: normal; font-weight: 400=
; src: url("fonts/KaTeX_Size2-Regular.woff2") format("woff2"), url("fonts/K=
aTeX_Size2-Regular.woff") format("woff"), url("fonts/KaTeX_Size2-Regular.tt=
f") format("truetype"); }

@font-face { font-family: KaTeX_Size3; font-style: normal; font-weight: 400=
; src: url("fonts/KaTeX_Size3-Regular.woff2") format("woff2"), url("fonts/K=
aTeX_Size3-Regular.woff") format("woff"), url("fonts/KaTeX_Size3-Regular.tt=
f") format("truetype"); }

@font-face { font-family: KaTeX_Size4; font-style: normal; font-weight: 400=
; src: url("fonts/KaTeX_Size4-Regular.woff2") format("woff2"), url("fonts/K=
aTeX_Size4-Regular.woff") format("woff"), url("fonts/KaTeX_Size4-Regular.tt=
f") format("truetype"); }

@font-face { font-family: KaTeX_Typewriter; font-style: normal; font-weight=
: 400; src: url("fonts/KaTeX_Typewriter-Regular.woff2") format("woff2"), ur=
l("fonts/KaTeX_Typewriter-Regular.woff") format("woff"), url("fonts/KaTeX_T=
ypewriter-Regular.ttf") format("truetype"); }

.katex { font: 1.21em / 1.2 KaTeX_Main, "Times New Roman", serif; text-inde=
nt: 0px; text-rendering: auto; }

.katex * { border-color: currentcolor; }

.katex .katex-version::after { content: "0.13.11"; }

.katex .katex-mathml { clip: rect(1px, 1px, 1px, 1px); border: 0px; height:=
 1px; overflow: hidden; padding: 0px; position: absolute; width: 1px; }

.katex .katex-html > .newline { display: block; }

.katex .base { position: relative; white-space: nowrap; width: min-content;=
 }

.katex .base, .katex .strut { display: inline-block; }

.katex .textbf { font-weight: 700; }

.katex .textit { font-style: italic; }

.katex .textrm { font-family: KaTeX_Main; }

.katex .textsf { font-family: KaTeX_SansSerif; }

.katex .texttt { font-family: KaTeX_Typewriter; }

.katex .mathnormal { font-family: KaTeX_Math; font-style: italic; }

.katex .mathit { font-family: KaTeX_Main; font-style: italic; }

.katex .mathrm { font-style: normal; }

.katex .mathbf { font-family: KaTeX_Main; font-weight: 700; }

.katex .boldsymbol { font-family: KaTeX_Math; font-style: italic; font-weig=
ht: 700; }

.katex .amsrm, .katex .mathbb, .katex .textbb { font-family: KaTeX_AMS; }

.katex .mathcal { font-family: KaTeX_Caligraphic; }

.katex .mathfrak, .katex .textfrak { font-family: KaTeX_Fraktur; }

.katex .mathtt { font-family: KaTeX_Typewriter; }

.katex .mathscr, .katex .textscr { font-family: KaTeX_Script; }

.katex .mathsf, .katex .textsf { font-family: KaTeX_SansSerif; }

.katex .mathboldsf, .katex .textboldsf { font-family: KaTeX_SansSerif; font=
-weight: 700; }

.katex .mathitsf, .katex .textitsf { font-family: KaTeX_SansSerif; font-sty=
le: italic; }

.katex .mainrm { font-family: KaTeX_Main; font-style: normal; }

.katex .vlist-t { border-collapse: collapse; display: inline-table; table-l=
ayout: fixed; }

.katex .vlist-r { display: table-row; }

.katex .vlist { display: table-cell; position: relative; vertical-align: bo=
ttom; }

.katex .vlist > span { display: block; height: 0px; position: relative; }

.katex .vlist > span > span { display: inline-block; }

.katex .vlist > span > .pstrut { overflow: hidden; width: 0px; }

.katex .vlist-t2 { margin-right: -2px; }

.katex .vlist-s { display: table-cell; font-size: 1px; min-width: 2px; vert=
ical-align: bottom; width: 2px; }

.katex .vbox { -webkit-box-orient: vertical; -webkit-box-direction: normal;=
 -webkit-box-align: baseline; align-items: baseline; display: inline-flex; =
flex-direction: column; }

.katex .hbox { width: 100%; }

.katex .hbox, .katex .thinbox { -webkit-box-orient: horizontal; -webkit-box=
-direction: normal; display: inline-flex; flex-direction: row; }

.katex .thinbox { max-width: 0px; width: 0px; }

.katex .msupsub { text-align: left; }

.katex .mfrac > span > span { text-align: center; }

.katex .mfrac .frac-line { border-bottom-style: solid; display: inline-bloc=
k; width: 100%; }

.katex .hdashline, .katex .hline, .katex .mfrac .frac-line, .katex .overlin=
e .overline-line, .katex .rule, .katex .underline .underline-line { min-hei=
ght: 1px; }

.katex .mspace { display: inline-block; }

.katex .clap, .katex .llap, .katex .rlap { position: relative; width: 0px; =
}

.katex .clap > .inner, .katex .llap > .inner, .katex .rlap > .inner { posit=
ion: absolute; }

.katex .clap > .fix, .katex .llap > .fix, .katex .rlap > .fix { display: in=
line-block; }

.katex .llap > .inner { right: 0px; }

.katex .clap > .inner, .katex .rlap > .inner { left: 0px; }

.katex .clap > .inner > span { margin-left: -50%; margin-right: 50%; }

.katex .rule { border: 0px solid; display: inline-block; position: relative=
; }

.katex .hline, .katex .overline .overline-line, .katex .underline .underlin=
e-line { border-bottom-style: solid; display: inline-block; width: 100%; }

.katex .hdashline { border-bottom-style: dashed; display: inline-block; wid=
th: 100%; }

.katex .sqrt > .root { margin-left: 0.277778em; margin-right: -0.555556em; =
}

.katex .fontsize-ensurer.reset-size1.size1, .katex .sizing.reset-size1.size=
1 { font-size: 1em; }

.katex .fontsize-ensurer.reset-size1.size2, .katex .sizing.reset-size1.size=
2 { font-size: 1.2em; }

.katex .fontsize-ensurer.reset-size1.size3, .katex .sizing.reset-size1.size=
3 { font-size: 1.4em; }

.katex .fontsize-ensurer.reset-size1.size4, .katex .sizing.reset-size1.size=
4 { font-size: 1.6em; }

.katex .fontsize-ensurer.reset-size1.size5, .katex .sizing.reset-size1.size=
5 { font-size: 1.8em; }

.katex .fontsize-ensurer.reset-size1.size6, .katex .sizing.reset-size1.size=
6 { font-size: 2em; }

.katex .fontsize-ensurer.reset-size1.size7, .katex .sizing.reset-size1.size=
7 { font-size: 2.4em; }

.katex .fontsize-ensurer.reset-size1.size8, .katex .sizing.reset-size1.size=
8 { font-size: 2.88em; }

.katex .fontsize-ensurer.reset-size1.size9, .katex .sizing.reset-size1.size=
9 { font-size: 3.456em; }

.katex .fontsize-ensurer.reset-size1.size10, .katex .sizing.reset-size1.siz=
e10 { font-size: 4.148em; }

.katex .fontsize-ensurer.reset-size1.size11, .katex .sizing.reset-size1.siz=
e11 { font-size: 4.976em; }

.katex .fontsize-ensurer.reset-size2.size1, .katex .sizing.reset-size2.size=
1 { font-size: 0.833333em; }

.katex .fontsize-ensurer.reset-size2.size2, .katex .sizing.reset-size2.size=
2 { font-size: 1em; }

.katex .fontsize-ensurer.reset-size2.size3, .katex .sizing.reset-size2.size=
3 { font-size: 1.16667em; }

.katex .fontsize-ensurer.reset-size2.size4, .katex .sizing.reset-size2.size=
4 { font-size: 1.33333em; }

.katex .fontsize-ensurer.reset-size2.size5, .katex .sizing.reset-size2.size=
5 { font-size: 1.5em; }

.katex .fontsize-ensurer.reset-size2.size6, .katex .sizing.reset-size2.size=
6 { font-size: 1.66667em; }

.katex .fontsize-ensurer.reset-size2.size7, .katex .sizing.reset-size2.size=
7 { font-size: 2em; }

.katex .fontsize-ensurer.reset-size2.size8, .katex .sizing.reset-size2.size=
8 { font-size: 2.4em; }

.katex .fontsize-ensurer.reset-size2.size9, .katex .sizing.reset-size2.size=
9 { font-size: 2.88em; }

.katex .fontsize-ensurer.reset-size2.size10, .katex .sizing.reset-size2.siz=
e10 { font-size: 3.45667em; }

.katex .fontsize-ensurer.reset-size2.size11, .katex .sizing.reset-size2.siz=
e11 { font-size: 4.14667em; }

.katex .fontsize-ensurer.reset-size3.size1, .katex .sizing.reset-size3.size=
1 { font-size: 0.714286em; }

.katex .fontsize-ensurer.reset-size3.size2, .katex .sizing.reset-size3.size=
2 { font-size: 0.857143em; }

.katex .fontsize-ensurer.reset-size3.size3, .katex .sizing.reset-size3.size=
3 { font-size: 1em; }

.katex .fontsize-ensurer.reset-size3.size4, .katex .sizing.reset-size3.size=
4 { font-size: 1.14286em; }

.katex .fontsize-ensurer.reset-size3.size5, .katex .sizing.reset-size3.size=
5 { font-size: 1.28571em; }

.katex .fontsize-ensurer.reset-size3.size6, .katex .sizing.reset-size3.size=
6 { font-size: 1.42857em; }

.katex .fontsize-ensurer.reset-size3.size7, .katex .sizing.reset-size3.size=
7 { font-size: 1.71429em; }

.katex .fontsize-ensurer.reset-size3.size8, .katex .sizing.reset-size3.size=
8 { font-size: 2.05714em; }

.katex .fontsize-ensurer.reset-size3.size9, .katex .sizing.reset-size3.size=
9 { font-size: 2.46857em; }

.katex .fontsize-ensurer.reset-size3.size10, .katex .sizing.reset-size3.siz=
e10 { font-size: 2.96286em; }

.katex .fontsize-ensurer.reset-size3.size11, .katex .sizing.reset-size3.siz=
e11 { font-size: 3.55429em; }

.katex .fontsize-ensurer.reset-size4.size1, .katex .sizing.reset-size4.size=
1 { font-size: 0.625em; }

.katex .fontsize-ensurer.reset-size4.size2, .katex .sizing.reset-size4.size=
2 { font-size: 0.75em; }

.katex .fontsize-ensurer.reset-size4.size3, .katex .sizing.reset-size4.size=
3 { font-size: 0.875em; }

.katex .fontsize-ensurer.reset-size4.size4, .katex .sizing.reset-size4.size=
4 { font-size: 1em; }

.katex .fontsize-ensurer.reset-size4.size5, .katex .sizing.reset-size4.size=
5 { font-size: 1.125em; }

.katex .fontsize-ensurer.reset-size4.size6, .katex .sizing.reset-size4.size=
6 { font-size: 1.25em; }

.katex .fontsize-ensurer.reset-size4.size7, .katex .sizing.reset-size4.size=
7 { font-size: 1.5em; }

.katex .fontsize-ensurer.reset-size4.size8, .katex .sizing.reset-size4.size=
8 { font-size: 1.8em; }

.katex .fontsize-ensurer.reset-size4.size9, .katex .sizing.reset-size4.size=
9 { font-size: 2.16em; }

.katex .fontsize-ensurer.reset-size4.size10, .katex .sizing.reset-size4.siz=
e10 { font-size: 2.5925em; }

.katex .fontsize-ensurer.reset-size4.size11, .katex .sizing.reset-size4.siz=
e11 { font-size: 3.11em; }

.katex .fontsize-ensurer.reset-size5.size1, .katex .sizing.reset-size5.size=
1 { font-size: 0.555556em; }

.katex .fontsize-ensurer.reset-size5.size2, .katex .sizing.reset-size5.size=
2 { font-size: 0.666667em; }

.katex .fontsize-ensurer.reset-size5.size3, .katex .sizing.reset-size5.size=
3 { font-size: 0.777778em; }

.katex .fontsize-ensurer.reset-size5.size4, .katex .sizing.reset-size5.size=
4 { font-size: 0.888889em; }

.katex .fontsize-ensurer.reset-size5.size5, .katex .sizing.reset-size5.size=
5 { font-size: 1em; }

.katex .fontsize-ensurer.reset-size5.size6, .katex .sizing.reset-size5.size=
6 { font-size: 1.11111em; }

.katex .fontsize-ensurer.reset-size5.size7, .katex .sizing.reset-size5.size=
7 { font-size: 1.33333em; }

.katex .fontsize-ensurer.reset-size5.size8, .katex .sizing.reset-size5.size=
8 { font-size: 1.6em; }

.katex .fontsize-ensurer.reset-size5.size9, .katex .sizing.reset-size5.size=
9 { font-size: 1.92em; }

.katex .fontsize-ensurer.reset-size5.size10, .katex .sizing.reset-size5.siz=
e10 { font-size: 2.30444em; }

.katex .fontsize-ensurer.reset-size5.size11, .katex .sizing.reset-size5.siz=
e11 { font-size: 2.76444em; }

.katex .fontsize-ensurer.reset-size6.size1, .katex .sizing.reset-size6.size=
1 { font-size: 0.5em; }

.katex .fontsize-ensurer.reset-size6.size2, .katex .sizing.reset-size6.size=
2 { font-size: 0.6em; }

.katex .fontsize-ensurer.reset-size6.size3, .katex .sizing.reset-size6.size=
3 { font-size: 0.7em; }

.katex .fontsize-ensurer.reset-size6.size4, .katex .sizing.reset-size6.size=
4 { font-size: 0.8em; }

.katex .fontsize-ensurer.reset-size6.size5, .katex .sizing.reset-size6.size=
5 { font-size: 0.9em; }

.katex .fontsize-ensurer.reset-size6.size6, .katex .sizing.reset-size6.size=
6 { font-size: 1em; }

.katex .fontsize-ensurer.reset-size6.size7, .katex .sizing.reset-size6.size=
7 { font-size: 1.2em; }

.katex .fontsize-ensurer.reset-size6.size8, .katex .sizing.reset-size6.size=
8 { font-size: 1.44em; }

.katex .fontsize-ensurer.reset-size6.size9, .katex .sizing.reset-size6.size=
9 { font-size: 1.728em; }

.katex .fontsize-ensurer.reset-size6.size10, .katex .sizing.reset-size6.siz=
e10 { font-size: 2.074em; }

.katex .fontsize-ensurer.reset-size6.size11, .katex .sizing.reset-size6.siz=
e11 { font-size: 2.488em; }

.katex .fontsize-ensurer.reset-size7.size1, .katex .sizing.reset-size7.size=
1 { font-size: 0.416667em; }

.katex .fontsize-ensurer.reset-size7.size2, .katex .sizing.reset-size7.size=
2 { font-size: 0.5em; }

.katex .fontsize-ensurer.reset-size7.size3, .katex .sizing.reset-size7.size=
3 { font-size: 0.583333em; }

.katex .fontsize-ensurer.reset-size7.size4, .katex .sizing.reset-size7.size=
4 { font-size: 0.666667em; }

.katex .fontsize-ensurer.reset-size7.size5, .katex .sizing.reset-size7.size=
5 { font-size: 0.75em; }

.katex .fontsize-ensurer.reset-size7.size6, .katex .sizing.reset-size7.size=
6 { font-size: 0.833333em; }

.katex .fontsize-ensurer.reset-size7.size7, .katex .sizing.reset-size7.size=
7 { font-size: 1em; }

.katex .fontsize-ensurer.reset-size7.size8, .katex .sizing.reset-size7.size=
8 { font-size: 1.2em; }

.katex .fontsize-ensurer.reset-size7.size9, .katex .sizing.reset-size7.size=
9 { font-size: 1.44em; }

.katex .fontsize-ensurer.reset-size7.size10, .katex .sizing.reset-size7.siz=
e10 { font-size: 1.72833em; }

.katex .fontsize-ensurer.reset-size7.size11, .katex .sizing.reset-size7.siz=
e11 { font-size: 2.07333em; }

.katex .fontsize-ensurer.reset-size8.size1, .katex .sizing.reset-size8.size=
1 { font-size: 0.347222em; }

.katex .fontsize-ensurer.reset-size8.size2, .katex .sizing.reset-size8.size=
2 { font-size: 0.416667em; }

.katex .fontsize-ensurer.reset-size8.size3, .katex .sizing.reset-size8.size=
3 { font-size: 0.486111em; }

.katex .fontsize-ensurer.reset-size8.size4, .katex .sizing.reset-size8.size=
4 { font-size: 0.555556em; }

.katex .fontsize-ensurer.reset-size8.size5, .katex .sizing.reset-size8.size=
5 { font-size: 0.625em; }

.katex .fontsize-ensurer.reset-size8.size6, .katex .sizing.reset-size8.size=
6 { font-size: 0.694444em; }

.katex .fontsize-ensurer.reset-size8.size7, .katex .sizing.reset-size8.size=
7 { font-size: 0.833333em; }

.katex .fontsize-ensurer.reset-size8.size8, .katex .sizing.reset-size8.size=
8 { font-size: 1em; }

.katex .fontsize-ensurer.reset-size8.size9, .katex .sizing.reset-size8.size=
9 { font-size: 1.2em; }

.katex .fontsize-ensurer.reset-size8.size10, .katex .sizing.reset-size8.siz=
e10 { font-size: 1.44028em; }

.katex .fontsize-ensurer.reset-size8.size11, .katex .sizing.reset-size8.siz=
e11 { font-size: 1.72778em; }

.katex .fontsize-ensurer.reset-size9.size1, .katex .sizing.reset-size9.size=
1 { font-size: 0.289352em; }

.katex .fontsize-ensurer.reset-size9.size2, .katex .sizing.reset-size9.size=
2 { font-size: 0.347222em; }

.katex .fontsize-ensurer.reset-size9.size3, .katex .sizing.reset-size9.size=
3 { font-size: 0.405093em; }

.katex .fontsize-ensurer.reset-size9.size4, .katex .sizing.reset-size9.size=
4 { font-size: 0.462963em; }

.katex .fontsize-ensurer.reset-size9.size5, .katex .sizing.reset-size9.size=
5 { font-size: 0.520833em; }

.katex .fontsize-ensurer.reset-size9.size6, .katex .sizing.reset-size9.size=
6 { font-size: 0.578704em; }

.katex .fontsize-ensurer.reset-size9.size7, .katex .sizing.reset-size9.size=
7 { font-size: 0.694444em; }

.katex .fontsize-ensurer.reset-size9.size8, .katex .sizing.reset-size9.size=
8 { font-size: 0.833333em; }

.katex .fontsize-ensurer.reset-size9.size9, .katex .sizing.reset-size9.size=
9 { font-size: 1em; }

.katex .fontsize-ensurer.reset-size9.size10, .katex .sizing.reset-size9.siz=
e10 { font-size: 1.20023em; }

.katex .fontsize-ensurer.reset-size9.size11, .katex .sizing.reset-size9.siz=
e11 { font-size: 1.43981em; }

.katex .fontsize-ensurer.reset-size10.size1, .katex .sizing.reset-size10.si=
ze1 { font-size: 0.24108em; }

.katex .fontsize-ensurer.reset-size10.size2, .katex .sizing.reset-size10.si=
ze2 { font-size: 0.289296em; }

.katex .fontsize-ensurer.reset-size10.size3, .katex .sizing.reset-size10.si=
ze3 { font-size: 0.337512em; }

.katex .fontsize-ensurer.reset-size10.size4, .katex .sizing.reset-size10.si=
ze4 { font-size: 0.385728em; }

.katex .fontsize-ensurer.reset-size10.size5, .katex .sizing.reset-size10.si=
ze5 { font-size: 0.433944em; }

.katex .fontsize-ensurer.reset-size10.size6, .katex .sizing.reset-size10.si=
ze6 { font-size: 0.48216em; }

.katex .fontsize-ensurer.reset-size10.size7, .katex .sizing.reset-size10.si=
ze7 { font-size: 0.578592em; }

.katex .fontsize-ensurer.reset-size10.size8, .katex .sizing.reset-size10.si=
ze8 { font-size: 0.694311em; }

.katex .fontsize-ensurer.reset-size10.size9, .katex .sizing.reset-size10.si=
ze9 { font-size: 0.833173em; }

.katex .fontsize-ensurer.reset-size10.size10, .katex .sizing.reset-size10.s=
ize10 { font-size: 1em; }

.katex .fontsize-ensurer.reset-size10.size11, .katex .sizing.reset-size10.s=
ize11 { font-size: 1.19961em; }

.katex .fontsize-ensurer.reset-size11.size1, .katex .sizing.reset-size11.si=
ze1 { font-size: 0.200965em; }

.katex .fontsize-ensurer.reset-size11.size2, .katex .sizing.reset-size11.si=
ze2 { font-size: 0.241158em; }

.katex .fontsize-ensurer.reset-size11.size3, .katex .sizing.reset-size11.si=
ze3 { font-size: 0.28135em; }

.katex .fontsize-ensurer.reset-size11.size4, .katex .sizing.reset-size11.si=
ze4 { font-size: 0.321543em; }

.katex .fontsize-ensurer.reset-size11.size5, .katex .sizing.reset-size11.si=
ze5 { font-size: 0.361736em; }

.katex .fontsize-ensurer.reset-size11.size6, .katex .sizing.reset-size11.si=
ze6 { font-size: 0.401929em; }

.katex .fontsize-ensurer.reset-size11.size7, .katex .sizing.reset-size11.si=
ze7 { font-size: 0.482315em; }

.katex .fontsize-ensurer.reset-size11.size8, .katex .sizing.reset-size11.si=
ze8 { font-size: 0.578778em; }

.katex .fontsize-ensurer.reset-size11.size9, .katex .sizing.reset-size11.si=
ze9 { font-size: 0.694534em; }

.katex .fontsize-ensurer.reset-size11.size10, .katex .sizing.reset-size11.s=
ize10 { font-size: 0.833601em; }

.katex .fontsize-ensurer.reset-size11.size11, .katex .sizing.reset-size11.s=
ize11 { font-size: 1em; }

.katex .delimsizing.size1 { font-family: KaTeX_Size1; }

.katex .delimsizing.size2 { font-family: KaTeX_Size2; }

.katex .delimsizing.size3 { font-family: KaTeX_Size3; }

.katex .delimsizing.size4 { font-family: KaTeX_Size4; }

.katex .delimsizing.mult .delim-size1 > span { font-family: KaTeX_Size1; }

.katex .delimsizing.mult .delim-size4 > span { font-family: KaTeX_Size4; }

.katex .nulldelimiter { display: inline-block; width: 0.12em; }

.katex .delimcenter, .katex .op-symbol { position: relative; }

.katex .op-symbol.small-op { font-family: KaTeX_Size1; }

.katex .op-symbol.large-op { font-family: KaTeX_Size2; }

.katex .accent > .vlist-t, .katex .op-limits > .vlist-t { text-align: cente=
r; }

.katex .accent .accent-body { position: relative; }

.katex .accent .accent-body:not(.accent-full) { width: 0px; }

.katex .overlay { display: block; }

.katex .mtable .vertical-separator { display: inline-block; min-width: 1px;=
 }

.katex .mtable .arraycolsep { display: inline-block; }

.katex .mtable .col-align-c > .vlist-t { text-align: center; }

.katex .mtable .col-align-l > .vlist-t { text-align: left; }

.katex .mtable .col-align-r > .vlist-t { text-align: right; }

.katex .svg-align { text-align: left; }

.katex svg { fill: currentcolor; stroke: currentcolor; fill-rule: nonzero; =
fill-opacity: 1; stroke-width: 1; stroke-linecap: butt; stroke-linejoin: mi=
ter; stroke-miterlimit: 4; stroke-dasharray: none; stroke-dashoffset: 0; st=
roke-opacity: 1; display: block; height: inherit; position: absolute; width=
: 100%; }

.katex svg path { stroke: none; }

.katex img { border-style: none; max-height: none; max-width: none; min-hei=
ght: 0px; min-width: 0px; }

.katex .stretchy { display: block; overflow: hidden; position: relative; wi=
dth: 100%; }

.katex .stretchy::after, .katex .stretchy::before { content: ""; }

.katex .hide-tail { overflow: hidden; position: relative; width: 100%; }

.katex .halfarrow-left { left: 0px; overflow: hidden; position: absolute; w=
idth: 50.2%; }

.katex .halfarrow-right { overflow: hidden; position: absolute; right: 0px;=
 width: 50.2%; }

.katex .brace-left { left: 0px; overflow: hidden; position: absolute; width=
: 25.1%; }

.katex .brace-center { left: 25%; overflow: hidden; position: absolute; wid=
th: 50%; }

.katex .brace-right { overflow: hidden; position: absolute; right: 0px; wid=
th: 25.1%; }

.katex .x-arrow-pad { padding: 0px 0.5em; }

.katex .cd-arrow-pad { padding: 0px 0.55556em 0px 0.27778em; }

.katex .mover, .katex .munder, .katex .x-arrow { text-align: center; }

.katex .boxpad { padding: 0px 0.3em; }

.katex .fbox, .katex .fcolorbox { border: 0.04em solid; box-sizing: border-=
box; }

.katex .cancel-pad { padding: 0px 0.2em; }

.katex .cancel-lap { margin-left: -0.2em; margin-right: -0.2em; }

.katex .sout { border-bottom-style: solid; border-bottom-width: 0.08em; }

.katex .angl { border-right: 0.049em solid; border-top: 0.049em solid; marg=
in-right: 0.03889em; }

.katex .anglpad { padding: 0px 0.03889em; }

.katex .eqn-num::before { content: "(" counter(katexEqnNo) ")"; counter-inc=
rement: katexEqnNo 1; }

.katex .mml-eqn-num::before { content: "(" counter(mmlEqnNo) ")"; counter-i=
ncrement: mmlEqnNo 1; }

.katex .mtr-glue { width: 50%; }

.katex .cd-vert-arrow { display: inline-block; position: relative; }

.katex .cd-label-left { display: inline-block; position: absolute; right: c=
alc(50% + 0.3em); text-align: left; }

.katex .cd-label-right { display: inline-block; left: calc(50% + 0.3em); po=
sition: absolute; text-align: right; }

.katex-display { display: block; margin: 1em 0px; text-align: center; }

.katex-display > .katex { display: block; text-align: center; white-space: =
nowrap; }

.katex-display > .katex > .katex-html { display: block; position: relative;=
 }

.katex-display > .katex > .katex-html > .tag { position: absolute; right: 0=
px; }

.katex-display.leqno > .katex > .katex-html > .tag { left: 0px; right: auto=
; }

.katex-display.fleqn > .katex { padding-left: 2em; text-align: left; }

body { counter-reset: katexEqnNo 0 mmlEqnNo 0; }
------MultipartBoundary--p77pSlE97gVxA9vHZ3llR7beGEIQoxVXk04dgXijz8----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://pytorch.org/docs/1.13/_static/katex-math.css

@charset "utf-8";

.katex-display > .katex { max-width: 100%; }

.katex-display > .katex > .katex-html { max-width: 100%; overflow: auto hid=
den; padding: 3px 2px 1px; }

.katex-display { margin: 1.2em 0px; }

div.math { position: relative; padding-right: 2.5em; }

.eqno { height: 100%; position: absolute; right: 0px; padding-left: 5px; pa=
dding-bottom: 5px; padding-right: 1px; }

.eqno::before { display: inline-block; height: 100%; vertical-align: middle=
; content: ""; }

.eqno .headerlink { display: none; visibility: hidden; font-size: 14px; pad=
ding-left: 0.3em; }

.eqno:hover .headerlink { display: inline-block; visibility: visible; margi=
n-right: -1.05em; }
------MultipartBoundary--p77pSlE97gVxA9vHZ3llR7beGEIQoxVXk04dgXijz8----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://pytorch.org/docs/1.13/_static/sphinx-dropdown.css

@charset "utf-8";

.octicon { display: inline-block; vertical-align: text-top; fill: currentco=
lor; }

details.dropdown .summary-title { user-select: none; padding-right: 3em !im=
portant; }

details.dropdown:hover { cursor: pointer; }

details.dropdown .summary-content { cursor: default; }

details.dropdown summary { padding: 1em; list-style: none; }

details.dropdown summary::-webkit-details-marker { display: none; }

details.dropdown summary:focus { outline: none; }

details.dropdown summary:hover .summary-up svg, details.dropdown summary:ho=
ver .summary-down svg { opacity: 1; }

details.dropdown .summary-up svg, details.dropdown .summary-down svg { opac=
ity: 0.6; }

details.dropdown .summary-up, details.dropdown .summary-down { pointer-even=
ts: none; position: absolute; top: 0.75em; right: 1em; }

details.dropdown .summary-up svg, details.dropdown .summary-down svg { disp=
lay: block; }

details.dropdown[open] .summary-down { visibility: hidden; }

details.dropdown:not([open]) .summary-up { visibility: hidden; }

details.dropdown summary .octicon.no-title { vertical-align: middle; }

details.dropdown[open] summary .octicon.no-title { visibility: hidden; }

details.dropdown.fade-in[open] summary ~ * { animation: 0.5s ease-in-out 0s=
 1 normal none running fade-in; }

details.dropdown.fade-in-slide-down[open] summary ~ * { animation: 0.5s eas=
e-in-out 0s 1 normal none running fade-in, 0.5s ease-in-out 0s 1 normal non=
e running slide-down; }

@-webkit-keyframes fade-in {=20
  0% { opacity: 0; }
  100% { opacity: 1; }
}

@keyframes fade-in {=20
  0% { opacity: 0; }
  100% { opacity: 1; }
}

@-webkit-keyframes slide-down {=20
  0% { transform: translate(0px, -10px); }
  100% { transform: translate(0px, 0px); }
}

@keyframes slide-down {=20
  0% { transform: translate(0px, -10px); }
  100% { transform: translate(0px, 0px); }
}
------MultipartBoundary--p77pSlE97gVxA9vHZ3llR7beGEIQoxVXk04dgXijz8----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://pytorch.org/docs/1.13/_static/panels-bootstrap.min.css

@charset "utf-8";

.badge { display: inline-block; padding: 0.25em 0.4em; font-size: 75%; font=
-weight: 700; line-height: 1; text-align: center; white-space: nowrap; vert=
ical-align: baseline; border-radius: 0.25rem; }

.badge:empty { display: none; }

.btn .badge { position: relative; top: -1px; }

.badge-pill { padding-right: 0.6em; padding-left: 0.6em; border-radius: 10r=
em; }

.badge-primary { color: rgb(255, 255, 255); background-color: rgb(0, 123, 2=
55); }

.badge-primary[href]:focus, .badge-primary[href]:hover { color: rgb(255, 25=
5, 255); text-decoration: none; background-color: rgb(0, 98, 204); }

.badge-secondary { color: rgb(255, 255, 255); background-color: rgb(108, 11=
7, 125); }

.badge-secondary[href]:focus, .badge-secondary[href]:hover { color: rgb(255=
, 255, 255); text-decoration: none; background-color: rgb(84, 91, 98); }

.badge-success { color: rgb(255, 255, 255); background-color: rgb(40, 167, =
69); }

.badge-success[href]:focus, .badge-success[href]:hover { color: rgb(255, 25=
5, 255); text-decoration: none; background-color: rgb(30, 126, 52); }

.badge-info { color: rgb(255, 255, 255); background-color: rgb(23, 162, 184=
); }

.badge-info[href]:focus, .badge-info[href]:hover { color: rgb(255, 255, 255=
); text-decoration: none; background-color: rgb(17, 122, 139); }

.badge-warning { color: rgb(33, 37, 41); background-color: rgb(255, 193, 7)=
; }

.badge-warning[href]:focus, .badge-warning[href]:hover { color: rgb(33, 37,=
 41); text-decoration: none; background-color: rgb(211, 158, 0); }

.badge-danger { color: rgb(255, 255, 255); background-color: rgb(220, 53, 6=
9); }

.badge-danger[href]:focus, .badge-danger[href]:hover { color: rgb(255, 255,=
 255); text-decoration: none; background-color: rgb(189, 33, 48); }

.badge-light { color: rgb(33, 37, 41); background-color: rgb(248, 249, 250)=
; }

.badge-light[href]:focus, .badge-light[href]:hover { color: rgb(33, 37, 41)=
; text-decoration: none; background-color: rgb(218, 224, 229); }

.badge-dark { color: rgb(255, 255, 255); background-color: rgb(52, 58, 64);=
 }

.badge-dark[href]:focus, .badge-dark[href]:hover { color: rgb(255, 255, 255=
); text-decoration: none; background-color: rgb(29, 33, 36); }

.border-0 { border: 0px !important; }

.border-top-0 { border-top: 0px !important; }

.border-right-0 { border-right: 0px !important; }

.border-bottom-0 { border-bottom: 0px !important; }

.border-left-0 { border-left: 0px !important; }

.p-0 { padding: 0px !important; }

.pt-0 { padding-top: 0px !important; }

.pr-0, .px-0 { padding-right: 0px !important; }

.pb-0, .py-0 { padding-bottom: 0px !important; }

.pl-0, .px-0 { padding-left: 0px !important; }

.p-1 { padding: 0.25rem !important; }

.pt-1, .py-1 { padding-top: 0.25rem !important; }

.pr-1, .px-1 { padding-right: 0.25rem !important; }

.pb-1, .py-1 { padding-bottom: 0.25rem !important; }

.pl-1, .px-1 { padding-left: 0.25rem !important; }

.p-2 { padding: 0.5rem !important; }

.pt-2, .py-2 { padding-top: 0.5rem !important; }

.pr-2, .px-2 { padding-right: 0.5rem !important; }

.pb-2, .py-2 { padding-bottom: 0.5rem !important; }

.pl-2, .px-2 { padding-left: 0.5rem !important; }

.p-3 { padding: 1rem !important; }

.pt-3, .py-3 { padding-top: 1rem !important; }

.pr-3, .px-3 { padding-right: 1rem !important; }

.pb-3, .py-3 { padding-bottom: 1rem !important; }

.pl-3, .px-3 { padding-left: 1rem !important; }

.p-4 { padding: 1.5rem !important; }

.pt-4, .py-4 { padding-top: 1.5rem !important; }

.pr-4, .px-4 { padding-right: 1.5rem !important; }

.pb-4, .py-4 { padding-bottom: 1.5rem !important; }

.pl-4, .px-4 { padding-left: 1.5rem !important; }

.p-5 { padding: 3rem !important; }

.pt-5, .py-5 { padding-top: 3rem !important; }

.pr-5, .px-5 { padding-right: 3rem !important; }

.pb-5, .py-5 { padding-bottom: 3rem !important; }

.pl-5, .px-5 { padding-left: 3rem !important; }

.m-0 { margin: 0px !important; }

.mt-0, .my-0 { margin-top: 0px !important; }

.mr-0, .mx-0 { margin-right: 0px !important; }

.mb-0, .my-0 { margin-bottom: 0px !important; }

.ml-0, .mx-0 { margin-left: 0px !important; }

.m-1 { margin: 0.25rem !important; }

.mt-1, .my-1 { margin-top: 0.25rem !important; }

.mr-1, .mx-1 { margin-right: 0.25rem !important; }

.mb-1, .my-1 { margin-bottom: 0.25rem !important; }

.ml-1, .mx-1 { margin-left: 0.25rem !important; }

.m-2 { margin: 0.5rem !important; }

.mt-2, .my-2 { margin-top: 0.5rem !important; }

.mr-2, .mx-2 { margin-right: 0.5rem !important; }

.mb-2, .my-2 { margin-bottom: 0.5rem !important; }

.ml-2, .mx-2 { margin-left: 0.5rem !important; }

.m-3 { margin: 1rem !important; }

.mt-3, .my-3 { margin-top: 1rem !important; }

.mr-3, .mx-3 { margin-right: 1rem !important; }

.mb-3, .my-3 { margin-bottom: 1rem !important; }

.ml-3, .mx-3 { margin-left: 1rem !important; }

.m-4 { margin: 1.5rem !important; }

.mt-4, .my-4 { margin-top: 1.5rem !important; }

.mr-4, .mx-4 { margin-right: 1.5rem !important; }

.mb-4, .my-4 { margin-bottom: 1.5rem !important; }

.ml-4, .mx-4 { margin-left: 1.5rem !important; }

.m-5 { margin: 3rem !important; }

.mt-5, .my-5 { margin-top: 3rem !important; }

.mr-5, .mx-5 { margin-right: 3rem !important; }

.mb-5, .my-5 { margin-bottom: 3rem !important; }

.ml-5, .mx-5 { margin-left: 3rem !important; }

.btn { display: inline-block; font-weight: 400; color: rgb(33, 37, 41); tex=
t-align: center; vertical-align: middle; cursor: pointer; user-select: none=
; background-color: transparent; border: 1px solid transparent; padding: 0.=
375rem 0.75rem; font-size: 1rem; line-height: 1.5; border-radius: 0.25rem; =
transition: color 0.15s ease-in-out 0s, background-color 0.15s ease-in-out =
0s, border-color 0.15s ease-in-out 0s, box-shadow 0.15s ease-in-out 0s; }

@media (prefers-reduced-motion: reduce) {
  .btn { transition: none 0s ease 0s; }
}

.btn:visited { color: rgb(33, 37, 41); }

.btn:hover { color: rgb(33, 37, 41); text-decoration: none; }

.btn.focus, .btn:focus { outline: 0px; box-shadow: rgba(0, 123, 255, 0.25) =
0px 0px 0px 0.2rem; }

.btn.disabled, .btn:disabled { opacity: 0.65; }

a.btn.disabled, fieldset:disabled a.btn { pointer-events: none; }

.btn-primary { color: rgb(255, 255, 255); background-color: rgb(0, 123, 255=
); border-color: rgb(0, 123, 255); }

.btn-primary:visited { color: rgb(255, 255, 255); }

.btn-primary:hover { color: rgb(255, 255, 255); background-color: rgb(0, 10=
5, 217); border-color: rgb(0, 98, 204); }

.btn-primary.focus, .btn-primary:focus { color: rgb(255, 255, 255); backgro=
und-color: rgb(0, 105, 217); border-color: rgb(0, 98, 204); box-shadow: rgb=
a(38, 143, 255, 0.5) 0px 0px 0px 0.2rem; }

.btn-primary.disabled, .btn-primary:disabled { color: rgb(255, 255, 255); b=
ackground-color: rgb(0, 123, 255); border-color: rgb(0, 123, 255); }

.btn-primary:not(:disabled):not(.disabled).active, .btn-primary:not(:disabl=
ed):not(.disabled):active, .show > .btn-primary.dropdown-toggle { color: rg=
b(255, 255, 255); background-color: rgb(0, 98, 204); border-color: rgb(0, 9=
2, 191); }

.btn-primary:not(:disabled):not(.disabled).active:focus, .btn-primary:not(:=
disabled):not(.disabled):active:focus, .show > .btn-primary.dropdown-toggle=
:focus { box-shadow: rgba(38, 143, 255, 0.5) 0px 0px 0px 0.2rem; }

.btn-secondary { color: rgb(255, 255, 255); background-color: rgb(108, 117,=
 125); border-color: rgb(108, 117, 125); }

.btn-secondary:visited { color: rgb(255, 255, 255); }

.btn-secondary:hover { color: rgb(255, 255, 255); background-color: rgb(90,=
 98, 104); border-color: rgb(84, 91, 98); }

.btn-secondary.focus, .btn-secondary:focus { color: rgb(255, 255, 255); bac=
kground-color: rgb(90, 98, 104); border-color: rgb(84, 91, 98); box-shadow:=
 rgba(130, 138, 145, 0.5) 0px 0px 0px 0.2rem; }

.btn-secondary.disabled, .btn-secondary:disabled { color: rgb(255, 255, 255=
); background-color: rgb(108, 117, 125); border-color: rgb(108, 117, 125); =
}

.btn-secondary:not(:disabled):not(.disabled).active, .btn-secondary:not(:di=
sabled):not(.disabled):active, .show > .btn-secondary.dropdown-toggle { col=
or: rgb(255, 255, 255); background-color: rgb(84, 91, 98); border-color: rg=
b(78, 85, 91); }

.btn-secondary:not(:disabled):not(.disabled).active:focus, .btn-secondary:n=
ot(:disabled):not(.disabled):active:focus, .show > .btn-secondary.dropdown-=
toggle:focus { box-shadow: rgba(130, 138, 145, 0.5) 0px 0px 0px 0.2rem; }

.btn-success { color: rgb(255, 255, 255); background-color: rgb(40, 167, 69=
); border-color: rgb(40, 167, 69); }

.btn-success:visited { color: rgb(255, 255, 255); }

.btn-success:hover { color: rgb(255, 255, 255); background-color: rgb(33, 1=
36, 56); border-color: rgb(30, 126, 52); }

.btn-success.focus, .btn-success:focus { color: rgb(255, 255, 255); backgro=
und-color: rgb(33, 136, 56); border-color: rgb(30, 126, 52); box-shadow: rg=
ba(72, 180, 97, 0.5) 0px 0px 0px 0.2rem; }

.btn-success.disabled, .btn-success:disabled { color: rgb(255, 255, 255); b=
ackground-color: rgb(40, 167, 69); border-color: rgb(40, 167, 69); }

.btn-success:not(:disabled):not(.disabled).active, .btn-success:not(:disabl=
ed):not(.disabled):active, .show > .btn-success.dropdown-toggle { color: rg=
b(255, 255, 255); background-color: rgb(30, 126, 52); border-color: rgb(28,=
 116, 48); }

.btn-success:not(:disabled):not(.disabled).active:focus, .btn-success:not(:=
disabled):not(.disabled):active:focus, .show > .btn-success.dropdown-toggle=
:focus { box-shadow: rgba(72, 180, 97, 0.5) 0px 0px 0px 0.2rem; }

.btn-info { color: rgb(255, 255, 255); background-color: rgb(23, 162, 184);=
 border-color: rgb(23, 162, 184); }

.btn-info:visited { color: rgb(255, 255, 255); }

.btn-info:hover { color: rgb(255, 255, 255); background-color: rgb(19, 132,=
 150); border-color: rgb(17, 122, 139); }

.btn-info.focus, .btn-info:focus { color: rgb(255, 255, 255); background-co=
lor: rgb(19, 132, 150); border-color: rgb(17, 122, 139); box-shadow: rgba(5=
8, 176, 195, 0.5) 0px 0px 0px 0.2rem; }

.btn-info.disabled, .btn-info:disabled { color: rgb(255, 255, 255); backgro=
und-color: rgb(23, 162, 184); border-color: rgb(23, 162, 184); }

.btn-info:not(:disabled):not(.disabled).active, .btn-info:not(:disabled):no=
t(.disabled):active, .show > .btn-info.dropdown-toggle { color: rgb(255, 25=
5, 255); background-color: rgb(17, 122, 139); border-color: rgb(16, 112, 12=
7); }

.btn-info:not(:disabled):not(.disabled).active:focus, .btn-info:not(:disabl=
ed):not(.disabled):active:focus, .show > .btn-info.dropdown-toggle:focus { =
box-shadow: rgba(58, 176, 195, 0.5) 0px 0px 0px 0.2rem; }

.btn-warning { color: rgb(33, 37, 41); background-color: rgb(255, 193, 7); =
border-color: rgb(255, 193, 7); }

.btn-warning:visited { color: rgb(33, 37, 41); }

.btn-warning:hover { color: rgb(33, 37, 41); background-color: rgb(224, 168=
, 0); border-color: rgb(211, 158, 0); }

.btn-warning.focus, .btn-warning:focus { color: rgb(33, 37, 41); background=
-color: rgb(224, 168, 0); border-color: rgb(211, 158, 0); box-shadow: rgba(=
222, 170, 12, 0.5) 0px 0px 0px 0.2rem; }

.btn-warning.disabled, .btn-warning:disabled { color: rgb(33, 37, 41); back=
ground-color: rgb(255, 193, 7); border-color: rgb(255, 193, 7); }

.btn-warning:not(:disabled):not(.disabled).active, .btn-warning:not(:disabl=
ed):not(.disabled):active, .show > .btn-warning.dropdown-toggle { color: rg=
b(33, 37, 41); background-color: rgb(211, 158, 0); border-color: rgb(198, 1=
49, 0); }

.btn-warning:not(:disabled):not(.disabled).active:focus, .btn-warning:not(:=
disabled):not(.disabled):active:focus, .show > .btn-warning.dropdown-toggle=
:focus { box-shadow: rgba(222, 170, 12, 0.5) 0px 0px 0px 0.2rem; }

.btn-danger { color: rgb(255, 255, 255); background-color: rgb(220, 53, 69)=
; border-color: rgb(220, 53, 69); }

.btn-danger:visited { color: rgb(255, 255, 255); }

.btn-danger:hover { color: rgb(255, 255, 255); background-color: rgb(200, 3=
5, 51); border-color: rgb(189, 33, 48); }

.btn-danger.focus, .btn-danger:focus { color: rgb(255, 255, 255); backgroun=
d-color: rgb(200, 35, 51); border-color: rgb(189, 33, 48); box-shadow: rgba=
(225, 83, 97, 0.5) 0px 0px 0px 0.2rem; }

.btn-danger.disabled, .btn-danger:disabled { color: rgb(255, 255, 255); bac=
kground-color: rgb(220, 53, 69); border-color: rgb(220, 53, 69); }

.btn-danger:not(:disabled):not(.disabled).active, .btn-danger:not(:disabled=
):not(.disabled):active, .show > .btn-danger.dropdown-toggle { color: rgb(2=
55, 255, 255); background-color: rgb(189, 33, 48); border-color: rgb(178, 3=
1, 45); }

.btn-danger:not(:disabled):not(.disabled).active:focus, .btn-danger:not(:di=
sabled):not(.disabled):active:focus, .show > .btn-danger.dropdown-toggle:fo=
cus { box-shadow: rgba(225, 83, 97, 0.5) 0px 0px 0px 0.2rem; }

.btn-light { color: rgb(33, 37, 41); background-color: rgb(248, 249, 250); =
border-color: rgb(248, 249, 250); }

.btn-light:visited { color: rgb(33, 37, 41); }

.btn-light:hover { color: rgb(33, 37, 41); background-color: rgb(226, 230, =
234); border-color: rgb(218, 224, 229); }

.btn-light.focus, .btn-light:focus { color: rgb(33, 37, 41); background-col=
or: rgb(226, 230, 234); border-color: rgb(218, 224, 229); box-shadow: rgba(=
216, 217, 219, 0.5) 0px 0px 0px 0.2rem; }

.btn-light.disabled, .btn-light:disabled { color: rgb(33, 37, 41); backgrou=
nd-color: rgb(248, 249, 250); border-color: rgb(248, 249, 250); }

.btn-light:not(:disabled):not(.disabled).active, .btn-light:not(:disabled):=
not(.disabled):active, .show > .btn-light.dropdown-toggle { color: rgb(33, =
37, 41); background-color: rgb(218, 224, 229); border-color: rgb(211, 217, =
223); }

.btn-light:not(:disabled):not(.disabled).active:focus, .btn-light:not(:disa=
bled):not(.disabled):active:focus, .show > .btn-light.dropdown-toggle:focus=
 { box-shadow: rgba(216, 217, 219, 0.5) 0px 0px 0px 0.2rem; }

.btn-dark { color: rgb(255, 255, 255); background-color: rgb(52, 58, 64); b=
order-color: rgb(52, 58, 64); }

.btn-dark:visited { color: rgb(255, 255, 255); }

.btn-dark:hover { color: rgb(255, 255, 255); background-color: rgb(35, 39, =
43); border-color: rgb(29, 33, 36); }

.btn-dark.focus, .btn-dark:focus { color: rgb(255, 255, 255); background-co=
lor: rgb(35, 39, 43); border-color: rgb(29, 33, 36); box-shadow: rgba(82, 8=
8, 93, 0.5) 0px 0px 0px 0.2rem; }

.btn-dark.disabled, .btn-dark:disabled { color: rgb(255, 255, 255); backgro=
und-color: rgb(52, 58, 64); border-color: rgb(52, 58, 64); }

.btn-dark:not(:disabled):not(.disabled).active, .btn-dark:not(:disabled):no=
t(.disabled):active, .show > .btn-dark.dropdown-toggle { color: rgb(255, 25=
5, 255); background-color: rgb(29, 33, 36); border-color: rgb(23, 26, 29); =
}

.btn-dark:not(:disabled):not(.disabled).active:focus, .btn-dark:not(:disabl=
ed):not(.disabled):active:focus, .show > .btn-dark.dropdown-toggle:focus { =
box-shadow: rgba(82, 88, 93, 0.5) 0px 0px 0px 0.2rem; }

.btn-outline-primary { color: rgb(0, 123, 255); border-color: rgb(0, 123, 2=
55); }

.btn-outline-primary:visited { color: rgb(0, 123, 255); }

.btn-outline-primary:hover { color: rgb(255, 255, 255); background-color: r=
gb(0, 123, 255); border-color: rgb(0, 123, 255); }

.btn-outline-primary.focus, .btn-outline-primary:focus { box-shadow: rgba(0=
, 123, 255, 0.5) 0px 0px 0px 0.2rem; }

.btn-outline-primary.disabled, .btn-outline-primary:disabled { color: rgb(0=
, 123, 255); background-color: transparent; }

.btn-outline-primary:not(:disabled):not(.disabled).active, .btn-outline-pri=
mary:not(:disabled):not(.disabled):active, .show > .btn-outline-primary.dro=
pdown-toggle { color: rgb(255, 255, 255); background-color: rgb(0, 123, 255=
); border-color: rgb(0, 123, 255); }

.btn-outline-primary:not(:disabled):not(.disabled).active:focus, .btn-outli=
ne-primary:not(:disabled):not(.disabled):active:focus, .show > .btn-outline=
-primary.dropdown-toggle:focus { box-shadow: rgba(0, 123, 255, 0.5) 0px 0px=
 0px 0.2rem; }

.btn-outline-secondary { color: rgb(108, 117, 125); border-color: rgb(108, =
117, 125); }

.btn-outline-secondary:visited { color: rgb(108, 117, 125); }

.btn-outline-secondary:hover { color: rgb(255, 255, 255); background-color:=
 rgb(108, 117, 125); border-color: rgb(108, 117, 125); }

.btn-outline-secondary.focus, .btn-outline-secondary:focus { box-shadow: rg=
ba(108, 117, 125, 0.5) 0px 0px 0px 0.2rem; }

.btn-outline-secondary.disabled, .btn-outline-secondary:disabled { color: r=
gb(108, 117, 125); background-color: transparent; }

.btn-outline-secondary:not(:disabled):not(.disabled).active, .btn-outline-s=
econdary:not(:disabled):not(.disabled):active, .show > .btn-outline-seconda=
ry.dropdown-toggle { color: rgb(255, 255, 255); background-color: rgb(108, =
117, 125); border-color: rgb(108, 117, 125); }

.btn-outline-secondary:not(:disabled):not(.disabled).active:focus, .btn-out=
line-secondary:not(:disabled):not(.disabled):active:focus, .show > .btn-out=
line-secondary.dropdown-toggle:focus { box-shadow: rgba(108, 117, 125, 0.5)=
 0px 0px 0px 0.2rem; }

.btn-outline-success { color: rgb(40, 167, 69); border-color: rgb(40, 167, =
69); }

.btn-outline-success:visited { color: rgb(40, 167, 69); }

.btn-outline-success:hover { color: rgb(255, 255, 255); background-color: r=
gb(40, 167, 69); border-color: rgb(40, 167, 69); }

.btn-outline-success.focus, .btn-outline-success:focus { box-shadow: rgba(4=
0, 167, 69, 0.5) 0px 0px 0px 0.2rem; }

.btn-outline-success.disabled, .btn-outline-success:disabled { color: rgb(4=
0, 167, 69); background-color: transparent; }

.btn-outline-success:not(:disabled):not(.disabled).active, .btn-outline-suc=
cess:not(:disabled):not(.disabled):active, .show > .btn-outline-success.dro=
pdown-toggle { color: rgb(255, 255, 255); background-color: rgb(40, 167, 69=
); border-color: rgb(40, 167, 69); }

.btn-outline-success:not(:disabled):not(.disabled).active:focus, .btn-outli=
ne-success:not(:disabled):not(.disabled):active:focus, .show > .btn-outline=
-success.dropdown-toggle:focus { box-shadow: rgba(40, 167, 69, 0.5) 0px 0px=
 0px 0.2rem; }

.btn-outline-info { color: rgb(23, 162, 184); border-color: rgb(23, 162, 18=
4); }

.btn-outline-info:visited { color: rgb(23, 162, 184); }

.btn-outline-info:hover { color: rgb(255, 255, 255); background-color: rgb(=
23, 162, 184); border-color: rgb(23, 162, 184); }

.btn-outline-info.focus, .btn-outline-info:focus { box-shadow: rgba(23, 162=
, 184, 0.5) 0px 0px 0px 0.2rem; }

.btn-outline-info.disabled, .btn-outline-info:disabled { color: rgb(23, 162=
, 184); background-color: transparent; }

.btn-outline-info:not(:disabled):not(.disabled).active, .btn-outline-info:n=
ot(:disabled):not(.disabled):active, .show > .btn-outline-info.dropdown-tog=
gle { color: rgb(255, 255, 255); background-color: rgb(23, 162, 184); borde=
r-color: rgb(23, 162, 184); }

.btn-outline-info:not(:disabled):not(.disabled).active:focus, .btn-outline-=
info:not(:disabled):not(.disabled):active:focus, .show > .btn-outline-info.=
dropdown-toggle:focus { box-shadow: rgba(23, 162, 184, 0.5) 0px 0px 0px 0.2=
rem; }

.btn-outline-warning { color: rgb(255, 193, 7); border-color: rgb(255, 193,=
 7); }

.btn-outline-warning:visited { color: rgb(255, 193, 7); }

.btn-outline-warning:hover { color: rgb(33, 37, 41); background-color: rgb(=
255, 193, 7); border-color: rgb(255, 193, 7); }

.btn-outline-warning.focus, .btn-outline-warning:focus { box-shadow: rgba(2=
55, 193, 7, 0.5) 0px 0px 0px 0.2rem; }

.btn-outline-warning.disabled, .btn-outline-warning:disabled { color: rgb(2=
55, 193, 7); background-color: transparent; }

.btn-outline-warning:not(:disabled):not(.disabled).active, .btn-outline-war=
ning:not(:disabled):not(.disabled):active, .show > .btn-outline-warning.dro=
pdown-toggle { color: rgb(33, 37, 41); background-color: rgb(255, 193, 7); =
border-color: rgb(255, 193, 7); }

.btn-outline-warning:not(:disabled):not(.disabled).active:focus, .btn-outli=
ne-warning:not(:disabled):not(.disabled):active:focus, .show > .btn-outline=
-warning.dropdown-toggle:focus { box-shadow: rgba(255, 193, 7, 0.5) 0px 0px=
 0px 0.2rem; }

.btn-outline-danger { color: rgb(220, 53, 69); border-color: rgb(220, 53, 6=
9); }

.btn-outline-danger:visited { color: rgb(220, 53, 69); }

.btn-outline-danger:hover { color: rgb(255, 255, 255); background-color: rg=
b(220, 53, 69); border-color: rgb(220, 53, 69); }

.btn-outline-danger.focus, .btn-outline-danger:focus { box-shadow: rgba(220=
, 53, 69, 0.5) 0px 0px 0px 0.2rem; }

.btn-outline-danger.disabled, .btn-outline-danger:disabled { color: rgb(220=
, 53, 69); background-color: transparent; }

.btn-outline-danger:not(:disabled):not(.disabled).active, .btn-outline-dang=
er:not(:disabled):not(.disabled):active, .show > .btn-outline-danger.dropdo=
wn-toggle { color: rgb(255, 255, 255); background-color: rgb(220, 53, 69); =
border-color: rgb(220, 53, 69); }

.btn-outline-danger:not(:disabled):not(.disabled).active:focus, .btn-outlin=
e-danger:not(:disabled):not(.disabled):active:focus, .show > .btn-outline-d=
anger.dropdown-toggle:focus { box-shadow: rgba(220, 53, 69, 0.5) 0px 0px 0p=
x 0.2rem; }

.btn-outline-light { color: rgb(248, 249, 250); border-color: rgb(248, 249,=
 250); }

.btn-outline-light:visited { color: rgb(248, 249, 250); }

.btn-outline-light:hover { color: rgb(33, 37, 41); background-color: rgb(24=
8, 249, 250); border-color: rgb(248, 249, 250); }

.btn-outline-light.focus, .btn-outline-light:focus { box-shadow: rgba(248, =
249, 250, 0.5) 0px 0px 0px 0.2rem; }

.btn-outline-light.disabled, .btn-outline-light:disabled { color: rgb(248, =
249, 250); background-color: transparent; }

.btn-outline-light:not(:disabled):not(.disabled).active, .btn-outline-light=
:not(:disabled):not(.disabled):active, .show > .btn-outline-light.dropdown-=
toggle { color: rgb(33, 37, 41); background-color: rgb(248, 249, 250); bord=
er-color: rgb(248, 249, 250); }

.btn-outline-light:not(:disabled):not(.disabled).active:focus, .btn-outline=
-light:not(:disabled):not(.disabled):active:focus, .show > .btn-outline-lig=
ht.dropdown-toggle:focus { box-shadow: rgba(248, 249, 250, 0.5) 0px 0px 0px=
 0.2rem; }

.btn-outline-dark { color: rgb(52, 58, 64); border-color: rgb(52, 58, 64); =
}

.btn-outline-dark:visited { color: rgb(52, 58, 64); }

.btn-outline-dark:hover { color: rgb(255, 255, 255); background-color: rgb(=
52, 58, 64); border-color: rgb(52, 58, 64); }

.btn-outline-dark.focus, .btn-outline-dark:focus { box-shadow: rgba(52, 58,=
 64, 0.5) 0px 0px 0px 0.2rem; }

.btn-outline-dark.disabled, .btn-outline-dark:disabled { color: rgb(52, 58,=
 64); background-color: transparent; }

.btn-outline-dark:not(:disabled):not(.disabled).active, .btn-outline-dark:n=
ot(:disabled):not(.disabled):active, .show > .btn-outline-dark.dropdown-tog=
gle { color: rgb(255, 255, 255); background-color: rgb(52, 58, 64); border-=
color: rgb(52, 58, 64); }

.btn-outline-dark:not(:disabled):not(.disabled).active:focus, .btn-outline-=
dark:not(:disabled):not(.disabled):active:focus, .show > .btn-outline-dark.=
dropdown-toggle:focus { box-shadow: rgba(52, 58, 64, 0.5) 0px 0px 0px 0.2re=
m; }

.btn-link { font-weight: 400; color: rgb(0, 123, 255); text-decoration: non=
e; }

.btn-link:hover { color: rgb(0, 86, 179); text-decoration: underline; }

.btn-link.focus, .btn-link:focus { text-decoration: underline; box-shadow: =
none; }

.btn-link.disabled, .btn-link:disabled { color: rgb(108, 117, 125); pointer=
-events: none; }

.btn-group-lg > .btn, .btn-lg { padding: 0.5rem 1rem; font-size: 1.25rem; l=
ine-height: 1.5; border-radius: 0.3rem; }

.btn-group-sm > .btn, .btn-sm { padding: 0.25rem 0.5rem; font-size: 0.875re=
m; line-height: 1.5; border-radius: 0.2rem; }

.btn-block { display: block; width: 100%; }

.btn-block + .btn-block { margin-top: 0.5rem; }

input[type=3D"button"].btn-block, input[type=3D"reset"].btn-block, input[ty=
pe=3D"submit"].btn-block { width: 100%; }

.stretched-link::after { position: absolute; inset: 0px; z-index: 1; pointe=
r-events: auto; content: ""; background-color: rgba(0, 0, 0, 0); }

.text-wrap { white-space: normal !important; }

.card { position: relative; display: flex; flex-direction: column; min-widt=
h: 0px; overflow-wrap: break-word; background-color: rgb(255, 255, 255); ba=
ckground-clip: border-box; border: 1px solid rgba(0, 0, 0, 0.125); border-r=
adius: 0.25rem; }

.card > hr { margin-right: 0px; margin-left: 0px; }

.card > .list-group:first-child .list-group-item:first-child { border-top-l=
eft-radius: 0.25rem; border-top-right-radius: 0.25rem; }

.card > .list-group:last-child .list-group-item:last-child { border-bottom-=
right-radius: 0.25rem; border-bottom-left-radius: 0.25rem; }

.card-body { flex: 1 1 auto; min-height: 1px; padding: 1.25rem; }

.card-title { margin-bottom: 0.75rem; }

.card-subtitle { margin-top: -0.375rem; margin-bottom: 0px; }

.card-text:last-child { margin-bottom: 0px; }

.card-link:hover { text-decoration: none; }

.card-link + .card-link { margin-left: 1.25rem; }

.card-header { padding: 0.75rem 1.25rem; margin-bottom: 0px; background-col=
or: rgba(0, 0, 0, 0.03); border-bottom: 1px solid rgba(0, 0, 0, 0.125); }

.card-header:first-child { border-radius: calc(0.25rem - 1px) calc(0.25rem =
- 1px) 0px 0px; }

.card-header + .list-group .list-group-item:first-child { border-top: 0px; =
}

.card-footer { padding: 0.75rem 1.25rem; background-color: rgba(0, 0, 0, 0.=
03); border-top: 1px solid rgba(0, 0, 0, 0.125); }

.card-footer:last-child { border-radius: 0px 0px calc(0.25rem - 1px) calc(0=
.25rem - 1px); }

.card-header-tabs { margin-right: -0.625rem; margin-bottom: -0.75rem; margi=
n-left: -0.625rem; border-bottom: 0px; }

.card-header-pills { margin-right: -0.625rem; margin-left: -0.625rem; }

.card-img-overlay { position: absolute; inset: 0px; padding: 1.25rem; }

.card-img, .card-img-bottom, .card-img-top { flex-shrink: 0; width: 100%; }

.card-img, .card-img-top { border-top-left-radius: calc(0.25rem - 1px); bor=
der-top-right-radius: calc(0.25rem - 1px); }

.card-img, .card-img-bottom { border-bottom-right-radius: calc(0.25rem - 1p=
x); border-bottom-left-radius: calc(0.25rem - 1px); }

.w-100 { width: 100% !important; }

.shadow { box-shadow: rgba(0, 0, 0, 0.15) 0px 0.5rem 1rem !important; }

.bg-primary { background-color: rgb(0, 123, 255) !important; }

a.bg-primary:focus, a.bg-primary:hover, button.bg-primary:focus, button.bg-=
primary:hover { background-color: rgb(0, 98, 204) !important; }

.bg-secondary { background-color: rgb(108, 117, 125) !important; }

a.bg-secondary:focus, a.bg-secondary:hover, button.bg-secondary:focus, butt=
on.bg-secondary:hover { background-color: rgb(84, 91, 98) !important; }

.bg-success { background-color: rgb(40, 167, 69) !important; }

a.bg-success:focus, a.bg-success:hover, button.bg-success:focus, button.bg-=
success:hover { background-color: rgb(30, 126, 52) !important; }

.bg-info { background-color: rgb(23, 162, 184) !important; }

a.bg-info:focus, a.bg-info:hover, button.bg-info:focus, button.bg-info:hove=
r { background-color: rgb(17, 122, 139) !important; }

.bg-warning { background-color: rgb(255, 193, 7) !important; }

a.bg-warning:focus, a.bg-warning:hover, button.bg-warning:focus, button.bg-=
warning:hover { background-color: rgb(211, 158, 0) !important; }

.bg-danger { background-color: rgb(220, 53, 69) !important; }

a.bg-danger:focus, a.bg-danger:hover, button.bg-danger:focus, button.bg-dan=
ger:hover { background-color: rgb(189, 33, 48) !important; }

.bg-light { background-color: rgb(248, 249, 250) !important; }

a.bg-light:focus, a.bg-light:hover, button.bg-light:focus, button.bg-light:=
hover { background-color: rgb(218, 224, 229) !important; }

.bg-dark { background-color: rgb(52, 58, 64) !important; }

a.bg-dark:focus, a.bg-dark:hover, button.bg-dark:focus, button.bg-dark:hove=
r { background-color: rgb(29, 33, 36) !important; }

.bg-white { background-color: rgb(255, 255, 255) !important; }

.bg-transparent { background-color: transparent !important; }

.text-justify { text-align: justify !important; }

.text-left { text-align: left !important; }

.text-right { text-align: right !important; }

.text-center { text-align: center !important; }

.font-weight-light { font-weight: 300 !important; }

.font-weight-lighter { font-weight: lighter !important; }

.font-weight-normal { font-weight: 400 !important; }

.font-weight-bold { font-weight: 700 !important; }

.font-weight-bolder { font-weight: bolder !important; }

.font-italic { font-style: italic !important; }

.text-white { color: rgb(255, 255, 255) !important; }

.text-primary { color: rgb(0, 123, 255) !important; }

a.text-primary:focus, a.text-primary:hover { color: rgb(0, 86, 179) !import=
ant; }

.text-secondary { color: rgb(108, 117, 125) !important; }

a.text-secondary:focus, a.text-secondary:hover { color: rgb(73, 79, 84) !im=
portant; }

.text-success { color: rgb(40, 167, 69) !important; }

a.text-success:focus, a.text-success:hover { color: rgb(25, 105, 44) !impor=
tant; }

.text-info { color: rgb(23, 162, 184) !important; }

a.text-info:focus, a.text-info:hover { color: rgb(15, 102, 116) !important;=
 }

.text-warning { color: rgb(255, 193, 7) !important; }

a.text-warning:focus, a.text-warning:hover { color: rgb(186, 139, 0) !impor=
tant; }

.text-danger { color: rgb(220, 53, 69) !important; }

a.text-danger:focus, a.text-danger:hover { color: rgb(167, 29, 42) !importa=
nt; }

.text-light { color: rgb(248, 249, 250) !important; }

a.text-light:focus, a.text-light:hover { color: rgb(203, 211, 218) !importa=
nt; }

.text-dark { color: rgb(52, 58, 64) !important; }

a.text-dark:focus, a.text-dark:hover { color: rgb(18, 20, 22) !important; }

.text-body { color: rgb(33, 37, 41) !important; }

.text-muted { color: rgb(108, 117, 125) !important; }

.text-black-50 { color: rgba(0, 0, 0, 0.5) !important; }

.text-white-50 { color: rgba(255, 255, 255, 0.5) !important; }

.container { width: 100%; padding-right: 15px; padding-left: 15px; margin-r=
ight: auto; margin-left: auto; }

@media (min-width: 576px) {
  .container { max-width: 540px; }
}

@media (min-width: 768px) {
  .container { max-width: 720px; }
}

@media (min-width: 992px) {
  .container { max-width: 960px; }
}

@media (min-width: 1200px) {
  .container { max-width: 1140px; }
}

.container-fluid, .container-lg, .container-md, .container-sm, .container-x=
l { width: 100%; padding-right: 15px; padding-left: 15px; margin-right: aut=
o; margin-left: auto; }

@media (min-width: 576px) {
  .container, .container-sm { max-width: 540px; }
}

@media (min-width: 768px) {
  .container, .container-md, .container-sm { max-width: 720px; }
}

@media (min-width: 992px) {
  .container, .container-lg, .container-md, .container-sm { max-width: 960p=
x; }
}

@media (min-width: 1200px) {
  .container, .container-lg, .container-md, .container-sm, .container-xl { =
max-width: 1140px; }
}

.row { display: flex; flex-wrap: wrap; margin-right: -15px; margin-left: -1=
5px; }

.col-lg, .col-lg-1, .col-lg-10, .col-lg-11, .col-lg-12, .col-lg-2, .col-lg-=
3, .col-lg-4, .col-lg-5, .col-lg-6, .col-lg-7, .col-lg-8, .col-lg-9, .col-l=
g-auto, .col-md, .col-md-1, .col-md-10, .col-md-11, .col-md-12, .col-md-2, =
.col-md-3, .col-md-4, .col-md-5, .col-md-6, .col-md-7, .col-md-8, .col-md-9=
, .col-md-auto, .col-sm, .col-sm-1, .col-sm-10, .col-sm-11, .col-sm-12, .co=
l-sm-2, .col-sm-3, .col-sm-4, .col-sm-5, .col-sm-6, .col-sm-7, .col-sm-8, .=
col-sm-9, .col-sm-auto, .col-xl, .col-xl-1, .col-xl-10, .col-xl-11, .col-xl=
-12, .col-xl-2, .col-xl-3, .col-xl-4, .col-xl-5, .col-xl-6, .col-xl-7, .col=
-xl-8, .col-xl-9, .col-xl-auto { position: relative; width: 100%; padding-r=
ight: 15px; padding-left: 15px; }

@media (min-width: 576px) {
  .col-sm { flex-basis: 0px; flex-grow: 1; max-width: 100%; }
  .col-sm-auto { flex: 0 0 auto; width: auto; max-width: 100%; }
  .col-sm-1 { flex: 0 0 8.33333%; max-width: 8.33333%; }
  .col-sm-2 { flex: 0 0 16.6667%; max-width: 16.6667%; }
  .col-sm-3 { flex: 0 0 25%; max-width: 25%; }
  .col-sm-4 { flex: 0 0 33.3333%; max-width: 33.3333%; }
  .col-sm-5 { flex: 0 0 41.6667%; max-width: 41.6667%; }
  .col-sm-6 { flex: 0 0 50%; max-width: 50%; }
  .col-sm-7 { flex: 0 0 58.3333%; max-width: 58.3333%; }
  .col-sm-8 { flex: 0 0 66.6667%; max-width: 66.6667%; }
  .col-sm-9 { flex: 0 0 75%; max-width: 75%; }
  .col-sm-10 { flex: 0 0 83.3333%; max-width: 83.3333%; }
  .col-sm-11 { flex: 0 0 91.6667%; max-width: 91.6667%; }
  .col-sm-12 { flex: 0 0 100%; max-width: 100%; }
}

@media (min-width: 768px) {
  .col-md { flex-basis: 0px; flex-grow: 1; max-width: 100%; }
  .col-md-auto { flex: 0 0 auto; width: auto; max-width: 100%; }
  .col-md-1 { flex: 0 0 8.33333%; max-width: 8.33333%; }
  .col-md-2 { flex: 0 0 16.6667%; max-width: 16.6667%; }
  .col-md-3 { flex: 0 0 25%; max-width: 25%; }
  .col-md-4 { flex: 0 0 33.3333%; max-width: 33.3333%; }
  .col-md-5 { flex: 0 0 41.6667%; max-width: 41.6667%; }
  .col-md-6 { flex: 0 0 50%; max-width: 50%; }
  .col-md-7 { flex: 0 0 58.3333%; max-width: 58.3333%; }
  .col-md-8 { flex: 0 0 66.6667%; max-width: 66.6667%; }
  .col-md-9 { flex: 0 0 75%; max-width: 75%; }
  .col-md-10 { flex: 0 0 83.3333%; max-width: 83.3333%; }
  .col-md-11 { flex: 0 0 91.6667%; max-width: 91.6667%; }
  .col-md-12 { flex: 0 0 100%; max-width: 100%; }
}

@media (min-width: 992px) {
  .col-lg { flex-basis: 0px; flex-grow: 1; max-width: 100%; }
  .col-lg-auto { flex: 0 0 auto; width: auto; max-width: 100%; }
  .col-lg-1 { flex: 0 0 8.33333%; max-width: 8.33333%; }
  .col-lg-2 { flex: 0 0 16.6667%; max-width: 16.6667%; }
  .col-lg-3 { flex: 0 0 25%; max-width: 25%; }
  .col-lg-4 { flex: 0 0 33.3333%; max-width: 33.3333%; }
  .col-lg-5 { flex: 0 0 41.6667%; max-width: 41.6667%; }
  .col-lg-6 { flex: 0 0 50%; max-width: 50%; }
  .col-lg-7 { flex: 0 0 58.3333%; max-width: 58.3333%; }
  .col-lg-8 { flex: 0 0 66.6667%; max-width: 66.6667%; }
  .col-lg-9 { flex: 0 0 75%; max-width: 75%; }
  .col-lg-10 { flex: 0 0 83.3333%; max-width: 83.3333%; }
  .col-lg-11 { flex: 0 0 91.6667%; max-width: 91.6667%; }
  .col-lg-12 { flex: 0 0 100%; max-width: 100%; }
}

@media (min-width: 1200px) {
  .col-xl { flex-basis: 0px; flex-grow: 1; max-width: 100%; }
  .col-xl-auto { flex: 0 0 auto; width: auto; max-width: 100%; }
  .col-xl-1 { flex: 0 0 8.33333%; max-width: 8.33333%; }
  .col-xl-2 { flex: 0 0 16.6667%; max-width: 16.6667%; }
  .col-xl-3 { flex: 0 0 25%; max-width: 25%; }
  .col-xl-4 { flex: 0 0 33.3333%; max-width: 33.3333%; }
  .col-xl-5 { flex: 0 0 41.6667%; max-width: 41.6667%; }
  .col-xl-6 { flex: 0 0 50%; max-width: 50%; }
  .col-xl-7 { flex: 0 0 58.3333%; max-width: 58.3333%; }
  .col-xl-8 { flex: 0 0 66.6667%; max-width: 66.6667%; }
  .col-xl-9 { flex: 0 0 75%; max-width: 75%; }
  .col-xl-10 { flex: 0 0 83.3333%; max-width: 83.3333%; }
  .col-xl-11 { flex: 0 0 91.6667%; max-width: 91.6667%; }
  .col-xl-12 { flex: 0 0 100%; max-width: 100%; }
}

.d-flex { display: flex !important; }

.sphinx-bs, .sphinx-bs * { box-sizing: border-box; }

.sphinx-bs p { margin-top: 0px; }
------MultipartBoundary--p77pSlE97gVxA9vHZ3llR7beGEIQoxVXk04dgXijz8----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://pytorch.org/docs/1.13/_static/css/jit.css

@charset "utf-8";

.codeblock-height-limiter { max-height: 500px; overflow: scroll; }
------MultipartBoundary--p77pSlE97gVxA9vHZ3llR7beGEIQoxVXk04dgXijz8----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://use.fontawesome.com/releases/v5.15.2/css/all.css

@charset "utf-8";

.fa, .fab, .fad, .fal, .far, .fas { -webkit-font-smoothing: antialiased; di=
splay: inline-block; font-style: normal; font-variant: normal; text-renderi=
ng: auto; line-height: 1; }

.fa-lg { font-size: 1.33333em; line-height: 0.75em; vertical-align: -0.0667=
em; }

.fa-xs { font-size: 0.75em; }

.fa-sm { font-size: 0.875em; }

.fa-1x { font-size: 1em; }

.fa-2x { font-size: 2em; }

.fa-3x { font-size: 3em; }

.fa-4x { font-size: 4em; }

.fa-5x { font-size: 5em; }

.fa-6x { font-size: 6em; }

.fa-7x { font-size: 7em; }

.fa-8x { font-size: 8em; }

.fa-9x { font-size: 9em; }

.fa-10x { font-size: 10em; }

.fa-fw { text-align: center; width: 1.25em; }

.fa-ul { list-style-type: none; margin-left: 2.5em; padding-left: 0px; }

.fa-ul > li { position: relative; }

.fa-li { left: -2em; position: absolute; text-align: center; width: 2em; li=
ne-height: inherit; }

.fa-border { border: 0.08em solid rgb(238, 238, 238); border-radius: 0.1em;=
 padding: 0.2em 0.25em 0.15em; }

.fa-pull-left { float: left; }

.fa-pull-right { float: right; }

.fa.fa-pull-left, .fab.fa-pull-left, .fal.fa-pull-left, .far.fa-pull-left, =
.fas.fa-pull-left { margin-right: 0.3em; }

.fa.fa-pull-right, .fab.fa-pull-right, .fal.fa-pull-right, .far.fa-pull-rig=
ht, .fas.fa-pull-right { margin-left: 0.3em; }

.fa-spin { animation: 2s linear 0s infinite normal none running fa-spin; }

.fa-pulse { animation: 1s steps(8) 0s infinite normal none running fa-spin;=
 }

@-webkit-keyframes fa-spin {=20
  0% { transform: rotate(0deg); }
  100% { transform: rotate(1turn); }
}

@keyframes fa-spin {=20
  0% { transform: rotate(0deg); }
  100% { transform: rotate(1turn); }
}

.fa-rotate-90 { transform: rotate(90deg); }

.fa-rotate-180 { transform: rotate(180deg); }

.fa-rotate-270 { transform: rotate(270deg); }

.fa-flip-horizontal { transform: scaleX(-1); }

.fa-flip-vertical { transform: scaleY(-1); }

.fa-flip-both, .fa-flip-horizontal.fa-flip-vertical, .fa-flip-vertical { }

.fa-flip-both, .fa-flip-horizontal.fa-flip-vertical { transform: scale(-1);=
 }

:root .fa-flip-both, :root .fa-flip-horizontal, :root .fa-flip-vertical, :r=
oot .fa-rotate-90, :root .fa-rotate-180, :root .fa-rotate-270 { filter: non=
e; }

.fa-stack { display: inline-block; height: 2em; line-height: 2em; position:=
 relative; vertical-align: middle; width: 2.5em; }

.fa-stack-1x, .fa-stack-2x { left: 0px; position: absolute; text-align: cen=
ter; width: 100%; }

.fa-stack-1x { line-height: inherit; }

.fa-stack-2x { font-size: 2em; }

.fa-inverse { color: rgb(255, 255, 255); }

.fa-500px::before { content: "=EF=89=AE"; }

.fa-accessible-icon::before { content: "=EF=8D=A8"; }

.fa-accusoft::before { content: "=EF=8D=A9"; }

.fa-acquisitions-incorporated::before { content: "=EF=9A=AF"; }

.fa-ad::before { content: "=EF=99=81"; }

.fa-address-book::before { content: "=EF=8A=B9"; }

.fa-address-card::before { content: "=EF=8A=BB"; }

.fa-adjust::before { content: "=EF=81=82"; }

.fa-adn::before { content: "=EF=85=B0"; }

.fa-adversal::before { content: "=EF=8D=AA"; }

.fa-affiliatetheme::before { content: "=EF=8D=AB"; }

.fa-air-freshener::before { content: "=EF=97=90"; }

.fa-airbnb::before { content: "=EF=A0=B4"; }

.fa-algolia::before { content: "=EF=8D=AC"; }

.fa-align-center::before { content: "=EF=80=B7"; }

.fa-align-justify::before { content: "=EF=80=B9"; }

.fa-align-left::before { content: "=EF=80=B6"; }

.fa-align-right::before { content: "=EF=80=B8"; }

.fa-alipay::before { content: "=EF=99=82"; }

.fa-allergies::before { content: "=EF=91=A1"; }

.fa-amazon::before { content: "=EF=89=B0"; }

.fa-amazon-pay::before { content: "=EF=90=AC"; }

.fa-ambulance::before { content: "=EF=83=B9"; }

.fa-american-sign-language-interpreting::before { content: "=EF=8A=A3"; }

.fa-amilia::before { content: "=EF=8D=AD"; }

.fa-anchor::before { content: "=EF=84=BD"; }

.fa-android::before { content: "=EF=85=BB"; }

.fa-angellist::before { content: "=EF=88=89"; }

.fa-angle-double-down::before { content: "=EF=84=83"; }

.fa-angle-double-left::before { content: "=EF=84=80"; }

.fa-angle-double-right::before { content: "=EF=84=81"; }

.fa-angle-double-up::before { content: "=EF=84=82"; }

.fa-angle-down::before { content: "=EF=84=87"; }

.fa-angle-left::before { content: "=EF=84=84"; }

.fa-angle-right::before { content: "=EF=84=85"; }

.fa-angle-up::before { content: "=EF=84=86"; }

.fa-angry::before { content: "=EF=95=96"; }

.fa-angrycreative::before { content: "=EF=8D=AE"; }

.fa-angular::before { content: "=EF=90=A0"; }

.fa-ankh::before { content: "=EF=99=84"; }

.fa-app-store::before { content: "=EF=8D=AF"; }

.fa-app-store-ios::before { content: "=EF=8D=B0"; }

.fa-apper::before { content: "=EF=8D=B1"; }

.fa-apple::before { content: "=EF=85=B9"; }

.fa-apple-alt::before { content: "=EF=97=91"; }

.fa-apple-pay::before { content: "=EF=90=95"; }

.fa-archive::before { content: "=EF=86=87"; }

.fa-archway::before { content: "=EF=95=97"; }

.fa-arrow-alt-circle-down::before { content: "=EF=8D=98"; }

.fa-arrow-alt-circle-left::before { content: "=EF=8D=99"; }

.fa-arrow-alt-circle-right::before { content: "=EF=8D=9A"; }

.fa-arrow-alt-circle-up::before { content: "=EF=8D=9B"; }

.fa-arrow-circle-down::before { content: "=EF=82=AB"; }

.fa-arrow-circle-left::before { content: "=EF=82=A8"; }

.fa-arrow-circle-right::before { content: "=EF=82=A9"; }

.fa-arrow-circle-up::before { content: "=EF=82=AA"; }

.fa-arrow-down::before { content: "=EF=81=A3"; }

.fa-arrow-left::before { content: "=EF=81=A0"; }

.fa-arrow-right::before { content: "=EF=81=A1"; }

.fa-arrow-up::before { content: "=EF=81=A2"; }

.fa-arrows-alt::before { content: "=EF=82=B2"; }

.fa-arrows-alt-h::before { content: "=EF=8C=B7"; }

.fa-arrows-alt-v::before { content: "=EF=8C=B8"; }

.fa-artstation::before { content: "=EF=9D=BA"; }

.fa-assistive-listening-systems::before { content: "=EF=8A=A2"; }

.fa-asterisk::before { content: "=EF=81=A9"; }

.fa-asymmetrik::before { content: "=EF=8D=B2"; }

.fa-at::before { content: "=EF=87=BA"; }

.fa-atlas::before { content: "=EF=95=98"; }

.fa-atlassian::before { content: "=EF=9D=BB"; }

.fa-atom::before { content: "=EF=97=92"; }

.fa-audible::before { content: "=EF=8D=B3"; }

.fa-audio-description::before { content: "=EF=8A=9E"; }

.fa-autoprefixer::before { content: "=EF=90=9C"; }

.fa-avianex::before { content: "=EF=8D=B4"; }

.fa-aviato::before { content: "=EF=90=A1"; }

.fa-award::before { content: "=EF=95=99"; }

.fa-aws::before { content: "=EF=8D=B5"; }

.fa-baby::before { content: "=EF=9D=BC"; }

.fa-baby-carriage::before { content: "=EF=9D=BD"; }

.fa-backspace::before { content: "=EF=95=9A"; }

.fa-backward::before { content: "=EF=81=8A"; }

.fa-bacon::before { content: "=EF=9F=A5"; }

.fa-bacteria::before { content: "=EE=81=99"; }

.fa-bacterium::before { content: "=EE=81=9A"; }

.fa-bahai::before { content: "=EF=99=A6"; }

.fa-balance-scale::before { content: "=EF=89=8E"; }

.fa-balance-scale-left::before { content: "=EF=94=95"; }

.fa-balance-scale-right::before { content: "=EF=94=96"; }

.fa-ban::before { content: "=EF=81=9E"; }

.fa-band-aid::before { content: "=EF=91=A2"; }

.fa-bandcamp::before { content: "=EF=8B=95"; }

.fa-barcode::before { content: "=EF=80=AA"; }

.fa-bars::before { content: "=EF=83=89"; }

.fa-baseball-ball::before { content: "=EF=90=B3"; }

.fa-basketball-ball::before { content: "=EF=90=B4"; }

.fa-bath::before { content: "=EF=8B=8D"; }

.fa-battery-empty::before { content: "=EF=89=84"; }

.fa-battery-full::before { content: "=EF=89=80"; }

.fa-battery-half::before { content: "=EF=89=82"; }

.fa-battery-quarter::before { content: "=EF=89=83"; }

.fa-battery-three-quarters::before { content: "=EF=89=81"; }

.fa-battle-net::before { content: "=EF=A0=B5"; }

.fa-bed::before { content: "=EF=88=B6"; }

.fa-beer::before { content: "=EF=83=BC"; }

.fa-behance::before { content: "=EF=86=B4"; }

.fa-behance-square::before { content: "=EF=86=B5"; }

.fa-bell::before { content: "=EF=83=B3"; }

.fa-bell-slash::before { content: "=EF=87=B6"; }

.fa-bezier-curve::before { content: "=EF=95=9B"; }

.fa-bible::before { content: "=EF=99=87"; }

.fa-bicycle::before { content: "=EF=88=86"; }

.fa-biking::before { content: "=EF=A1=8A"; }

.fa-bimobject::before { content: "=EF=8D=B8"; }

.fa-binoculars::before { content: "=EF=87=A5"; }

.fa-biohazard::before { content: "=EF=9E=80"; }

.fa-birthday-cake::before { content: "=EF=87=BD"; }

.fa-bitbucket::before { content: "=EF=85=B1"; }

.fa-bitcoin::before { content: "=EF=8D=B9"; }

.fa-bity::before { content: "=EF=8D=BA"; }

.fa-black-tie::before { content: "=EF=89=BE"; }

.fa-blackberry::before { content: "=EF=8D=BB"; }

.fa-blender::before { content: "=EF=94=97"; }

.fa-blender-phone::before { content: "=EF=9A=B6"; }

.fa-blind::before { content: "=EF=8A=9D"; }

.fa-blog::before { content: "=EF=9E=81"; }

.fa-blogger::before { content: "=EF=8D=BC"; }

.fa-blogger-b::before { content: "=EF=8D=BD"; }

.fa-bluetooth::before { content: "=EF=8A=93"; }

.fa-bluetooth-b::before { content: "=EF=8A=94"; }

.fa-bold::before { content: "=EF=80=B2"; }

.fa-bolt::before { content: "=EF=83=A7"; }

.fa-bomb::before { content: "=EF=87=A2"; }

.fa-bone::before { content: "=EF=97=97"; }

.fa-bong::before { content: "=EF=95=9C"; }

.fa-book::before { content: "=EF=80=AD"; }

.fa-book-dead::before { content: "=EF=9A=B7"; }

.fa-book-medical::before { content: "=EF=9F=A6"; }

.fa-book-open::before { content: "=EF=94=98"; }

.fa-book-reader::before { content: "=EF=97=9A"; }

.fa-bookmark::before { content: "=EF=80=AE"; }

.fa-bootstrap::before { content: "=EF=A0=B6"; }

.fa-border-all::before { content: "=EF=A1=8C"; }

.fa-border-none::before { content: "=EF=A1=90"; }

.fa-border-style::before { content: "=EF=A1=93"; }

.fa-bowling-ball::before { content: "=EF=90=B6"; }

.fa-box::before { content: "=EF=91=A6"; }

.fa-box-open::before { content: "=EF=92=9E"; }

.fa-box-tissue::before { content: "=EE=81=9B"; }

.fa-boxes::before { content: "=EF=91=A8"; }

.fa-braille::before { content: "=EF=8A=A1"; }

.fa-brain::before { content: "=EF=97=9C"; }

.fa-bread-slice::before { content: "=EF=9F=AC"; }

.fa-briefcase::before { content: "=EF=82=B1"; }

.fa-briefcase-medical::before { content: "=EF=91=A9"; }

.fa-broadcast-tower::before { content: "=EF=94=99"; }

.fa-broom::before { content: "=EF=94=9A"; }

.fa-brush::before { content: "=EF=95=9D"; }

.fa-btc::before { content: "=EF=85=9A"; }

.fa-buffer::before { content: "=EF=A0=B7"; }

.fa-bug::before { content: "=EF=86=88"; }

.fa-building::before { content: "=EF=86=AD"; }

.fa-bullhorn::before { content: "=EF=82=A1"; }

.fa-bullseye::before { content: "=EF=85=80"; }

.fa-burn::before { content: "=EF=91=AA"; }

.fa-buromobelexperte::before { content: "=EF=8D=BF"; }

.fa-bus::before { content: "=EF=88=87"; }

.fa-bus-alt::before { content: "=EF=95=9E"; }

.fa-business-time::before { content: "=EF=99=8A"; }

.fa-buy-n-large::before { content: "=EF=A2=A6"; }

.fa-buysellads::before { content: "=EF=88=8D"; }

.fa-calculator::before { content: "=EF=87=AC"; }

.fa-calendar::before { content: "=EF=84=B3"; }

.fa-calendar-alt::before { content: "=EF=81=B3"; }

.fa-calendar-check::before { content: "=EF=89=B4"; }

.fa-calendar-day::before { content: "=EF=9E=83"; }

.fa-calendar-minus::before { content: "=EF=89=B2"; }

.fa-calendar-plus::before { content: "=EF=89=B1"; }

.fa-calendar-times::before { content: "=EF=89=B3"; }

.fa-calendar-week::before { content: "=EF=9E=84"; }

.fa-camera::before { content: "=EF=80=B0"; }

.fa-camera-retro::before { content: "=EF=82=83"; }

.fa-campground::before { content: "=EF=9A=BB"; }

.fa-canadian-maple-leaf::before { content: "=EF=9E=85"; }

.fa-candy-cane::before { content: "=EF=9E=86"; }

.fa-cannabis::before { content: "=EF=95=9F"; }

.fa-capsules::before { content: "=EF=91=AB"; }

.fa-car::before { content: "=EF=86=B9"; }

.fa-car-alt::before { content: "=EF=97=9E"; }

.fa-car-battery::before { content: "=EF=97=9F"; }

.fa-car-crash::before { content: "=EF=97=A1"; }

.fa-car-side::before { content: "=EF=97=A4"; }

.fa-caravan::before { content: "=EF=A3=BF"; }

.fa-caret-down::before { content: "=EF=83=97"; }

.fa-caret-left::before { content: "=EF=83=99"; }

.fa-caret-right::before { content: "=EF=83=9A"; }

.fa-caret-square-down::before { content: "=EF=85=90"; }

.fa-caret-square-left::before { content: "=EF=86=91"; }

.fa-caret-square-right::before { content: "=EF=85=92"; }

.fa-caret-square-up::before { content: "=EF=85=91"; }

.fa-caret-up::before { content: "=EF=83=98"; }

.fa-carrot::before { content: "=EF=9E=87"; }

.fa-cart-arrow-down::before { content: "=EF=88=98"; }

.fa-cart-plus::before { content: "=EF=88=97"; }

.fa-cash-register::before { content: "=EF=9E=88"; }

.fa-cat::before { content: "=EF=9A=BE"; }

.fa-cc-amazon-pay::before { content: "=EF=90=AD"; }

.fa-cc-amex::before { content: "=EF=87=B3"; }

.fa-cc-apple-pay::before { content: "=EF=90=96"; }

.fa-cc-diners-club::before { content: "=EF=89=8C"; }

.fa-cc-discover::before { content: "=EF=87=B2"; }

.fa-cc-jcb::before { content: "=EF=89=8B"; }

.fa-cc-mastercard::before { content: "=EF=87=B1"; }

.fa-cc-paypal::before { content: "=EF=87=B4"; }

.fa-cc-stripe::before { content: "=EF=87=B5"; }

.fa-cc-visa::before { content: "=EF=87=B0"; }

.fa-centercode::before { content: "=EF=8E=80"; }

.fa-centos::before { content: "=EF=9E=89"; }

.fa-certificate::before { content: "=EF=82=A3"; }

.fa-chair::before { content: "=EF=9B=80"; }

.fa-chalkboard::before { content: "=EF=94=9B"; }

.fa-chalkboard-teacher::before { content: "=EF=94=9C"; }

.fa-charging-station::before { content: "=EF=97=A7"; }

.fa-chart-area::before { content: "=EF=87=BE"; }

.fa-chart-bar::before { content: "=EF=82=80"; }

.fa-chart-line::before { content: "=EF=88=81"; }

.fa-chart-pie::before { content: "=EF=88=80"; }

.fa-check::before { content: "=EF=80=8C"; }

.fa-check-circle::before { content: "=EF=81=98"; }

.fa-check-double::before { content: "=EF=95=A0"; }

.fa-check-square::before { content: "=EF=85=8A"; }

.fa-cheese::before { content: "=EF=9F=AF"; }

.fa-chess::before { content: "=EF=90=B9"; }

.fa-chess-bishop::before { content: "=EF=90=BA"; }

.fa-chess-board::before { content: "=EF=90=BC"; }

.fa-chess-king::before { content: "=EF=90=BF"; }

.fa-chess-knight::before { content: "=EF=91=81"; }

.fa-chess-pawn::before { content: "=EF=91=83"; }

.fa-chess-queen::before { content: "=EF=91=85"; }

.fa-chess-rook::before { content: "=EF=91=87"; }

.fa-chevron-circle-down::before { content: "=EF=84=BA"; }

.fa-chevron-circle-left::before { content: "=EF=84=B7"; }

.fa-chevron-circle-right::before { content: "=EF=84=B8"; }

.fa-chevron-circle-up::before { content: "=EF=84=B9"; }

.fa-chevron-down::before { content: "=EF=81=B8"; }

.fa-chevron-left::before { content: "=EF=81=93"; }

.fa-chevron-right::before { content: "=EF=81=94"; }

.fa-chevron-up::before { content: "=EF=81=B7"; }

.fa-child::before { content: "=EF=86=AE"; }

.fa-chrome::before { content: "=EF=89=A8"; }

.fa-chromecast::before { content: "=EF=A0=B8"; }

.fa-church::before { content: "=EF=94=9D"; }

.fa-circle::before { content: "=EF=84=91"; }

.fa-circle-notch::before { content: "=EF=87=8E"; }

.fa-city::before { content: "=EF=99=8F"; }

.fa-clinic-medical::before { content: "=EF=9F=B2"; }

.fa-clipboard::before { content: "=EF=8C=A8"; }

.fa-clipboard-check::before { content: "=EF=91=AC"; }

.fa-clipboard-list::before { content: "=EF=91=AD"; }

.fa-clock::before { content: "=EF=80=97"; }

.fa-clone::before { content: "=EF=89=8D"; }

.fa-closed-captioning::before { content: "=EF=88=8A"; }

.fa-cloud::before { content: "=EF=83=82"; }

.fa-cloud-download-alt::before { content: "=EF=8E=81"; }

.fa-cloud-meatball::before { content: "=EF=9C=BB"; }

.fa-cloud-moon::before { content: "=EF=9B=83"; }

.fa-cloud-moon-rain::before { content: "=EF=9C=BC"; }

.fa-cloud-rain::before { content: "=EF=9C=BD"; }

.fa-cloud-showers-heavy::before { content: "=EF=9D=80"; }

.fa-cloud-sun::before { content: "=EF=9B=84"; }

.fa-cloud-sun-rain::before { content: "=EF=9D=83"; }

.fa-cloud-upload-alt::before { content: "=EF=8E=82"; }

.fa-cloudflare::before { content: "=EE=81=BD"; }

.fa-cloudscale::before { content: "=EF=8E=83"; }

.fa-cloudsmith::before { content: "=EF=8E=84"; }

.fa-cloudversify::before { content: "=EF=8E=85"; }

.fa-cocktail::before { content: "=EF=95=A1"; }

.fa-code::before { content: "=EF=84=A1"; }

.fa-code-branch::before { content: "=EF=84=A6"; }

.fa-codepen::before { content: "=EF=87=8B"; }

.fa-codiepie::before { content: "=EF=8A=84"; }

.fa-coffee::before { content: "=EF=83=B4"; }

.fa-cog::before { content: "=EF=80=93"; }

.fa-cogs::before { content: "=EF=82=85"; }

.fa-coins::before { content: "=EF=94=9E"; }

.fa-columns::before { content: "=EF=83=9B"; }

.fa-comment::before { content: "=EF=81=B5"; }

.fa-comment-alt::before { content: "=EF=89=BA"; }

.fa-comment-dollar::before { content: "=EF=99=91"; }

.fa-comment-dots::before { content: "=EF=92=AD"; }

.fa-comment-medical::before { content: "=EF=9F=B5"; }

.fa-comment-slash::before { content: "=EF=92=B3"; }

.fa-comments::before { content: "=EF=82=86"; }

.fa-comments-dollar::before { content: "=EF=99=93"; }

.fa-compact-disc::before { content: "=EF=94=9F"; }

.fa-compass::before { content: "=EF=85=8E"; }

.fa-compress::before { content: "=EF=81=A6"; }

.fa-compress-alt::before { content: "=EF=90=A2"; }

.fa-compress-arrows-alt::before { content: "=EF=9E=8C"; }

.fa-concierge-bell::before { content: "=EF=95=A2"; }

.fa-confluence::before { content: "=EF=9E=8D"; }

.fa-connectdevelop::before { content: "=EF=88=8E"; }

.fa-contao::before { content: "=EF=89=AD"; }

.fa-cookie::before { content: "=EF=95=A3"; }

.fa-cookie-bite::before { content: "=EF=95=A4"; }

.fa-copy::before { content: "=EF=83=85"; }

.fa-copyright::before { content: "=EF=87=B9"; }

.fa-cotton-bureau::before { content: "=EF=A2=9E"; }

.fa-couch::before { content: "=EF=92=B8"; }

.fa-cpanel::before { content: "=EF=8E=88"; }

.fa-creative-commons::before { content: "=EF=89=9E"; }

.fa-creative-commons-by::before { content: "=EF=93=A7"; }

.fa-creative-commons-nc::before { content: "=EF=93=A8"; }

.fa-creative-commons-nc-eu::before { content: "=EF=93=A9"; }

.fa-creative-commons-nc-jp::before { content: "=EF=93=AA"; }

.fa-creative-commons-nd::before { content: "=EF=93=AB"; }

.fa-creative-commons-pd::before { content: "=EF=93=AC"; }

.fa-creative-commons-pd-alt::before { content: "=EF=93=AD"; }

.fa-creative-commons-remix::before { content: "=EF=93=AE"; }

.fa-creative-commons-sa::before { content: "=EF=93=AF"; }

.fa-creative-commons-sampling::before { content: "=EF=93=B0"; }

.fa-creative-commons-sampling-plus::before { content: "=EF=93=B1"; }

.fa-creative-commons-share::before { content: "=EF=93=B2"; }

.fa-creative-commons-zero::before { content: "=EF=93=B3"; }

.fa-credit-card::before { content: "=EF=82=9D"; }

.fa-critical-role::before { content: "=EF=9B=89"; }

.fa-crop::before { content: "=EF=84=A5"; }

.fa-crop-alt::before { content: "=EF=95=A5"; }

.fa-cross::before { content: "=EF=99=94"; }

.fa-crosshairs::before { content: "=EF=81=9B"; }

.fa-crow::before { content: "=EF=94=A0"; }

.fa-crown::before { content: "=EF=94=A1"; }

.fa-crutch::before { content: "=EF=9F=B7"; }

.fa-css3::before { content: "=EF=84=BC"; }

.fa-css3-alt::before { content: "=EF=8E=8B"; }

.fa-cube::before { content: "=EF=86=B2"; }

.fa-cubes::before { content: "=EF=86=B3"; }

.fa-cut::before { content: "=EF=83=84"; }

.fa-cuttlefish::before { content: "=EF=8E=8C"; }

.fa-d-and-d::before { content: "=EF=8E=8D"; }

.fa-d-and-d-beyond::before { content: "=EF=9B=8A"; }

.fa-dailymotion::before { content: "=EE=81=92"; }

.fa-dashcube::before { content: "=EF=88=90"; }

.fa-database::before { content: "=EF=87=80"; }

.fa-deaf::before { content: "=EF=8A=A4"; }

.fa-deezer::before { content: "=EE=81=B7"; }

.fa-delicious::before { content: "=EF=86=A5"; }

.fa-democrat::before { content: "=EF=9D=87"; }

.fa-deploydog::before { content: "=EF=8E=8E"; }

.fa-deskpro::before { content: "=EF=8E=8F"; }

.fa-desktop::before { content: "=EF=84=88"; }

.fa-dev::before { content: "=EF=9B=8C"; }

.fa-deviantart::before { content: "=EF=86=BD"; }

.fa-dharmachakra::before { content: "=EF=99=95"; }

.fa-dhl::before { content: "=EF=9E=90"; }

.fa-diagnoses::before { content: "=EF=91=B0"; }

.fa-diaspora::before { content: "=EF=9E=91"; }

.fa-dice::before { content: "=EF=94=A2"; }

.fa-dice-d20::before { content: "=EF=9B=8F"; }

.fa-dice-d6::before { content: "=EF=9B=91"; }

.fa-dice-five::before { content: "=EF=94=A3"; }

.fa-dice-four::before { content: "=EF=94=A4"; }

.fa-dice-one::before { content: "=EF=94=A5"; }

.fa-dice-six::before { content: "=EF=94=A6"; }

.fa-dice-three::before { content: "=EF=94=A7"; }

.fa-dice-two::before { content: "=EF=94=A8"; }

.fa-digg::before { content: "=EF=86=A6"; }

.fa-digital-ocean::before { content: "=EF=8E=91"; }

.fa-digital-tachograph::before { content: "=EF=95=A6"; }

.fa-directions::before { content: "=EF=97=AB"; }

.fa-discord::before { content: "=EF=8E=92"; }

.fa-discourse::before { content: "=EF=8E=93"; }

.fa-disease::before { content: "=EF=9F=BA"; }

.fa-divide::before { content: "=EF=94=A9"; }

.fa-dizzy::before { content: "=EF=95=A7"; }

.fa-dna::before { content: "=EF=91=B1"; }

.fa-dochub::before { content: "=EF=8E=94"; }

.fa-docker::before { content: "=EF=8E=95"; }

.fa-dog::before { content: "=EF=9B=93"; }

.fa-dollar-sign::before { content: "=EF=85=95"; }

.fa-dolly::before { content: "=EF=91=B2"; }

.fa-dolly-flatbed::before { content: "=EF=91=B4"; }

.fa-donate::before { content: "=EF=92=B9"; }

.fa-door-closed::before { content: "=EF=94=AA"; }

.fa-door-open::before { content: "=EF=94=AB"; }

.fa-dot-circle::before { content: "=EF=86=92"; }

.fa-dove::before { content: "=EF=92=BA"; }

.fa-download::before { content: "=EF=80=99"; }

.fa-draft2digital::before { content: "=EF=8E=96"; }

.fa-drafting-compass::before { content: "=EF=95=A8"; }

.fa-dragon::before { content: "=EF=9B=95"; }

.fa-draw-polygon::before { content: "=EF=97=AE"; }

.fa-dribbble::before { content: "=EF=85=BD"; }

.fa-dribbble-square::before { content: "=EF=8E=97"; }

.fa-dropbox::before { content: "=EF=85=AB"; }

.fa-drum::before { content: "=EF=95=A9"; }

.fa-drum-steelpan::before { content: "=EF=95=AA"; }

.fa-drumstick-bite::before { content: "=EF=9B=97"; }

.fa-drupal::before { content: "=EF=86=A9"; }

.fa-dumbbell::before { content: "=EF=91=8B"; }

.fa-dumpster::before { content: "=EF=9E=93"; }

.fa-dumpster-fire::before { content: "=EF=9E=94"; }

.fa-dungeon::before { content: "=EF=9B=99"; }

.fa-dyalog::before { content: "=EF=8E=99"; }

.fa-earlybirds::before { content: "=EF=8E=9A"; }

.fa-ebay::before { content: "=EF=93=B4"; }

.fa-edge::before { content: "=EF=8A=82"; }

.fa-edge-legacy::before { content: "=EE=81=B8"; }

.fa-edit::before { content: "=EF=81=84"; }

.fa-egg::before { content: "=EF=9F=BB"; }

.fa-eject::before { content: "=EF=81=92"; }

.fa-elementor::before { content: "=EF=90=B0"; }

.fa-ellipsis-h::before { content: "=EF=85=81"; }

.fa-ellipsis-v::before { content: "=EF=85=82"; }

.fa-ello::before { content: "=EF=97=B1"; }

.fa-ember::before { content: "=EF=90=A3"; }

.fa-empire::before { content: "=EF=87=91"; }

.fa-envelope::before { content: "=EF=83=A0"; }

.fa-envelope-open::before { content: "=EF=8A=B6"; }

.fa-envelope-open-text::before { content: "=EF=99=98"; }

.fa-envelope-square::before { content: "=EF=86=99"; }

.fa-envira::before { content: "=EF=8A=99"; }

.fa-equals::before { content: "=EF=94=AC"; }

.fa-eraser::before { content: "=EF=84=AD"; }

.fa-erlang::before { content: "=EF=8E=9D"; }

.fa-ethereum::before { content: "=EF=90=AE"; }

.fa-ethernet::before { content: "=EF=9E=96"; }

.fa-etsy::before { content: "=EF=8B=97"; }

.fa-euro-sign::before { content: "=EF=85=93"; }

.fa-evernote::before { content: "=EF=A0=B9"; }

.fa-exchange-alt::before { content: "=EF=8D=A2"; }

.fa-exclamation::before { content: "=EF=84=AA"; }

.fa-exclamation-circle::before { content: "=EF=81=AA"; }

.fa-exclamation-triangle::before { content: "=EF=81=B1"; }

.fa-expand::before { content: "=EF=81=A5"; }

.fa-expand-alt::before { content: "=EF=90=A4"; }

.fa-expand-arrows-alt::before { content: "=EF=8C=9E"; }

.fa-expeditedssl::before { content: "=EF=88=BE"; }

.fa-external-link-alt::before { content: "=EF=8D=9D"; }

.fa-external-link-square-alt::before { content: "=EF=8D=A0"; }

.fa-eye::before { content: "=EF=81=AE"; }

.fa-eye-dropper::before { content: "=EF=87=BB"; }

.fa-eye-slash::before { content: "=EF=81=B0"; }

.fa-facebook::before { content: "=EF=82=9A"; }

.fa-facebook-f::before { content: "=EF=8E=9E"; }

.fa-facebook-messenger::before { content: "=EF=8E=9F"; }

.fa-facebook-square::before { content: "=EF=82=82"; }

.fa-fan::before { content: "=EF=A1=A3"; }

.fa-fantasy-flight-games::before { content: "=EF=9B=9C"; }

.fa-fast-backward::before { content: "=EF=81=89"; }

.fa-fast-forward::before { content: "=EF=81=90"; }

.fa-faucet::before { content: "=EE=80=85"; }

.fa-fax::before { content: "=EF=86=AC"; }

.fa-feather::before { content: "=EF=94=AD"; }

.fa-feather-alt::before { content: "=EF=95=AB"; }

.fa-fedex::before { content: "=EF=9E=97"; }

.fa-fedora::before { content: "=EF=9E=98"; }

.fa-female::before { content: "=EF=86=82"; }

.fa-fighter-jet::before { content: "=EF=83=BB"; }

.fa-figma::before { content: "=EF=9E=99"; }

.fa-file::before { content: "=EF=85=9B"; }

.fa-file-alt::before { content: "=EF=85=9C"; }

.fa-file-archive::before { content: "=EF=87=86"; }

.fa-file-audio::before { content: "=EF=87=87"; }

.fa-file-code::before { content: "=EF=87=89"; }

.fa-file-contract::before { content: "=EF=95=AC"; }

.fa-file-csv::before { content: "=EF=9B=9D"; }

.fa-file-download::before { content: "=EF=95=AD"; }

.fa-file-excel::before { content: "=EF=87=83"; }

.fa-file-export::before { content: "=EF=95=AE"; }

.fa-file-image::before { content: "=EF=87=85"; }

.fa-file-import::before { content: "=EF=95=AF"; }

.fa-file-invoice::before { content: "=EF=95=B0"; }

.fa-file-invoice-dollar::before { content: "=EF=95=B1"; }

.fa-file-medical::before { content: "=EF=91=B7"; }

.fa-file-medical-alt::before { content: "=EF=91=B8"; }

.fa-file-pdf::before { content: "=EF=87=81"; }

.fa-file-powerpoint::before { content: "=EF=87=84"; }

.fa-file-prescription::before { content: "=EF=95=B2"; }

.fa-file-signature::before { content: "=EF=95=B3"; }

.fa-file-upload::before { content: "=EF=95=B4"; }

.fa-file-video::before { content: "=EF=87=88"; }

.fa-file-word::before { content: "=EF=87=82"; }

.fa-fill::before { content: "=EF=95=B5"; }

.fa-fill-drip::before { content: "=EF=95=B6"; }

.fa-film::before { content: "=EF=80=88"; }

.fa-filter::before { content: "=EF=82=B0"; }

.fa-fingerprint::before { content: "=EF=95=B7"; }

.fa-fire::before { content: "=EF=81=AD"; }

.fa-fire-alt::before { content: "=EF=9F=A4"; }

.fa-fire-extinguisher::before { content: "=EF=84=B4"; }

.fa-firefox::before { content: "=EF=89=A9"; }

.fa-firefox-browser::before { content: "=EE=80=87"; }

.fa-first-aid::before { content: "=EF=91=B9"; }

.fa-first-order::before { content: "=EF=8A=B0"; }

.fa-first-order-alt::before { content: "=EF=94=8A"; }

.fa-firstdraft::before { content: "=EF=8E=A1"; }

.fa-fish::before { content: "=EF=95=B8"; }

.fa-fist-raised::before { content: "=EF=9B=9E"; }

.fa-flag::before { content: "=EF=80=A4"; }

.fa-flag-checkered::before { content: "=EF=84=9E"; }

.fa-flag-usa::before { content: "=EF=9D=8D"; }

.fa-flask::before { content: "=EF=83=83"; }

.fa-flickr::before { content: "=EF=85=AE"; }

.fa-flipboard::before { content: "=EF=91=8D"; }

.fa-flushed::before { content: "=EF=95=B9"; }

.fa-fly::before { content: "=EF=90=97"; }

.fa-folder::before { content: "=EF=81=BB"; }

.fa-folder-minus::before { content: "=EF=99=9D"; }

.fa-folder-open::before { content: "=EF=81=BC"; }

.fa-folder-plus::before { content: "=EF=99=9E"; }

.fa-font::before { content: "=EF=80=B1"; }

.fa-font-awesome::before { content: "=EF=8A=B4"; }

.fa-font-awesome-alt::before { content: "=EF=8D=9C"; }

.fa-font-awesome-flag::before { content: "=EF=90=A5"; }

.fa-font-awesome-logo-full::before { content: "=EF=93=A6"; }

.fa-fonticons::before { content: "=EF=8A=80"; }

.fa-fonticons-fi::before { content: "=EF=8E=A2"; }

.fa-football-ball::before { content: "=EF=91=8E"; }

.fa-fort-awesome::before { content: "=EF=8A=86"; }

.fa-fort-awesome-alt::before { content: "=EF=8E=A3"; }

.fa-forumbee::before { content: "=EF=88=91"; }

.fa-forward::before { content: "=EF=81=8E"; }

.fa-foursquare::before { content: "=EF=86=80"; }

.fa-free-code-camp::before { content: "=EF=8B=85"; }

.fa-freebsd::before { content: "=EF=8E=A4"; }

.fa-frog::before { content: "=EF=94=AE"; }

.fa-frown::before { content: "=EF=84=99"; }

.fa-frown-open::before { content: "=EF=95=BA"; }

.fa-fulcrum::before { content: "=EF=94=8B"; }

.fa-funnel-dollar::before { content: "=EF=99=A2"; }

.fa-futbol::before { content: "=EF=87=A3"; }

.fa-galactic-republic::before { content: "=EF=94=8C"; }

.fa-galactic-senate::before { content: "=EF=94=8D"; }

.fa-gamepad::before { content: "=EF=84=9B"; }

.fa-gas-pump::before { content: "=EF=94=AF"; }

.fa-gavel::before { content: "=EF=83=A3"; }

.fa-gem::before { content: "=EF=8E=A5"; }

.fa-genderless::before { content: "=EF=88=AD"; }

.fa-get-pocket::before { content: "=EF=89=A5"; }

.fa-gg::before { content: "=EF=89=A0"; }

.fa-gg-circle::before { content: "=EF=89=A1"; }

.fa-ghost::before { content: "=EF=9B=A2"; }

.fa-gift::before { content: "=EF=81=AB"; }

.fa-gifts::before { content: "=EF=9E=9C"; }

.fa-git::before { content: "=EF=87=93"; }

.fa-git-alt::before { content: "=EF=A1=81"; }

.fa-git-square::before { content: "=EF=87=92"; }

.fa-github::before { content: "=EF=82=9B"; }

.fa-github-alt::before { content: "=EF=84=93"; }

.fa-github-square::before { content: "=EF=82=92"; }

.fa-gitkraken::before { content: "=EF=8E=A6"; }

.fa-gitlab::before { content: "=EF=8A=96"; }

.fa-gitter::before { content: "=EF=90=A6"; }

.fa-glass-cheers::before { content: "=EF=9E=9F"; }

.fa-glass-martini::before { content: "=EF=80=80"; }

.fa-glass-martini-alt::before { content: "=EF=95=BB"; }

.fa-glass-whiskey::before { content: "=EF=9E=A0"; }

.fa-glasses::before { content: "=EF=94=B0"; }

.fa-glide::before { content: "=EF=8A=A5"; }

.fa-glide-g::before { content: "=EF=8A=A6"; }

.fa-globe::before { content: "=EF=82=AC"; }

.fa-globe-africa::before { content: "=EF=95=BC"; }

.fa-globe-americas::before { content: "=EF=95=BD"; }

.fa-globe-asia::before { content: "=EF=95=BE"; }

.fa-globe-europe::before { content: "=EF=9E=A2"; }

.fa-gofore::before { content: "=EF=8E=A7"; }

.fa-golf-ball::before { content: "=EF=91=90"; }

.fa-goodreads::before { content: "=EF=8E=A8"; }

.fa-goodreads-g::before { content: "=EF=8E=A9"; }

.fa-google::before { content: "=EF=86=A0"; }

.fa-google-drive::before { content: "=EF=8E=AA"; }

.fa-google-pay::before { content: "=EE=81=B9"; }

.fa-google-play::before { content: "=EF=8E=AB"; }

.fa-google-plus::before { content: "=EF=8A=B3"; }

.fa-google-plus-g::before { content: "=EF=83=95"; }

.fa-google-plus-square::before { content: "=EF=83=94"; }

.fa-google-wallet::before { content: "=EF=87=AE"; }

.fa-gopuram::before { content: "=EF=99=A4"; }

.fa-graduation-cap::before { content: "=EF=86=9D"; }

.fa-gratipay::before { content: "=EF=86=84"; }

.fa-grav::before { content: "=EF=8B=96"; }

.fa-greater-than::before { content: "=EF=94=B1"; }

.fa-greater-than-equal::before { content: "=EF=94=B2"; }

.fa-grimace::before { content: "=EF=95=BF"; }

.fa-grin::before { content: "=EF=96=80"; }

.fa-grin-alt::before { content: "=EF=96=81"; }

.fa-grin-beam::before { content: "=EF=96=82"; }

.fa-grin-beam-sweat::before { content: "=EF=96=83"; }

.fa-grin-hearts::before { content: "=EF=96=84"; }

.fa-grin-squint::before { content: "=EF=96=85"; }

.fa-grin-squint-tears::before { content: "=EF=96=86"; }

.fa-grin-stars::before { content: "=EF=96=87"; }

.fa-grin-tears::before { content: "=EF=96=88"; }

.fa-grin-tongue::before { content: "=EF=96=89"; }

.fa-grin-tongue-squint::before { content: "=EF=96=8A"; }

.fa-grin-tongue-wink::before { content: "=EF=96=8B"; }

.fa-grin-wink::before { content: "=EF=96=8C"; }

.fa-grip-horizontal::before { content: "=EF=96=8D"; }

.fa-grip-lines::before { content: "=EF=9E=A4"; }

.fa-grip-lines-vertical::before { content: "=EF=9E=A5"; }

.fa-grip-vertical::before { content: "=EF=96=8E"; }

.fa-gripfire::before { content: "=EF=8E=AC"; }

.fa-grunt::before { content: "=EF=8E=AD"; }

.fa-guilded::before { content: "=EE=81=BE"; }

.fa-guitar::before { content: "=EF=9E=A6"; }

.fa-gulp::before { content: "=EF=8E=AE"; }

.fa-h-square::before { content: "=EF=83=BD"; }

.fa-hacker-news::before { content: "=EF=87=94"; }

.fa-hacker-news-square::before { content: "=EF=8E=AF"; }

.fa-hackerrank::before { content: "=EF=97=B7"; }

.fa-hamburger::before { content: "=EF=A0=85"; }

.fa-hammer::before { content: "=EF=9B=A3"; }

.fa-hamsa::before { content: "=EF=99=A5"; }

.fa-hand-holding::before { content: "=EF=92=BD"; }

.fa-hand-holding-heart::before { content: "=EF=92=BE"; }

.fa-hand-holding-medical::before { content: "=EE=81=9C"; }

.fa-hand-holding-usd::before { content: "=EF=93=80"; }

.fa-hand-holding-water::before { content: "=EF=93=81"; }

.fa-hand-lizard::before { content: "=EF=89=98"; }

.fa-hand-middle-finger::before { content: "=EF=A0=86"; }

.fa-hand-paper::before { content: "=EF=89=96"; }

.fa-hand-peace::before { content: "=EF=89=9B"; }

.fa-hand-point-down::before { content: "=EF=82=A7"; }

.fa-hand-point-left::before { content: "=EF=82=A5"; }

.fa-hand-point-right::before { content: "=EF=82=A4"; }

.fa-hand-point-up::before { content: "=EF=82=A6"; }

.fa-hand-pointer::before { content: "=EF=89=9A"; }

.fa-hand-rock::before { content: "=EF=89=95"; }

.fa-hand-scissors::before { content: "=EF=89=97"; }

.fa-hand-sparkles::before { content: "=EE=81=9D"; }

.fa-hand-spock::before { content: "=EF=89=99"; }

.fa-hands::before { content: "=EF=93=82"; }

.fa-hands-helping::before { content: "=EF=93=84"; }

.fa-hands-wash::before { content: "=EE=81=9E"; }

.fa-handshake::before { content: "=EF=8A=B5"; }

.fa-handshake-alt-slash::before { content: "=EE=81=9F"; }

.fa-handshake-slash::before { content: "=EE=81=A0"; }

.fa-hanukiah::before { content: "=EF=9B=A6"; }

.fa-hard-hat::before { content: "=EF=A0=87"; }

.fa-hashtag::before { content: "=EF=8A=92"; }

.fa-hat-cowboy::before { content: "=EF=A3=80"; }

.fa-hat-cowboy-side::before { content: "=EF=A3=81"; }

.fa-hat-wizard::before { content: "=EF=9B=A8"; }

.fa-hdd::before { content: "=EF=82=A0"; }

.fa-head-side-cough::before { content: "=EE=81=A1"; }

.fa-head-side-cough-slash::before { content: "=EE=81=A2"; }

.fa-head-side-mask::before { content: "=EE=81=A3"; }

.fa-head-side-virus::before { content: "=EE=81=A4"; }

.fa-heading::before { content: "=EF=87=9C"; }

.fa-headphones::before { content: "=EF=80=A5"; }

.fa-headphones-alt::before { content: "=EF=96=8F"; }

.fa-headset::before { content: "=EF=96=90"; }

.fa-heart::before { content: "=EF=80=84"; }

.fa-heart-broken::before { content: "=EF=9E=A9"; }

.fa-heartbeat::before { content: "=EF=88=9E"; }

.fa-helicopter::before { content: "=EF=94=B3"; }

.fa-highlighter::before { content: "=EF=96=91"; }

.fa-hiking::before { content: "=EF=9B=AC"; }

.fa-hippo::before { content: "=EF=9B=AD"; }

.fa-hips::before { content: "=EF=91=92"; }

.fa-hire-a-helper::before { content: "=EF=8E=B0"; }

.fa-history::before { content: "=EF=87=9A"; }

.fa-hive::before { content: "=EE=81=BF"; }

.fa-hockey-puck::before { content: "=EF=91=93"; }

.fa-holly-berry::before { content: "=EF=9E=AA"; }

.fa-home::before { content: "=EF=80=95"; }

.fa-hooli::before { content: "=EF=90=A7"; }

.fa-hornbill::before { content: "=EF=96=92"; }

.fa-horse::before { content: "=EF=9B=B0"; }

.fa-horse-head::before { content: "=EF=9E=AB"; }

.fa-hospital::before { content: "=EF=83=B8"; }

.fa-hospital-alt::before { content: "=EF=91=BD"; }

.fa-hospital-symbol::before { content: "=EF=91=BE"; }

.fa-hospital-user::before { content: "=EF=A0=8D"; }

.fa-hot-tub::before { content: "=EF=96=93"; }

.fa-hotdog::before { content: "=EF=A0=8F"; }

.fa-hotel::before { content: "=EF=96=94"; }

.fa-hotjar::before { content: "=EF=8E=B1"; }

.fa-hourglass::before { content: "=EF=89=94"; }

.fa-hourglass-end::before { content: "=EF=89=93"; }

.fa-hourglass-half::before { content: "=EF=89=92"; }

.fa-hourglass-start::before { content: "=EF=89=91"; }

.fa-house-damage::before { content: "=EF=9B=B1"; }

.fa-house-user::before { content: "=EE=81=A5"; }

.fa-houzz::before { content: "=EF=89=BC"; }

.fa-hryvnia::before { content: "=EF=9B=B2"; }

.fa-html5::before { content: "=EF=84=BB"; }

.fa-hubspot::before { content: "=EF=8E=B2"; }

.fa-i-cursor::before { content: "=EF=89=86"; }

.fa-ice-cream::before { content: "=EF=A0=90"; }

.fa-icicles::before { content: "=EF=9E=AD"; }

.fa-icons::before { content: "=EF=A1=AD"; }

.fa-id-badge::before { content: "=EF=8B=81"; }

.fa-id-card::before { content: "=EF=8B=82"; }

.fa-id-card-alt::before { content: "=EF=91=BF"; }

.fa-ideal::before { content: "=EE=80=93"; }

.fa-igloo::before { content: "=EF=9E=AE"; }

.fa-image::before { content: "=EF=80=BE"; }

.fa-images::before { content: "=EF=8C=82"; }

.fa-imdb::before { content: "=EF=8B=98"; }

.fa-inbox::before { content: "=EF=80=9C"; }

.fa-indent::before { content: "=EF=80=BC"; }

.fa-industry::before { content: "=EF=89=B5"; }

.fa-infinity::before { content: "=EF=94=B4"; }

.fa-info::before { content: "=EF=84=A9"; }

.fa-info-circle::before { content: "=EF=81=9A"; }

.fa-innosoft::before { content: "=EE=82=80"; }

.fa-instagram::before { content: "=EF=85=AD"; }

.fa-instagram-square::before { content: "=EE=81=95"; }

.fa-instalod::before { content: "=EE=82=81"; }

.fa-intercom::before { content: "=EF=9E=AF"; }

.fa-internet-explorer::before { content: "=EF=89=AB"; }

.fa-invision::before { content: "=EF=9E=B0"; }

.fa-ioxhost::before { content: "=EF=88=88"; }

.fa-italic::before { content: "=EF=80=B3"; }

.fa-itch-io::before { content: "=EF=A0=BA"; }

.fa-itunes::before { content: "=EF=8E=B4"; }

.fa-itunes-note::before { content: "=EF=8E=B5"; }

.fa-java::before { content: "=EF=93=A4"; }

.fa-jedi::before { content: "=EF=99=A9"; }

.fa-jedi-order::before { content: "=EF=94=8E"; }

.fa-jenkins::before { content: "=EF=8E=B6"; }

.fa-jira::before { content: "=EF=9E=B1"; }

.fa-joget::before { content: "=EF=8E=B7"; }

.fa-joint::before { content: "=EF=96=95"; }

.fa-joomla::before { content: "=EF=86=AA"; }

.fa-journal-whills::before { content: "=EF=99=AA"; }

.fa-js::before { content: "=EF=8E=B8"; }

.fa-js-square::before { content: "=EF=8E=B9"; }

.fa-jsfiddle::before { content: "=EF=87=8C"; }

.fa-kaaba::before { content: "=EF=99=AB"; }

.fa-kaggle::before { content: "=EF=97=BA"; }

.fa-key::before { content: "=EF=82=84"; }

.fa-keybase::before { content: "=EF=93=B5"; }

.fa-keyboard::before { content: "=EF=84=9C"; }

.fa-keycdn::before { content: "=EF=8E=BA"; }

.fa-khanda::before { content: "=EF=99=AD"; }

.fa-kickstarter::before { content: "=EF=8E=BB"; }

.fa-kickstarter-k::before { content: "=EF=8E=BC"; }

.fa-kiss::before { content: "=EF=96=96"; }

.fa-kiss-beam::before { content: "=EF=96=97"; }

.fa-kiss-wink-heart::before { content: "=EF=96=98"; }

.fa-kiwi-bird::before { content: "=EF=94=B5"; }

.fa-korvue::before { content: "=EF=90=AF"; }

.fa-landmark::before { content: "=EF=99=AF"; }

.fa-language::before { content: "=EF=86=AB"; }

.fa-laptop::before { content: "=EF=84=89"; }

.fa-laptop-code::before { content: "=EF=97=BC"; }

.fa-laptop-house::before { content: "=EE=81=A6"; }

.fa-laptop-medical::before { content: "=EF=A0=92"; }

.fa-laravel::before { content: "=EF=8E=BD"; }

.fa-lastfm::before { content: "=EF=88=82"; }

.fa-lastfm-square::before { content: "=EF=88=83"; }

.fa-laugh::before { content: "=EF=96=99"; }

.fa-laugh-beam::before { content: "=EF=96=9A"; }

.fa-laugh-squint::before { content: "=EF=96=9B"; }

.fa-laugh-wink::before { content: "=EF=96=9C"; }

.fa-layer-group::before { content: "=EF=97=BD"; }

.fa-leaf::before { content: "=EF=81=AC"; }

.fa-leanpub::before { content: "=EF=88=92"; }

.fa-lemon::before { content: "=EF=82=94"; }

.fa-less::before { content: "=EF=90=9D"; }

.fa-less-than::before { content: "=EF=94=B6"; }

.fa-less-than-equal::before { content: "=EF=94=B7"; }

.fa-level-down-alt::before { content: "=EF=8E=BE"; }

.fa-level-up-alt::before { content: "=EF=8E=BF"; }

.fa-life-ring::before { content: "=EF=87=8D"; }

.fa-lightbulb::before { content: "=EF=83=AB"; }

.fa-line::before { content: "=EF=8F=80"; }

.fa-link::before { content: "=EF=83=81"; }

.fa-linkedin::before { content: "=EF=82=8C"; }

.fa-linkedin-in::before { content: "=EF=83=A1"; }

.fa-linode::before { content: "=EF=8A=B8"; }

.fa-linux::before { content: "=EF=85=BC"; }

.fa-lira-sign::before { content: "=EF=86=95"; }

.fa-list::before { content: "=EF=80=BA"; }

.fa-list-alt::before { content: "=EF=80=A2"; }

.fa-list-ol::before { content: "=EF=83=8B"; }

.fa-list-ul::before { content: "=EF=83=8A"; }

.fa-location-arrow::before { content: "=EF=84=A4"; }

.fa-lock::before { content: "=EF=80=A3"; }

.fa-lock-open::before { content: "=EF=8F=81"; }

.fa-long-arrow-alt-down::before { content: "=EF=8C=89"; }

.fa-long-arrow-alt-left::before { content: "=EF=8C=8A"; }

.fa-long-arrow-alt-right::before { content: "=EF=8C=8B"; }

.fa-long-arrow-alt-up::before { content: "=EF=8C=8C"; }

.fa-low-vision::before { content: "=EF=8A=A8"; }

.fa-luggage-cart::before { content: "=EF=96=9D"; }

.fa-lungs::before { content: "=EF=98=84"; }

.fa-lungs-virus::before { content: "=EE=81=A7"; }

.fa-lyft::before { content: "=EF=8F=83"; }

.fa-magento::before { content: "=EF=8F=84"; }

.fa-magic::before { content: "=EF=83=90"; }

.fa-magnet::before { content: "=EF=81=B6"; }

.fa-mail-bulk::before { content: "=EF=99=B4"; }

.fa-mailchimp::before { content: "=EF=96=9E"; }

.fa-male::before { content: "=EF=86=83"; }

.fa-mandalorian::before { content: "=EF=94=8F"; }

.fa-map::before { content: "=EF=89=B9"; }

.fa-map-marked::before { content: "=EF=96=9F"; }

.fa-map-marked-alt::before { content: "=EF=96=A0"; }

.fa-map-marker::before { content: "=EF=81=81"; }

.fa-map-marker-alt::before { content: "=EF=8F=85"; }

.fa-map-pin::before { content: "=EF=89=B6"; }

.fa-map-signs::before { content: "=EF=89=B7"; }

.fa-markdown::before { content: "=EF=98=8F"; }

.fa-marker::before { content: "=EF=96=A1"; }

.fa-mars::before { content: "=EF=88=A2"; }

.fa-mars-double::before { content: "=EF=88=A7"; }

.fa-mars-stroke::before { content: "=EF=88=A9"; }

.fa-mars-stroke-h::before { content: "=EF=88=AB"; }

.fa-mars-stroke-v::before { content: "=EF=88=AA"; }

.fa-mask::before { content: "=EF=9B=BA"; }

.fa-mastodon::before { content: "=EF=93=B6"; }

.fa-maxcdn::before { content: "=EF=84=B6"; }

.fa-mdb::before { content: "=EF=A3=8A"; }

.fa-medal::before { content: "=EF=96=A2"; }

.fa-medapps::before { content: "=EF=8F=86"; }

.fa-medium::before { content: "=EF=88=BA"; }

.fa-medium-m::before { content: "=EF=8F=87"; }

.fa-medkit::before { content: "=EF=83=BA"; }

.fa-medrt::before { content: "=EF=8F=88"; }

.fa-meetup::before { content: "=EF=8B=A0"; }

.fa-megaport::before { content: "=EF=96=A3"; }

.fa-meh::before { content: "=EF=84=9A"; }

.fa-meh-blank::before { content: "=EF=96=A4"; }

.fa-meh-rolling-eyes::before { content: "=EF=96=A5"; }

.fa-memory::before { content: "=EF=94=B8"; }

.fa-mendeley::before { content: "=EF=9E=B3"; }

.fa-menorah::before { content: "=EF=99=B6"; }

.fa-mercury::before { content: "=EF=88=A3"; }

.fa-meteor::before { content: "=EF=9D=93"; }

.fa-microblog::before { content: "=EE=80=9A"; }

.fa-microchip::before { content: "=EF=8B=9B"; }

.fa-microphone::before { content: "=EF=84=B0"; }

.fa-microphone-alt::before { content: "=EF=8F=89"; }

.fa-microphone-alt-slash::before { content: "=EF=94=B9"; }

.fa-microphone-slash::before { content: "=EF=84=B1"; }

.fa-microscope::before { content: "=EF=98=90"; }

.fa-microsoft::before { content: "=EF=8F=8A"; }

.fa-minus::before { content: "=EF=81=A8"; }

.fa-minus-circle::before { content: "=EF=81=96"; }

.fa-minus-square::before { content: "=EF=85=86"; }

.fa-mitten::before { content: "=EF=9E=B5"; }

.fa-mix::before { content: "=EF=8F=8B"; }

.fa-mixcloud::before { content: "=EF=8A=89"; }

.fa-mixer::before { content: "=EE=81=96"; }

.fa-mizuni::before { content: "=EF=8F=8C"; }

.fa-mobile::before { content: "=EF=84=8B"; }

.fa-mobile-alt::before { content: "=EF=8F=8D"; }

.fa-modx::before { content: "=EF=8A=85"; }

.fa-monero::before { content: "=EF=8F=90"; }

.fa-money-bill::before { content: "=EF=83=96"; }

.fa-money-bill-alt::before { content: "=EF=8F=91"; }

.fa-money-bill-wave::before { content: "=EF=94=BA"; }

.fa-money-bill-wave-alt::before { content: "=EF=94=BB"; }

.fa-money-check::before { content: "=EF=94=BC"; }

.fa-money-check-alt::before { content: "=EF=94=BD"; }

.fa-monument::before { content: "=EF=96=A6"; }

.fa-moon::before { content: "=EF=86=86"; }

.fa-mortar-pestle::before { content: "=EF=96=A7"; }

.fa-mosque::before { content: "=EF=99=B8"; }

.fa-motorcycle::before { content: "=EF=88=9C"; }

.fa-mountain::before { content: "=EF=9B=BC"; }

.fa-mouse::before { content: "=EF=A3=8C"; }

.fa-mouse-pointer::before { content: "=EF=89=85"; }

.fa-mug-hot::before { content: "=EF=9E=B6"; }

.fa-music::before { content: "=EF=80=81"; }

.fa-napster::before { content: "=EF=8F=92"; }

.fa-neos::before { content: "=EF=98=92"; }

.fa-network-wired::before { content: "=EF=9B=BF"; }

.fa-neuter::before { content: "=EF=88=AC"; }

.fa-newspaper::before { content: "=EF=87=AA"; }

.fa-nimblr::before { content: "=EF=96=A8"; }

.fa-node::before { content: "=EF=90=99"; }

.fa-node-js::before { content: "=EF=8F=93"; }

.fa-not-equal::before { content: "=EF=94=BE"; }

.fa-notes-medical::before { content: "=EF=92=81"; }

.fa-npm::before { content: "=EF=8F=94"; }

.fa-ns8::before { content: "=EF=8F=95"; }

.fa-nutritionix::before { content: "=EF=8F=96"; }

.fa-object-group::before { content: "=EF=89=87"; }

.fa-object-ungroup::before { content: "=EF=89=88"; }

.fa-octopus-deploy::before { content: "=EE=82=82"; }

.fa-odnoklassniki::before { content: "=EF=89=A3"; }

.fa-odnoklassniki-square::before { content: "=EF=89=A4"; }

.fa-oil-can::before { content: "=EF=98=93"; }

.fa-old-republic::before { content: "=EF=94=90"; }

.fa-om::before { content: "=EF=99=B9"; }

.fa-opencart::before { content: "=EF=88=BD"; }

.fa-openid::before { content: "=EF=86=9B"; }

.fa-opera::before { content: "=EF=89=AA"; }

.fa-optin-monster::before { content: "=EF=88=BC"; }

.fa-orcid::before { content: "=EF=A3=92"; }

.fa-osi::before { content: "=EF=90=9A"; }

.fa-otter::before { content: "=EF=9C=80"; }

.fa-outdent::before { content: "=EF=80=BB"; }

.fa-page4::before { content: "=EF=8F=97"; }

.fa-pagelines::before { content: "=EF=86=8C"; }

.fa-pager::before { content: "=EF=A0=95"; }

.fa-paint-brush::before { content: "=EF=87=BC"; }

.fa-paint-roller::before { content: "=EF=96=AA"; }

.fa-palette::before { content: "=EF=94=BF"; }

.fa-palfed::before { content: "=EF=8F=98"; }

.fa-pallet::before { content: "=EF=92=82"; }

.fa-paper-plane::before { content: "=EF=87=98"; }

.fa-paperclip::before { content: "=EF=83=86"; }

.fa-parachute-box::before { content: "=EF=93=8D"; }

.fa-paragraph::before { content: "=EF=87=9D"; }

.fa-parking::before { content: "=EF=95=80"; }

.fa-passport::before { content: "=EF=96=AB"; }

.fa-pastafarianism::before { content: "=EF=99=BB"; }

.fa-paste::before { content: "=EF=83=AA"; }

.fa-patreon::before { content: "=EF=8F=99"; }

.fa-pause::before { content: "=EF=81=8C"; }

.fa-pause-circle::before { content: "=EF=8A=8B"; }

.fa-paw::before { content: "=EF=86=B0"; }

.fa-paypal::before { content: "=EF=87=AD"; }

.fa-peace::before { content: "=EF=99=BC"; }

.fa-pen::before { content: "=EF=8C=84"; }

.fa-pen-alt::before { content: "=EF=8C=85"; }

.fa-pen-fancy::before { content: "=EF=96=AC"; }

.fa-pen-nib::before { content: "=EF=96=AD"; }

.fa-pen-square::before { content: "=EF=85=8B"; }

.fa-pencil-alt::before { content: "=EF=8C=83"; }

.fa-pencil-ruler::before { content: "=EF=96=AE"; }

.fa-penny-arcade::before { content: "=EF=9C=84"; }

.fa-people-arrows::before { content: "=EE=81=A8"; }

.fa-people-carry::before { content: "=EF=93=8E"; }

.fa-pepper-hot::before { content: "=EF=A0=96"; }

.fa-perbyte::before { content: "=EE=82=83"; }

.fa-percent::before { content: "=EF=8A=95"; }

.fa-percentage::before { content: "=EF=95=81"; }

.fa-periscope::before { content: "=EF=8F=9A"; }

.fa-person-booth::before { content: "=EF=9D=96"; }

.fa-phabricator::before { content: "=EF=8F=9B"; }

.fa-phoenix-framework::before { content: "=EF=8F=9C"; }

.fa-phoenix-squadron::before { content: "=EF=94=91"; }

.fa-phone::before { content: "=EF=82=95"; }

.fa-phone-alt::before { content: "=EF=A1=B9"; }

.fa-phone-slash::before { content: "=EF=8F=9D"; }

.fa-phone-square::before { content: "=EF=82=98"; }

.fa-phone-square-alt::before { content: "=EF=A1=BB"; }

.fa-phone-volume::before { content: "=EF=8A=A0"; }

.fa-photo-video::before { content: "=EF=A1=BC"; }

.fa-php::before { content: "=EF=91=97"; }

.fa-pied-piper::before { content: "=EF=8A=AE"; }

.fa-pied-piper-alt::before { content: "=EF=86=A8"; }

.fa-pied-piper-hat::before { content: "=EF=93=A5"; }

.fa-pied-piper-pp::before { content: "=EF=86=A7"; }

.fa-pied-piper-square::before { content: "=EE=80=9E"; }

.fa-piggy-bank::before { content: "=EF=93=93"; }

.fa-pills::before { content: "=EF=92=84"; }

.fa-pinterest::before { content: "=EF=83=92"; }

.fa-pinterest-p::before { content: "=EF=88=B1"; }

.fa-pinterest-square::before { content: "=EF=83=93"; }

.fa-pizza-slice::before { content: "=EF=A0=98"; }

.fa-place-of-worship::before { content: "=EF=99=BF"; }

.fa-plane::before { content: "=EF=81=B2"; }

.fa-plane-arrival::before { content: "=EF=96=AF"; }

.fa-plane-departure::before { content: "=EF=96=B0"; }

.fa-plane-slash::before { content: "=EE=81=A9"; }

.fa-play::before { content: "=EF=81=8B"; }

.fa-play-circle::before { content: "=EF=85=84"; }

.fa-playstation::before { content: "=EF=8F=9F"; }

.fa-plug::before { content: "=EF=87=A6"; }

.fa-plus::before { content: "=EF=81=A7"; }

.fa-plus-circle::before { content: "=EF=81=95"; }

.fa-plus-square::before { content: "=EF=83=BE"; }

.fa-podcast::before { content: "=EF=8B=8E"; }

.fa-poll::before { content: "=EF=9A=81"; }

.fa-poll-h::before { content: "=EF=9A=82"; }

.fa-poo::before { content: "=EF=8B=BE"; }

.fa-poo-storm::before { content: "=EF=9D=9A"; }

.fa-poop::before { content: "=EF=98=99"; }

.fa-portrait::before { content: "=EF=8F=A0"; }

.fa-pound-sign::before { content: "=EF=85=94"; }

.fa-power-off::before { content: "=EF=80=91"; }

.fa-pray::before { content: "=EF=9A=83"; }

.fa-praying-hands::before { content: "=EF=9A=84"; }

.fa-prescription::before { content: "=EF=96=B1"; }

.fa-prescription-bottle::before { content: "=EF=92=85"; }

.fa-prescription-bottle-alt::before { content: "=EF=92=86"; }

.fa-print::before { content: "=EF=80=AF"; }

.fa-procedures::before { content: "=EF=92=87"; }

.fa-product-hunt::before { content: "=EF=8A=88"; }

.fa-project-diagram::before { content: "=EF=95=82"; }

.fa-pump-medical::before { content: "=EE=81=AA"; }

.fa-pump-soap::before { content: "=EE=81=AB"; }

.fa-pushed::before { content: "=EF=8F=A1"; }

.fa-puzzle-piece::before { content: "=EF=84=AE"; }

.fa-python::before { content: "=EF=8F=A2"; }

.fa-qq::before { content: "=EF=87=96"; }

.fa-qrcode::before { content: "=EF=80=A9"; }

.fa-question::before { content: "=EF=84=A8"; }

.fa-question-circle::before { content: "=EF=81=99"; }

.fa-quidditch::before { content: "=EF=91=98"; }

.fa-quinscape::before { content: "=EF=91=99"; }

.fa-quora::before { content: "=EF=8B=84"; }

.fa-quote-left::before { content: "=EF=84=8D"; }

.fa-quote-right::before { content: "=EF=84=8E"; }

.fa-quran::before { content: "=EF=9A=87"; }

.fa-r-project::before { content: "=EF=93=B7"; }

.fa-radiation::before { content: "=EF=9E=B9"; }

.fa-radiation-alt::before { content: "=EF=9E=BA"; }

.fa-rainbow::before { content: "=EF=9D=9B"; }

.fa-random::before { content: "=EF=81=B4"; }

.fa-raspberry-pi::before { content: "=EF=9E=BB"; }

.fa-ravelry::before { content: "=EF=8B=99"; }

.fa-react::before { content: "=EF=90=9B"; }

.fa-reacteurope::before { content: "=EF=9D=9D"; }

.fa-readme::before { content: "=EF=93=95"; }

.fa-rebel::before { content: "=EF=87=90"; }

.fa-receipt::before { content: "=EF=95=83"; }

.fa-record-vinyl::before { content: "=EF=A3=99"; }

.fa-recycle::before { content: "=EF=86=B8"; }

.fa-red-river::before { content: "=EF=8F=A3"; }

.fa-reddit::before { content: "=EF=86=A1"; }

.fa-reddit-alien::before { content: "=EF=8A=81"; }

.fa-reddit-square::before { content: "=EF=86=A2"; }

.fa-redhat::before { content: "=EF=9E=BC"; }

.fa-redo::before { content: "=EF=80=9E"; }

.fa-redo-alt::before { content: "=EF=8B=B9"; }

.fa-registered::before { content: "=EF=89=9D"; }

.fa-remove-format::before { content: "=EF=A1=BD"; }

.fa-renren::before { content: "=EF=86=8B"; }

.fa-reply::before { content: "=EF=8F=A5"; }

.fa-reply-all::before { content: "=EF=84=A2"; }

.fa-replyd::before { content: "=EF=8F=A6"; }

.fa-republican::before { content: "=EF=9D=9E"; }

.fa-researchgate::before { content: "=EF=93=B8"; }

.fa-resolving::before { content: "=EF=8F=A7"; }

.fa-restroom::before { content: "=EF=9E=BD"; }

.fa-retweet::before { content: "=EF=81=B9"; }

.fa-rev::before { content: "=EF=96=B2"; }

.fa-ribbon::before { content: "=EF=93=96"; }

.fa-ring::before { content: "=EF=9C=8B"; }

.fa-road::before { content: "=EF=80=98"; }

.fa-robot::before { content: "=EF=95=84"; }

.fa-rocket::before { content: "=EF=84=B5"; }

.fa-rocketchat::before { content: "=EF=8F=A8"; }

.fa-rockrms::before { content: "=EF=8F=A9"; }

.fa-route::before { content: "=EF=93=97"; }

.fa-rss::before { content: "=EF=82=9E"; }

.fa-rss-square::before { content: "=EF=85=83"; }

.fa-ruble-sign::before { content: "=EF=85=98"; }

.fa-ruler::before { content: "=EF=95=85"; }

.fa-ruler-combined::before { content: "=EF=95=86"; }

.fa-ruler-horizontal::before { content: "=EF=95=87"; }

.fa-ruler-vertical::before { content: "=EF=95=88"; }

.fa-running::before { content: "=EF=9C=8C"; }

.fa-rupee-sign::before { content: "=EF=85=96"; }

.fa-rust::before { content: "=EE=81=BA"; }

.fa-sad-cry::before { content: "=EF=96=B3"; }

.fa-sad-tear::before { content: "=EF=96=B4"; }

.fa-safari::before { content: "=EF=89=A7"; }

.fa-salesforce::before { content: "=EF=A0=BB"; }

.fa-sass::before { content: "=EF=90=9E"; }

.fa-satellite::before { content: "=EF=9E=BF"; }

.fa-satellite-dish::before { content: "=EF=9F=80"; }

.fa-save::before { content: "=EF=83=87"; }

.fa-schlix::before { content: "=EF=8F=AA"; }

.fa-school::before { content: "=EF=95=89"; }

.fa-screwdriver::before { content: "=EF=95=8A"; }

.fa-scribd::before { content: "=EF=8A=8A"; }

.fa-scroll::before { content: "=EF=9C=8E"; }

.fa-sd-card::before { content: "=EF=9F=82"; }

.fa-search::before { content: "=EF=80=82"; }

.fa-search-dollar::before { content: "=EF=9A=88"; }

.fa-search-location::before { content: "=EF=9A=89"; }

.fa-search-minus::before { content: "=EF=80=90"; }

.fa-search-plus::before { content: "=EF=80=8E"; }

.fa-searchengin::before { content: "=EF=8F=AB"; }

.fa-seedling::before { content: "=EF=93=98"; }

.fa-sellcast::before { content: "=EF=8B=9A"; }

.fa-sellsy::before { content: "=EF=88=93"; }

.fa-server::before { content: "=EF=88=B3"; }

.fa-servicestack::before { content: "=EF=8F=AC"; }

.fa-shapes::before { content: "=EF=98=9F"; }

.fa-share::before { content: "=EF=81=A4"; }

.fa-share-alt::before { content: "=EF=87=A0"; }

.fa-share-alt-square::before { content: "=EF=87=A1"; }

.fa-share-square::before { content: "=EF=85=8D"; }

.fa-shekel-sign::before { content: "=EF=88=8B"; }

.fa-shield-alt::before { content: "=EF=8F=AD"; }

.fa-shield-virus::before { content: "=EE=81=AC"; }

.fa-ship::before { content: "=EF=88=9A"; }

.fa-shipping-fast::before { content: "=EF=92=8B"; }

.fa-shirtsinbulk::before { content: "=EF=88=94"; }

.fa-shoe-prints::before { content: "=EF=95=8B"; }

.fa-shopify::before { content: "=EE=81=97"; }

.fa-shopping-bag::before { content: "=EF=8A=90"; }

.fa-shopping-basket::before { content: "=EF=8A=91"; }

.fa-shopping-cart::before { content: "=EF=81=BA"; }

.fa-shopware::before { content: "=EF=96=B5"; }

.fa-shower::before { content: "=EF=8B=8C"; }

.fa-shuttle-van::before { content: "=EF=96=B6"; }

.fa-sign::before { content: "=EF=93=99"; }

.fa-sign-in-alt::before { content: "=EF=8B=B6"; }

.fa-sign-language::before { content: "=EF=8A=A7"; }

.fa-sign-out-alt::before { content: "=EF=8B=B5"; }

.fa-signal::before { content: "=EF=80=92"; }

.fa-signature::before { content: "=EF=96=B7"; }

.fa-sim-card::before { content: "=EF=9F=84"; }

.fa-simplybuilt::before { content: "=EF=88=95"; }

.fa-sink::before { content: "=EE=81=AD"; }

.fa-sistrix::before { content: "=EF=8F=AE"; }

.fa-sitemap::before { content: "=EF=83=A8"; }

.fa-sith::before { content: "=EF=94=92"; }

.fa-skating::before { content: "=EF=9F=85"; }

.fa-sketch::before { content: "=EF=9F=86"; }

.fa-skiing::before { content: "=EF=9F=89"; }

.fa-skiing-nordic::before { content: "=EF=9F=8A"; }

.fa-skull::before { content: "=EF=95=8C"; }

.fa-skull-crossbones::before { content: "=EF=9C=94"; }

.fa-skyatlas::before { content: "=EF=88=96"; }

.fa-skype::before { content: "=EF=85=BE"; }

.fa-slack::before { content: "=EF=86=98"; }

.fa-slack-hash::before { content: "=EF=8F=AF"; }

.fa-slash::before { content: "=EF=9C=95"; }

.fa-sleigh::before { content: "=EF=9F=8C"; }

.fa-sliders-h::before { content: "=EF=87=9E"; }

.fa-slideshare::before { content: "=EF=87=A7"; }

.fa-smile::before { content: "=EF=84=98"; }

.fa-smile-beam::before { content: "=EF=96=B8"; }

.fa-smile-wink::before { content: "=EF=93=9A"; }

.fa-smog::before { content: "=EF=9D=9F"; }

.fa-smoking::before { content: "=EF=92=8D"; }

.fa-smoking-ban::before { content: "=EF=95=8D"; }

.fa-sms::before { content: "=EF=9F=8D"; }

.fa-snapchat::before { content: "=EF=8A=AB"; }

.fa-snapchat-ghost::before { content: "=EF=8A=AC"; }

.fa-snapchat-square::before { content: "=EF=8A=AD"; }

.fa-snowboarding::before { content: "=EF=9F=8E"; }

.fa-snowflake::before { content: "=EF=8B=9C"; }

.fa-snowman::before { content: "=EF=9F=90"; }

.fa-snowplow::before { content: "=EF=9F=92"; }

.fa-soap::before { content: "=EE=81=AE"; }

.fa-socks::before { content: "=EF=9A=96"; }

.fa-solar-panel::before { content: "=EF=96=BA"; }

.fa-sort::before { content: "=EF=83=9C"; }

.fa-sort-alpha-down::before { content: "=EF=85=9D"; }

.fa-sort-alpha-down-alt::before { content: "=EF=A2=81"; }

.fa-sort-alpha-up::before { content: "=EF=85=9E"; }

.fa-sort-alpha-up-alt::before { content: "=EF=A2=82"; }

.fa-sort-amount-down::before { content: "=EF=85=A0"; }

.fa-sort-amount-down-alt::before { content: "=EF=A2=84"; }

.fa-sort-amount-up::before { content: "=EF=85=A1"; }

.fa-sort-amount-up-alt::before { content: "=EF=A2=85"; }

.fa-sort-down::before { content: "=EF=83=9D"; }

.fa-sort-numeric-down::before { content: "=EF=85=A2"; }

.fa-sort-numeric-down-alt::before { content: "=EF=A2=86"; }

.fa-sort-numeric-up::before { content: "=EF=85=A3"; }

.fa-sort-numeric-up-alt::before { content: "=EF=A2=87"; }

.fa-sort-up::before { content: "=EF=83=9E"; }

.fa-soundcloud::before { content: "=EF=86=BE"; }

.fa-sourcetree::before { content: "=EF=9F=93"; }

.fa-spa::before { content: "=EF=96=BB"; }

.fa-space-shuttle::before { content: "=EF=86=97"; }

.fa-speakap::before { content: "=EF=8F=B3"; }

.fa-speaker-deck::before { content: "=EF=A0=BC"; }

.fa-spell-check::before { content: "=EF=A2=91"; }

.fa-spider::before { content: "=EF=9C=97"; }

.fa-spinner::before { content: "=EF=84=90"; }

.fa-splotch::before { content: "=EF=96=BC"; }

.fa-spotify::before { content: "=EF=86=BC"; }

.fa-spray-can::before { content: "=EF=96=BD"; }

.fa-square::before { content: "=EF=83=88"; }

.fa-square-full::before { content: "=EF=91=9C"; }

.fa-square-root-alt::before { content: "=EF=9A=98"; }

.fa-squarespace::before { content: "=EF=96=BE"; }

.fa-stack-exchange::before { content: "=EF=86=8D"; }

.fa-stack-overflow::before { content: "=EF=85=AC"; }

.fa-stackpath::before { content: "=EF=A1=82"; }

.fa-stamp::before { content: "=EF=96=BF"; }

.fa-star::before { content: "=EF=80=85"; }

.fa-star-and-crescent::before { content: "=EF=9A=99"; }

.fa-star-half::before { content: "=EF=82=89"; }

.fa-star-half-alt::before { content: "=EF=97=80"; }

.fa-star-of-david::before { content: "=EF=9A=9A"; }

.fa-star-of-life::before { content: "=EF=98=A1"; }

.fa-staylinked::before { content: "=EF=8F=B5"; }

.fa-steam::before { content: "=EF=86=B6"; }

.fa-steam-square::before { content: "=EF=86=B7"; }

.fa-steam-symbol::before { content: "=EF=8F=B6"; }

.fa-step-backward::before { content: "=EF=81=88"; }

.fa-step-forward::before { content: "=EF=81=91"; }

.fa-stethoscope::before { content: "=EF=83=B1"; }

.fa-sticker-mule::before { content: "=EF=8F=B7"; }

.fa-sticky-note::before { content: "=EF=89=89"; }

.fa-stop::before { content: "=EF=81=8D"; }

.fa-stop-circle::before { content: "=EF=8A=8D"; }

.fa-stopwatch::before { content: "=EF=8B=B2"; }

.fa-stopwatch-20::before { content: "=EE=81=AF"; }

.fa-store::before { content: "=EF=95=8E"; }

.fa-store-alt::before { content: "=EF=95=8F"; }

.fa-store-alt-slash::before { content: "=EE=81=B0"; }

.fa-store-slash::before { content: "=EE=81=B1"; }

.fa-strava::before { content: "=EF=90=A8"; }

.fa-stream::before { content: "=EF=95=90"; }

.fa-street-view::before { content: "=EF=88=9D"; }

.fa-strikethrough::before { content: "=EF=83=8C"; }

.fa-stripe::before { content: "=EF=90=A9"; }

.fa-stripe-s::before { content: "=EF=90=AA"; }

.fa-stroopwafel::before { content: "=EF=95=91"; }

.fa-studiovinari::before { content: "=EF=8F=B8"; }

.fa-stumbleupon::before { content: "=EF=86=A4"; }

.fa-stumbleupon-circle::before { content: "=EF=86=A3"; }

.fa-subscript::before { content: "=EF=84=AC"; }

.fa-subway::before { content: "=EF=88=B9"; }

.fa-suitcase::before { content: "=EF=83=B2"; }

.fa-suitcase-rolling::before { content: "=EF=97=81"; }

.fa-sun::before { content: "=EF=86=85"; }

.fa-superpowers::before { content: "=EF=8B=9D"; }

.fa-superscript::before { content: "=EF=84=AB"; }

.fa-supple::before { content: "=EF=8F=B9"; }

.fa-surprise::before { content: "=EF=97=82"; }

.fa-suse::before { content: "=EF=9F=96"; }

.fa-swatchbook::before { content: "=EF=97=83"; }

.fa-swift::before { content: "=EF=A3=A1"; }

.fa-swimmer::before { content: "=EF=97=84"; }

.fa-swimming-pool::before { content: "=EF=97=85"; }

.fa-symfony::before { content: "=EF=A0=BD"; }

.fa-synagogue::before { content: "=EF=9A=9B"; }

.fa-sync::before { content: "=EF=80=A1"; }

.fa-sync-alt::before { content: "=EF=8B=B1"; }

.fa-syringe::before { content: "=EF=92=8E"; }

.fa-table::before { content: "=EF=83=8E"; }

.fa-table-tennis::before { content: "=EF=91=9D"; }

.fa-tablet::before { content: "=EF=84=8A"; }

.fa-tablet-alt::before { content: "=EF=8F=BA"; }

.fa-tablets::before { content: "=EF=92=90"; }

.fa-tachometer-alt::before { content: "=EF=8F=BD"; }

.fa-tag::before { content: "=EF=80=AB"; }

.fa-tags::before { content: "=EF=80=AC"; }

.fa-tape::before { content: "=EF=93=9B"; }

.fa-tasks::before { content: "=EF=82=AE"; }

.fa-taxi::before { content: "=EF=86=BA"; }

.fa-teamspeak::before { content: "=EF=93=B9"; }

.fa-teeth::before { content: "=EF=98=AE"; }

.fa-teeth-open::before { content: "=EF=98=AF"; }

.fa-telegram::before { content: "=EF=8B=86"; }

.fa-telegram-plane::before { content: "=EF=8F=BE"; }

.fa-temperature-high::before { content: "=EF=9D=A9"; }

.fa-temperature-low::before { content: "=EF=9D=AB"; }

.fa-tencent-weibo::before { content: "=EF=87=95"; }

.fa-tenge::before { content: "=EF=9F=97"; }

.fa-terminal::before { content: "=EF=84=A0"; }

.fa-text-height::before { content: "=EF=80=B4"; }

.fa-text-width::before { content: "=EF=80=B5"; }

.fa-th::before { content: "=EF=80=8A"; }

.fa-th-large::before { content: "=EF=80=89"; }

.fa-th-list::before { content: "=EF=80=8B"; }

.fa-the-red-yeti::before { content: "=EF=9A=9D"; }

.fa-theater-masks::before { content: "=EF=98=B0"; }

.fa-themeco::before { content: "=EF=97=86"; }

.fa-themeisle::before { content: "=EF=8A=B2"; }

.fa-thermometer::before { content: "=EF=92=91"; }

.fa-thermometer-empty::before { content: "=EF=8B=8B"; }

.fa-thermometer-full::before { content: "=EF=8B=87"; }

.fa-thermometer-half::before { content: "=EF=8B=89"; }

.fa-thermometer-quarter::before { content: "=EF=8B=8A"; }

.fa-thermometer-three-quarters::before { content: "=EF=8B=88"; }

.fa-think-peaks::before { content: "=EF=9C=B1"; }

.fa-thumbs-down::before { content: "=EF=85=A5"; }

.fa-thumbs-up::before { content: "=EF=85=A4"; }

.fa-thumbtack::before { content: "=EF=82=8D"; }

.fa-ticket-alt::before { content: "=EF=8F=BF"; }

.fa-tiktok::before { content: "=EE=81=BB"; }

.fa-times::before { content: "=EF=80=8D"; }

.fa-times-circle::before { content: "=EF=81=97"; }

.fa-tint::before { content: "=EF=81=83"; }

.fa-tint-slash::before { content: "=EF=97=87"; }

.fa-tired::before { content: "=EF=97=88"; }

.fa-toggle-off::before { content: "=EF=88=84"; }

.fa-toggle-on::before { content: "=EF=88=85"; }

.fa-toilet::before { content: "=EF=9F=98"; }

.fa-toilet-paper::before { content: "=EF=9C=9E"; }

.fa-toilet-paper-slash::before { content: "=EE=81=B2"; }

.fa-toolbox::before { content: "=EF=95=92"; }

.fa-tools::before { content: "=EF=9F=99"; }

.fa-tooth::before { content: "=EF=97=89"; }

.fa-torah::before { content: "=EF=9A=A0"; }

.fa-torii-gate::before { content: "=EF=9A=A1"; }

.fa-tractor::before { content: "=EF=9C=A2"; }

.fa-trade-federation::before { content: "=EF=94=93"; }

.fa-trademark::before { content: "=EF=89=9C"; }

.fa-traffic-light::before { content: "=EF=98=B7"; }

.fa-trailer::before { content: "=EE=81=81"; }

.fa-train::before { content: "=EF=88=B8"; }

.fa-tram::before { content: "=EF=9F=9A"; }

.fa-transgender::before { content: "=EF=88=A4"; }

.fa-transgender-alt::before { content: "=EF=88=A5"; }

.fa-trash::before { content: "=EF=87=B8"; }

.fa-trash-alt::before { content: "=EF=8B=AD"; }

.fa-trash-restore::before { content: "=EF=A0=A9"; }

.fa-trash-restore-alt::before { content: "=EF=A0=AA"; }

.fa-tree::before { content: "=EF=86=BB"; }

.fa-trello::before { content: "=EF=86=81"; }

.fa-tripadvisor::before { content: "=EF=89=A2"; }

.fa-trophy::before { content: "=EF=82=91"; }

.fa-truck::before { content: "=EF=83=91"; }

.fa-truck-loading::before { content: "=EF=93=9E"; }

.fa-truck-monster::before { content: "=EF=98=BB"; }

.fa-truck-moving::before { content: "=EF=93=9F"; }

.fa-truck-pickup::before { content: "=EF=98=BC"; }

.fa-tshirt::before { content: "=EF=95=93"; }

.fa-tty::before { content: "=EF=87=A4"; }

.fa-tumblr::before { content: "=EF=85=B3"; }

.fa-tumblr-square::before { content: "=EF=85=B4"; }

.fa-tv::before { content: "=EF=89=AC"; }

.fa-twitch::before { content: "=EF=87=A8"; }

.fa-twitter::before { content: "=EF=82=99"; }

.fa-twitter-square::before { content: "=EF=82=81"; }

.fa-typo3::before { content: "=EF=90=AB"; }

.fa-uber::before { content: "=EF=90=82"; }

.fa-ubuntu::before { content: "=EF=9F=9F"; }

.fa-uikit::before { content: "=EF=90=83"; }

.fa-umbraco::before { content: "=EF=A3=A8"; }

.fa-umbrella::before { content: "=EF=83=A9"; }

.fa-umbrella-beach::before { content: "=EF=97=8A"; }

.fa-uncharted::before { content: "=EE=82=84"; }

.fa-underline::before { content: "=EF=83=8D"; }

.fa-undo::before { content: "=EF=83=A2"; }

.fa-undo-alt::before { content: "=EF=8B=AA"; }

.fa-uniregistry::before { content: "=EF=90=84"; }

.fa-unity::before { content: "=EE=81=89"; }

.fa-universal-access::before { content: "=EF=8A=9A"; }

.fa-university::before { content: "=EF=86=9C"; }

.fa-unlink::before { content: "=EF=84=A7"; }

.fa-unlock::before { content: "=EF=82=9C"; }

.fa-unlock-alt::before { content: "=EF=84=BE"; }

.fa-unsplash::before { content: "=EE=81=BC"; }

.fa-untappd::before { content: "=EF=90=85"; }

.fa-upload::before { content: "=EF=82=93"; }

.fa-ups::before { content: "=EF=9F=A0"; }

.fa-usb::before { content: "=EF=8A=87"; }

.fa-user::before { content: "=EF=80=87"; }

.fa-user-alt::before { content: "=EF=90=86"; }

.fa-user-alt-slash::before { content: "=EF=93=BA"; }

.fa-user-astronaut::before { content: "=EF=93=BB"; }

.fa-user-check::before { content: "=EF=93=BC"; }

.fa-user-circle::before { content: "=EF=8A=BD"; }

.fa-user-clock::before { content: "=EF=93=BD"; }

.fa-user-cog::before { content: "=EF=93=BE"; }

.fa-user-edit::before { content: "=EF=93=BF"; }

.fa-user-friends::before { content: "=EF=94=80"; }

.fa-user-graduate::before { content: "=EF=94=81"; }

.fa-user-injured::before { content: "=EF=9C=A8"; }

.fa-user-lock::before { content: "=EF=94=82"; }

.fa-user-md::before { content: "=EF=83=B0"; }

.fa-user-minus::before { content: "=EF=94=83"; }

.fa-user-ninja::before { content: "=EF=94=84"; }

.fa-user-nurse::before { content: "=EF=A0=AF"; }

.fa-user-plus::before { content: "=EF=88=B4"; }

.fa-user-secret::before { content: "=EF=88=9B"; }

.fa-user-shield::before { content: "=EF=94=85"; }

.fa-user-slash::before { content: "=EF=94=86"; }

.fa-user-tag::before { content: "=EF=94=87"; }

.fa-user-tie::before { content: "=EF=94=88"; }

.fa-user-times::before { content: "=EF=88=B5"; }

.fa-users::before { content: "=EF=83=80"; }

.fa-users-cog::before { content: "=EF=94=89"; }

.fa-users-slash::before { content: "=EE=81=B3"; }

.fa-usps::before { content: "=EF=9F=A1"; }

.fa-ussunnah::before { content: "=EF=90=87"; }

.fa-utensil-spoon::before { content: "=EF=8B=A5"; }

.fa-utensils::before { content: "=EF=8B=A7"; }

.fa-vaadin::before { content: "=EF=90=88"; }

.fa-vector-square::before { content: "=EF=97=8B"; }

.fa-venus::before { content: "=EF=88=A1"; }

.fa-venus-double::before { content: "=EF=88=A6"; }

.fa-venus-mars::before { content: "=EF=88=A8"; }

.fa-vest::before { content: "=EE=82=85"; }

.fa-vest-patches::before { content: "=EE=82=86"; }

.fa-viacoin::before { content: "=EF=88=B7"; }

.fa-viadeo::before { content: "=EF=8A=A9"; }

.fa-viadeo-square::before { content: "=EF=8A=AA"; }

.fa-vial::before { content: "=EF=92=92"; }

.fa-vials::before { content: "=EF=92=93"; }

.fa-viber::before { content: "=EF=90=89"; }

.fa-video::before { content: "=EF=80=BD"; }

.fa-video-slash::before { content: "=EF=93=A2"; }

.fa-vihara::before { content: "=EF=9A=A7"; }

.fa-vimeo::before { content: "=EF=90=8A"; }

.fa-vimeo-square::before { content: "=EF=86=94"; }

.fa-vimeo-v::before { content: "=EF=89=BD"; }

.fa-vine::before { content: "=EF=87=8A"; }

.fa-virus::before { content: "=EE=81=B4"; }

.fa-virus-slash::before { content: "=EE=81=B5"; }

.fa-viruses::before { content: "=EE=81=B6"; }

.fa-vk::before { content: "=EF=86=89"; }

.fa-vnv::before { content: "=EF=90=8B"; }

.fa-voicemail::before { content: "=EF=A2=97"; }

.fa-volleyball-ball::before { content: "=EF=91=9F"; }

.fa-volume-down::before { content: "=EF=80=A7"; }

.fa-volume-mute::before { content: "=EF=9A=A9"; }

.fa-volume-off::before { content: "=EF=80=A6"; }

.fa-volume-up::before { content: "=EF=80=A8"; }

.fa-vote-yea::before { content: "=EF=9D=B2"; }

.fa-vr-cardboard::before { content: "=EF=9C=A9"; }

.fa-vuejs::before { content: "=EF=90=9F"; }

.fa-walking::before { content: "=EF=95=94"; }

.fa-wallet::before { content: "=EF=95=95"; }

.fa-warehouse::before { content: "=EF=92=94"; }

.fa-watchman-monitoring::before { content: "=EE=82=87"; }

.fa-water::before { content: "=EF=9D=B3"; }

.fa-wave-square::before { content: "=EF=A0=BE"; }

.fa-waze::before { content: "=EF=A0=BF"; }

.fa-weebly::before { content: "=EF=97=8C"; }

.fa-weibo::before { content: "=EF=86=8A"; }

.fa-weight::before { content: "=EF=92=96"; }

.fa-weight-hanging::before { content: "=EF=97=8D"; }

.fa-weixin::before { content: "=EF=87=97"; }

.fa-whatsapp::before { content: "=EF=88=B2"; }

.fa-whatsapp-square::before { content: "=EF=90=8C"; }

.fa-wheelchair::before { content: "=EF=86=93"; }

.fa-whmcs::before { content: "=EF=90=8D"; }

.fa-wifi::before { content: "=EF=87=AB"; }

.fa-wikipedia-w::before { content: "=EF=89=A6"; }

.fa-wind::before { content: "=EF=9C=AE"; }

.fa-window-close::before { content: "=EF=90=90"; }

.fa-window-maximize::before { content: "=EF=8B=90"; }

.fa-window-minimize::before { content: "=EF=8B=91"; }

.fa-window-restore::before { content: "=EF=8B=92"; }

.fa-windows::before { content: "=EF=85=BA"; }

.fa-wine-bottle::before { content: "=EF=9C=AF"; }

.fa-wine-glass::before { content: "=EF=93=A3"; }

.fa-wine-glass-alt::before { content: "=EF=97=8E"; }

.fa-wix::before { content: "=EF=97=8F"; }

.fa-wizards-of-the-coast::before { content: "=EF=9C=B0"; }

.fa-wodu::before { content: "=EE=82=88"; }

.fa-wolf-pack-battalion::before { content: "=EF=94=94"; }

.fa-won-sign::before { content: "=EF=85=99"; }

.fa-wordpress::before { content: "=EF=86=9A"; }

.fa-wordpress-simple::before { content: "=EF=90=91"; }

.fa-wpbeginner::before { content: "=EF=8A=97"; }

.fa-wpexplorer::before { content: "=EF=8B=9E"; }

.fa-wpforms::before { content: "=EF=8A=98"; }

.fa-wpressr::before { content: "=EF=8F=A4"; }

.fa-wrench::before { content: "=EF=82=AD"; }

.fa-x-ray::before { content: "=EF=92=97"; }

.fa-xbox::before { content: "=EF=90=92"; }

.fa-xing::before { content: "=EF=85=A8"; }

.fa-xing-square::before { content: "=EF=85=A9"; }

.fa-y-combinator::before { content: "=EF=88=BB"; }

.fa-yahoo::before { content: "=EF=86=9E"; }

.fa-yammer::before { content: "=EF=A1=80"; }

.fa-yandex::before { content: "=EF=90=93"; }

.fa-yandex-international::before { content: "=EF=90=94"; }

.fa-yarn::before { content: "=EF=9F=A3"; }

.fa-yelp::before { content: "=EF=87=A9"; }

.fa-yen-sign::before { content: "=EF=85=97"; }

.fa-yin-yang::before { content: "=EF=9A=AD"; }

.fa-yoast::before { content: "=EF=8A=B1"; }

.fa-youtube::before { content: "=EF=85=A7"; }

.fa-youtube-square::before { content: "=EF=90=B1"; }

.fa-zhihu::before { content: "=EF=98=BF"; }

.sr-only { border: 0px; clip: rect(0px, 0px, 0px, 0px); height: 1px; margin=
: -1px; overflow: hidden; padding: 0px; position: absolute; width: 1px; }

.sr-only-focusable:active, .sr-only-focusable:focus { clip: auto; height: a=
uto; margin: 0px; overflow: visible; position: static; width: auto; }

@font-face { font-family: "Font Awesome 5 Brands"; font-style: normal; font=
-weight: 400; font-display: block; src: url("../webfonts/fa-brands-400.woff=
2") format("woff2"), url("../webfonts/fa-brands-400.woff") format("woff"), =
url("../webfonts/fa-brands-400.ttf") format("truetype"); }

.fab { font-family: "Font Awesome 5 Brands"; }

@font-face { font-family: "Font Awesome 5 Free"; font-style: normal; font-w=
eight: 400; font-display: block; src: url("../webfonts/fa-regular-400.woff2=
") format("woff2"), url("../webfonts/fa-regular-400.woff") format("woff"), =
url("../webfonts/fa-regular-400.ttf") format("truetype"); }

.fab, .far { font-weight: 400; }

@font-face { font-family: "Font Awesome 5 Free"; font-style: normal; font-w=
eight: 900; font-display: block; src: url("../webfonts/fa-solid-900.woff2")=
 format("woff2"), url("../webfonts/fa-solid-900.woff") format("woff"), url(=
"../webfonts/fa-solid-900.ttf") format("truetype"); }

.fa, .far, .fas { font-family: "Font Awesome 5 Free"; }

.fa, .fas { font-weight: 900; }
------MultipartBoundary--p77pSlE97gVxA9vHZ3llR7beGEIQoxVXk04dgXijz8----
Content-Type: image/svg+xml
Content-Transfer-Encoding: quoted-printable
Content-Location: https://pytorch.org/docs/1.13/_static/images/view-page-source-icon.svg

<?xml version=3D"1.0" encoding=3D"utf-8"?>
<!-- Generator: Adobe Illustrator 22.1.0, SVG Export Plug-In . SVG Version:=
 6.00 Build 0)  -->
<svg width=3D"20px" height=3D"20px" version=3D"1.1" id=3D"Layer_1" xmlns=3D=
"http://www.w3.org/2000/svg" xmlns:xlink=3D"http://www.w3.org/1999/xlink" x=
=3D"0px" y=3D"0px"
	 viewBox=3D"0 0 300 225.9" style=3D"enable-background:new 0 0 300 225.9;" =
xml:space=3D"preserve">
<style type=3D"text/css">
	.st0{fill:#EE4C2C;}
</style>
<g>
	<path class=3D"st0" d=3D"M0,0v225.9h300V0H0z M282.4,208.3H17.6V17.6h264.7V=
208.3z"/>
	<polygon class=3D"st0" points=3D"64.4,166.1 76.8,178.5 142.4,112.9 76.8,47=
.3 64.4,59.8 64.4,59.8 117.5,112.9 	"/>
	<rect x=3D"158.8" y=3D"156.4" class=3D"st0" width=3D"88.2" height=3D"17.6"=
/>
</g>
</svg>=0A
------MultipartBoundary--p77pSlE97gVxA9vHZ3llR7beGEIQoxVXk04dgXijz8----
Content-Type: image/svg+xml
Content-Transfer-Encoding: quoted-printable
Content-Location: https://pytorch.org/docs/1.13/_static/images/pytorch-x.svg

<?xml version=3D"1.0" encoding=3D"utf-8"?>
<!-- Generator: Adobe Illustrator 23.0.1, SVG Export Plug-In . SVG Version:=
 6.00 Build 0)  -->
<svg version=3D"1.1" id=3D"Layer_1" xmlns=3D"http://www.w3.org/2000/svg" xm=
lns:xlink=3D"http://www.w3.org/1999/xlink" x=3D"0px" y=3D"0px"
	 viewBox=3D"0 0 200 200" style=3D"enable-background:new 0 0 200 200;" xml:=
space=3D"preserve">
<style type=3D"text/css">
	.st0{fill:#EE4C2A;}
</style>
<rect x=3D"-27.55" y=3D"90.14" transform=3D"matrix(0.7071 0.7071 -0.7071 0.=
7071 100 -41.4214)" class=3D"st0" width=3D"255.1" height=3D"19.72"/>
<rect x=3D"-27.55" y=3D"90.14" transform=3D"matrix(-0.7071 0.7071 -0.7071 -=
0.7071 241.4214 100)" class=3D"st0" width=3D"255.1" height=3D"19.72"/>
</svg>=0A
------MultipartBoundary--p77pSlE97gVxA9vHZ3llR7beGEIQoxVXk04dgXijz8------
