#include <windows.h>
#include <stdio.h>

LRESULT CALLBACK MyWndProc(
	HWND hwnd,
	UINT uMsg,
	WPARAM wParam,
	LPARAM lParam
);

int WINAPI WinMain(	
	HINSTANCE hInstance,
	HINSTANCE hPrevInstance,
	LPSTR lpCmdLine,
	int nCmdShow
)
{
	WNDCLASS MyWnd;
	MyWnd.cbClsExtra = NULL;
	MyWnd.cbWndExtra = NULL;
	MyWnd.hbrBackground = (HBRUSH)GetStockObject(WHITE_BRUSH);
	MyWnd.hCursor = LoadCursor(NULL, IDC_CROSS);
	MyWnd.hIcon = LoadIcon(NULL, IDI_QUESTION);
	MyWnd.hInstance = hInstance;
	MyWnd.lpfnWndProc = MyWndProc;
	MyWnd.lpszClassName = "Hello";
	MyWnd.lpszMenuName = NULL;
	MyWnd.style = CS_HREDRAW | CS_VREDRAW;
	RegisterClass(&MyWnd);
	//子类
	WNDCLASS MyWnd_child;
	MyWnd_child.cbClsExtra = NULL;
	MyWnd_child.cbWndExtra = NULL;
	MyWnd_child.hbrBackground = (HBRUSH)GetStockObject(WHITE_BRUSH);
	MyWnd_child.hCursor = LoadCursor(NULL, IDC_CROSS);
	MyWnd_child.hIcon = LoadIcon(NULL, IDI_QUESTION);
	MyWnd_child.hInstance = hInstance;
	MyWnd_child.lpfnWndProc = DefWindowProc;
	MyWnd_child.lpszClassName = "ZJW";
	MyWnd_child.lpszMenuName = NULL;
	MyWnd_child.style = CS_HREDRAW | CS_VREDRAW;
	RegisterClass(&MyWnd_child);

	HWND hWnd;
	hWnd = CreateWindow("Hello","Windows编程",WS_OVERLAPPEDWINDOW,
						0,0,800,600,
						NULL,NULL,hInstance,NULL);
	HWND hWnd_child;
	hWnd_child = CreateWindow("ZJW","Windows编程",WS_CHILD | WS_VISIBLE | WS_OVERLAPPEDWINDOW,
						0,0,400,300,
						hWnd,NULL,hInstance,NULL);


	

ShowWindow(hWnd,SW_SHOW);
UpdateWindow(hWnd);

MSG msg;
	while(GetMessage(&msg,NULL,0,0))
	{
	TranslateMessage(&msg);
	DispatchMessage(&msg);
}

return 0;

}


LRESULT CALLBACK MyWndProc(
	HWND hwnd,
	UINT uMsg,
	WPARAM wParam,
	LPARAM lParam
)
{
	switch(uMsg){
	case WM_PAINT:
		HDC hpaintDC;
		PAINTSTRUCT ps;
		hpaintDC=BeginPaint(hwnd,&ps);
		TextOut(hpaintDC,255,50,"你好你好",strlen("你好你好"));
		EndPaint(hwnd,&ps);
		break;
	case WM_CHAR:
		char str[255];
		sprintf(str,"char is %d",wParam);
		MessageBox(hwnd,str,"按键响应",0);
		break;
	case WM_LBUTTONDOWN:
		MessageBox(hwnd,"鼠标左键按下","鼠标响应",0);
		HDC hDC;
		hDC = GetDC(hwnd);
		TextOut(hDC,255,100,"刚刚按了鼠标左键",strlen("刚刚按了鼠标左键"));
		ReleaseDC(hwnd,hDC);
		break;
	case WM_CLOSE:
		if(IDYES == MessageBox(hwnd,"真的要退出吗？","退出",MB_YESNO))
		DestroyWindow(hwnd);
		break;
	case WM_DESTROY:
		PostQuitMessage(0);
		break;
	default:
	return DefWindowProc(hwnd,uMsg,wParam,lParam);

}
return 0;
}